<?xml version="1.0"?>
<!--!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "project.dtd"-->

<project name="ivil - Interactive verification on intermediate language" default="nonnull" basedir=".">

  <property name="compile.debug" value="true" />
  <property name="compile.nonnullchecks" value="remove this line to switchoff" />
 
  <target name="init">
    <mkdir dir="classes"/>
    <mkdir dir="classes-test"/>
    <mkdir dir="genSrc"/> 
    <uptodate property="javacc.notRequired" targetFile="genSrc/de/uka/iti/pseudo/parser/Parser.java">
      <srcfiles dir="core/de/uka/iti/pseudo/parser/" includes="*.jj"/>
    </uptodate>
  </target>
	
  <target name="build" depends="init, javacc, copy" description="compiles the sources">
    <javac destdir="classes" debug="${compile.debug}">
      <src path="core" />
      <src path="genSrc" />
      <compilerarg value="-Xlint"/>
      <classpath>
      	<pathelement path="classes" />
      </classpath>
    </javac>
    <javac srcdir="cmd" destdir="classes" debug="${compile.debug}">
      <classpath>
      	<pathelement path="classes" />
      </classpath>
      <compilerarg value="-Xlint"/>
    </javac>
     <javac srcdir="gui" destdir="classes" debug="${compile.debug}">
      <classpath>
        <pathelement path="lib/javadocking.jar" />
      	<pathelement path="classes" />
      </classpath>
      <compilerarg value="-Xlint"/>
    </javac>
 </target>
	
  <target name="nonnull" depends="build" description="patches the class files with r/t checks" if="compile.nonnullchecks">
    <java classname="nonnull.NonNullPatch">
      <arg value="classes"/>
      <classpath>
        <pathelement location="lib/nonnull.jar"/>
      </classpath>
    </java> 
  </target>
	
  <target name="javacc" depends="init" unless="javacc.notRequired">
    <concat destfile="genSrc/de/uka/iti/pseudo/parser/Parser.jj">
      <fileset file="core/de/uka/iti/pseudo/parser/ParserHead.jj"/>
      <fileset file="core/de/uka/iti/pseudo/parser/FileParser.jj"/>
      <fileset file="core/de/uka/iti/pseudo/parser/TermParser.jj"/>
      <fileset file="core/de/uka/iti/pseudo/parser/ProgramParser.jj"/> 
    </concat>
    <exec executable="javacc">
      <arg value="-OUTPUT_DIRECTORY=genSrc/de/uka/iti/pseudo/parser"/>
      <arg value="genSrc/de/uka/iti/pseudo/parser/Parser.jj"/>
    </exec>
  </target>
	
  <target name="copy" depends="init">
    <copy todir="classes">
      <fileset dir="core">
        <include name="**/*.properties" />
        <include name="**/*.smt" />
        <include name="META-INF/**" />     
      </fileset>
      <fileset dir="gui">
        <include name="**/*.gif" />
        <include name="**/*.png" />
    	<include name="**/*.properties" />
      </fileset>  
    </copy>
  </target>

  <target name="jar" depends="build" description="creates the jar file">
    <jar jarfile="ivil.jar" basedir="classes">
      <manifest>
        <!-- Who is building this jar? -->
        <attribute name="Built-By" value="${user.name}"/>
        <!-- Information about the program itself -->
        <attribute name="Implementation-Vendor" value="ITI, Universitaet Karlsruhe"/>
        <attribute name="Implementation-Title" value="Pseudo/BooKeY"/>
        <attribute name="Implementation-Version" value="0.0"/>
        <attribute name="Class-Path" value="lib/javadocking.jar lib/nonnull.jar"/>
        <attribute name="Main-Class" value="de.uka.iti.pseudo.gui.Main"/>
        <attribute name="SplashScreen-Image" value="de/uka/iti/pseudo/gui/img/logo.png"/>
      </manifest>
    </jar>
  </target>

  <target name="sign" depends="jar" description="signs the jar file">
    <signjar jar="ivil.jar" alias="mu2010" storepass="keystore" />
  </target> 

  <target name="dist" depends="jar" description="package the software to deliver it">
    <zip destfile="ivil.zip" >
      <fileset dir="." includes="examples/**" />
      <fileset dir="." includes="sys/**" />
      <fileset dir="." includes="lib/javadocking.jar" />
      <fileset dir="." includes="ivil.jar" />
    </zip>
  </target>

  <target name="build-test" depends="build" description="build test cases">
    <javac srcdir="test" destdir="classes-test" debug="${compile.debug}" sourcepath="test">
      <classpath>
        <pathelement location="lib/junit.jar" />
      	<pathelement path="classes" />
      </classpath>
    </javac>
  </target>

  <target name="copy-test" depends="init">
    <copy todir="classes-test">
      <fileset dir="test">
        <include name="**/*.p" />
        <include name="**/*.txt" />
      </fileset>
    </copy>
  </target>

  <target name="nonnull-test" depends="build-test" description="patches the class files with r/t checks" if="compile.nonnullchecks">
    <java classname="nonnull.NonNullPatch">
      <arg value="classes-test"/>
      <classpath>
        <pathelement location="lib/nonnull.jar"/>
      </classpath>
    </java> 
  </target>

	
  <target name="test" depends="build-test, nonnull-test, nonnull, copy-test" description="run junit tests">
    <junit printsummary="yes" fork="yes" haltonfailure="yes">
      <classpath>
        <pathelement path="classes"/>
        <pathelement path="classes-test"/>
        <!--<pathelement location="lib/javadocking.jar"/>-->
        <pathelement location="lib/nonnull.jar"/>
        <pathelement path="lib/junit.jar"/>
      </classpath>
      <test name="de.uka.iti.pseudo.AllTests"/>
      <formatter type="plain" />
    </junit>
  </target>

  <target name="javadoc" depends="init" description="Build Javadoc.">
    <mkdir dir="javadoc"/>
    <javadoc destdir="javadoc" linksource="yes">
      <sourcepath>
        <pathelement location="core"/>
      </sourcepath>
<!--      <fileset dir="core">
        <include name="**/*.java"/>
      </fileset>-->
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
    </javadoc>
  </target>

  <target name="clean">
    <delete dir="classes" />
    <delete dir="classes-test" />
    <delete dir="genSrc" />
  </target>

  <target name="clean-bak" description="Remove the backup files containing ~">
    <delete>
      <fileset dir="sys" includes="*.p~*"/>
      <fileset dir="examples" includes="*.p~*"/>
    </delete>
  </target>

  <target name="copyright" description="Update copyright notes in java files">
    <taskdef name="copyright" classname="CopyrightTask" classpath="lib"> </taskdef>
    <copyright file="LICENSE.header">
      <fileset dir="core" includes="**/*.java"/>
      <fileset dir="test" includes="**/*.java"/>
      <fileset dir="gui" includes="**/*.java"/>
      <fileset dir="cmd" includes="**/*.java"/>
    </copyright>
  </target>


</project>
