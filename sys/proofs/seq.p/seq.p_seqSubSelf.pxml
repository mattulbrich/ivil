<?xml version="1.0"?>
<proof format="1"><info>
    <date>Thu Jun 28 15:22:45 CEST 2012</date>
    <version>0.0</version>
    <problem> |- $not($not($eq(seqSub(a,0,seqLen(a)),a)))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="seqSubDef" path="" id="0">
      <find>S.0.0.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%a">a as seq('v1)</schemavariable>
      <schemavariable name="%from">0 as int</schemavariable>
      <schemavariable name="%to">seqLen(a as seq('v1)) as int</schemavariable>
      <typevariable name="3">'v1</typevariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="a">seq('v1)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqExtensionality" path="" id="1">
      <find>S.0.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%s1">(\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)</schemavariable>
      <schemavariable name="%s2">a as seq('v1)</schemavariable>
      <typevariable name="s2">seq('v1)</typevariable>
      <typevariable name="s1">seq('v1)</typevariable>
      <typevariable name="8">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="" id="2">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqGet(a as seq('v1),\var x as int) as 'v1</schemavariable>
      <schemavariable name="%b">seqLen(a as seq('v1)) as int</schemavariable>
      <typevariable name="t">'v1</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_not" path="" id="3">
      <find>S.0</find>
      <schemavariable name="%b">$and($eq(cond($lte(0 as int,seqLen(a as seq('v1)) as int) as bool,$minus(seqLen(a as seq('v1)) as int,0 as int) as int,0 as int) as int,seqLen(a as seq('v1)) as int) as bool,(\forall i as int;$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)) as int) as bool) as bool,$eq(seqGet((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1),\var i as int) as 'v1,seqGet(a as seq('v1),\var i as int) as 'v1) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="4">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,seqLen(a as seq('v1)) as int) as bool,$minus(seqLen(a as seq('v1)) as int,0 as int) as int,0 as int) as int,seqLen(a as seq('v1)) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall i as int;$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)) as int) as bool) as bool,$eq(seqGet((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1),\var i as int) as 'v1,seqGet(a as seq('v1),\var i as int) as 'v1) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0" id="5">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(seqLen(a as seq('v1)) as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,seqLen(a as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0" id="6">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1" id="7">
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1" id="8">
      <find>S.0</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)) as int) as bool) as bool,$eq(seqGet((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1),\var i as int) as 'v1,seqGet(a as seq('v1),\var i as int) as 'v1) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1" id="9">
      <find>S.0</find>
      <schemavariable name="%a">$and($lte(0 as int,i as int) as bool,$lt(i as int,seqLen((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1),i as int) as 'v1,seqGet(a as seq('v1),i as int) as 'v1) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="10">
      <find>A.0</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen((\seqDef x as int;0 as int;seqLen(a as seq('v1)) as int;seqGet(a as seq('v1),\var x as int) as 'v1) as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="1" id="11">
      <find>A.1.1</find>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqGet(a as seq('v1),\var x as int) as 'v1</schemavariable>
      <schemavariable name="%b">seqLen(a as seq('v1)) as int</schemavariable>
      <typevariable name="t">'v1</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="1" id="12">
      <find>S.0.0</find>
      <schemavariable name="%j">i as int</schemavariable>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqGet(a as seq('v1),\var x as int) as 'v1</schemavariable>
      <schemavariable name="%b">seqLen(a as seq('v1)) as int</schemavariable>
      <typevariable name="t">'v1</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1" id="13">
    </ruleApplication>
  </steps>
</proof>