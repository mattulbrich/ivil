<?xml version="1.0"?>
<proof format="1"><info>
    <date>Wed Jul 04 23:06:51 CEST 2012</date>
    <version>0.0</version>
    <problem> |- $impl($and($and(isPerm(a,b),seqDom(a,i)),seqDom(a,j)),isPerm(seqSwap(a,i,j),b))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="impl_right" path="" id="0">
      <find>S.0</find>
      <schemavariable name="%a">$and($and(isPerm(a as seq('v2),b as seq('v2)) as bool,seqDom(a as seq('v2),i as int) as bool) as bool,seqDom(a as seq('v2),j as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">isPerm(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),b as seq('v2)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="" id="1">
      <find>A.0</find>
      <schemavariable name="%a">$and(isPerm(a as seq('v2),b as seq('v2)) as bool,seqDom(a as seq('v2),i as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqDom(a as seq('v2),j as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="" id="2">
      <find>A.0</find>
      <schemavariable name="%a">isPerm(a as seq('v2),b as seq('v2)) as bool</schemavariable>
      <schemavariable name="%b">seqDom(a as seq('v2),i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="isPerm_def" path="" id="3">
      <find>S.0</find>
      <schemavariable name="%a">seqSwap(a as seq('v2),i as int,j as int) as seq('v2)</schemavariable>
      <schemavariable name="%b">b as seq('v2)</schemavariable>
      <typevariable name="b">seq('v2)</typevariable>
      <typevariable name="v14">'v2</typevariable>
      <typevariable name="a">seq('v2)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="4">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(seqSwap(a as seq('v2),i as int,j as int) as seq('v2)) as int,seqLen(b as seq('v2)) as int) as bool</schemavariable>
      <schemavariable name="%b">(\exists p as seq(int);$and($and(isPermN(\var p as seq(int)) as bool,$eq(seqLen(\var p as seq(int)) as int,seqLen(seqSwap(a as seq('v2),i as int,j as int) as seq('v2)) as int) as bool) as bool,(\forall i as int;$impl(seqDom(\var p as seq(int),\var i as int) as bool,$eq(seqGet(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(\var p as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="lenOfSwap" path="0" id="5">
      <find>S.0.0</find>
      <schemavariable name="%j">j as int</schemavariable>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%a">a as seq('v2)</schemavariable>
      <typevariable name="v2">'v2</typevariable>
      <typevariable name="a">seq('v2)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="isPerm_def" path="0" id="6">
      <find>A.0</find>
      <schemavariable name="%a">a as seq('v2)</schemavariable>
      <schemavariable name="%b">b as seq('v2)</schemavariable>
      <typevariable name="b">seq('v2)</typevariable>
      <typevariable name="v14">'v2</typevariable>
      <typevariable name="a">seq('v2)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0" id="7">
    </ruleApplication>
    <ruleApplication rule="isPerm_def" path="1" id="8">
      <find>A.0</find>
      <schemavariable name="%a">a as seq('v2)</schemavariable>
      <schemavariable name="%b">b as seq('v2)</schemavariable>
      <typevariable name="b">seq('v2)</typevariable>
      <typevariable name="v14">'v2</typevariable>
      <typevariable name="a">seq('v2)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="9">
      <find>A.0</find>
      <schemavariable name="%a">$eq(seqLen(a as seq('v2)) as int,seqLen(b as seq('v2)) as int) as bool</schemavariable>
      <schemavariable name="%b">(\exists p as seq(int);$and($and(isPermN(\var p as seq(int)) as bool,$eq(seqLen(\var p as seq(int)) as int,seqLen(a as seq('v2)) as int) as bool) as bool,(\forall i as int;$impl(seqDom(\var p as seq(int),\var i as int) as bool,$eq(seqGet(a as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(\var p as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1" id="10">
      <find>A.3</find>
      <schemavariable name="%x">\var p as seq(int)</schemavariable>
      <schemavariable name="%b">$and($and(isPermN(\var p as seq(int)) as bool,$eq(seqLen(\var p as seq(int)) as int,seqLen(a as seq('v2)) as int) as bool) as bool,(\forall i as int;$impl(seqDom(\var p as seq(int),\var i as int) as bool,$eq(seqGet(a as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(\var p as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">seq(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="skolemName(\var p as seq(int))">p</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="11">
      <find>A.3</find>
      <schemavariable name="%a">$and(isPermN(p as seq(int)) as bool,$eq(seqLen(p as seq(int)) as int,seqLen(a as seq('v2)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\forall i as int;$impl(seqDom(p as seq(int),\var i as int) as bool,$eq(seqGet(a as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(p as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="12">
      <find>A.3</find>
      <schemavariable name="%a">isPermN(p as seq(int)) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqLen(p as seq(int)) as int,seqLen(a as seq('v2)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_right" path="1" id="13">
      <find>S.0</find>
      <schemavariable name="%inst">seqSwap(p as seq(int),i as int,j as int) as seq(int)</schemavariable>
      <schemavariable name="%x">\var p as seq(int)</schemavariable>
      <schemavariable name="%b">$and($and(isPermN(\var p as seq(int)) as bool,$eq(seqLen(\var p as seq(int)) as int,seqLen(seqSwap(a as seq('v2),i as int,j as int) as seq('v2)) as int) as bool) as bool,(\forall i as int;$impl(seqDom(\var p as seq(int),\var i as int) as bool,$eq(seqGet(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(\var p as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">seq(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">seq(int)</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1" id="14">
      <find>S.1</find>
      <schemavariable name="%a">$and(isPermN(seqSwap(p as seq(int),i as int,j as int) as seq(int)) as bool,$eq(seqLen(seqSwap(p as seq(int),i as int,j as int) as seq(int)) as int,seqLen(seqSwap(a as seq('v2),i as int,j as int) as seq('v2)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\forall i as int;$impl(seqDom(seqSwap(p as seq(int),i as int,j as int) as seq(int),\var i as int) as bool,$eq(seqGet(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(seqSwap(p as seq(int),i as int,j as int) as seq(int),\var i as int) as int) as 'v2) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0" id="15">
      <find>S.1</find>
      <schemavariable name="%a">isPermN(seqSwap(p as seq(int),i as int,j as int) as seq(int)) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqLen(seqSwap(p as seq(int),i as int,j as int) as seq(int)) as int,seqLen(seqSwap(a as seq('v2),i as int,j as int) as seq('v2)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="isPermN_swap" path="1,0,0" id="16">
      <find>S.1</find>
      <schemavariable name="%j">j as int</schemavariable>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%a">p as seq(int)</schemavariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0" id="17">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1" id="18">
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,1" id="19">
      <find>S.1</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$impl(seqDom(seqSwap(p as seq(int),i as int,j as int) as seq(int),\var i as int) as bool,$eq(seqGet(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),\var i as int) as 'v2,seqGet(b as seq('v2),seqGet(seqSwap(p as seq(int),i as int,j as int) as seq(int),\var i as int) as int) as 'v2) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="skolemName(\var i as int)">i1</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,1" id="20">
      <find>S.1</find>
      <schemavariable name="%a">seqDom(seqSwap(p as seq(int),i as int,j as int) as seq(int),i1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSwap(a as seq('v2),i as int,j as int) as seq('v2),i1 as int) as 'v2,seqGet(b as seq('v2),seqGet(seqSwap(p as seq(int),i as int,j as int) as seq(int),i1 as int) as int) as 'v2) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="getOfSwap" path="1,1" id="21">
      <find>S.1.0</find>
      <schemavariable name="%k">i1 as int</schemavariable>
      <schemavariable name="%j">j as int</schemavariable>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%a">a as seq('v2)</schemavariable>
      <typevariable name="a">seq('v2)</typevariable>
      <typevariable name="v12">'v2</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="i">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1" id="22">
    </ruleApplication>
  </steps>
</proof>