<?xml version="1.0"?>
<proof format="1"><info>
    <date>Mon Jul 02 23:50:10 CEST 2012</date>
    <version>0.0</version>
    <problem>$eq(setA,seqAsSet(seqC)) |- [0;C][&lt;0;A&gt;]$eq(sumA,sumC)</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="refinement" path="" id="0">
      <find>S.0</find>
      <schemavariable name="%phi">$eq(sumA as int,sumC as int) as bool</schemavariable>
      <schemavariable name="%C">[0;C]([&lt;0;A&gt;]($eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%A">[&lt;0;A&gt;]($eq(sumA as int,sumC as int) as bool) as bool</schemavariable>
      <typevariable name="A">bool</typevariable>
      <typevariable name="C">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="1">
      <find>S.0.1</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }({ var := 42 as int }($impl($and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool,[9;C']([&lt;10;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="2">
      <find>S.0.1.1.6</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="3">
      <find>S.0.1.1.7</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="4">
      <find>S.0.1.1.8</find>
      <schemavariable name="%t">42 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := { sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int }(0 as int) || $markC := { sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int }(0 as int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="" id="5">
      <find>A.0</find>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="" id="6">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;0;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="" id="7">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;1;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="8">
      <find>S.0.0.0.0</find>
      <schemavariable name="%t">{ sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sumA := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="" id="9">
      <find>S.0.0.0.0.2</find>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="t">set(int)</typevariable>
      <schemaupdate name="U">{ sumA := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="" id="10">
      <find>S.0.1.1.0</find>
      <schemavariable name="%phi">[&lt;10;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[9;C']([&lt;10;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">3 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="" id="11">
      <find>S.0.1.1.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;10;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">2 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="12">
      <find>S.0</find>
      <schemavariable name="%a">{ $markA := 0 as int || $markC := 0 as int }([0;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <schemavariable name="%b">$impl($and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool,{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }([3;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0" id="13">
      <find>S.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[0;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0" id="14">
      <find>A.1</find>
      <schemavariable name="%t">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0" id="15">
      <find>S.0.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[1;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ i := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0" id="16">
      <find>S.0</find>
      <schemavariable name="%t">{ i := 0 as int }([2;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0" id="17">
      <find>S.0.3</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0" id="18">
      <find>S.0.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[2;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0" id="19">
      <find>S.0</find>
      <schemavariable name="%t">{ sumC := 0 as int }([3;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0" id="20">
      <find>S.0.4</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0" id="21">
      <find>S.0</find>
      <schemavariable name="%k">10 as int</schemavariable>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[3;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%n">4 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0" id="22">
      <find>S.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[4;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="23">
      <find>A.2</find>
      <schemavariable name="%t">$lt(i as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0" id="24">
      <find>S.0.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[5;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumC := $plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="25">
      <find>S.0</find>
      <schemavariable name="%t">{ sumC := $plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int }([6;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="26">
      <find>S.0.4</find>
      <schemavariable name="%t">$plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="0,0" id="27">
      <find>S.0.4</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0" id="28">
      <find>S.0.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[6;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ i := $plus(i as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="29">
      <find>S.0</find>
      <schemavariable name="%t">{ i := $plus(i as int,1 as int) as int }([7;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="30">
      <find>S.0.4</find>
      <schemavariable name="%t">$plus(i as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="0,0" id="31">
      <find>S.0.4</find>
      <schemavariable name="%a">1 as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0" id="32">
      <find>S.0.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[7;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="33">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 1 as int }([8;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="34">
      <find>S.0.4</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0" id="35">
      <find>S.0.0</find>
      <schemavariable name="%a">[8;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%b">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="36">
      <find>S.0</find>
      <schemavariable name="%t">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="37">
      <find>S.0.5</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0" id="38">
      <find>S.0.6</find>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="t">set(int)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_goto2" path="0,0" id="39">
      <find>S.0</find>
      <schemavariable name="%k">11 as int</schemavariable>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">3 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0" id="40">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0" id="41">
      <find>S.0</find>
      <schemavariable name="%t">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0" id="42">
      <find>S.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0" id="43">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,setA as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0" id="44">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0" id="45">
      <find>S.0</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,0" id="46">
      <find>S.0</find>
      <schemavariable name="%b">$eq(setA as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0" id="47">
      <find>S.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0" id="48">
      <find>S.0</find>
      <assume>A.3</assume>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,setA as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1" id="49">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1" id="50">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1" id="51">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,1" id="52">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(0 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1" id="53">
      <find>S.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,1" id="54">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,0 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,1" id="55">
      <find>S.0</find>
      <schemavariable name="%a">$eq(0 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,1" id="56">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="forall_left" path="0,0,0,1" id="57">
      <find>A.3</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,setA as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1" id="58">
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,1" id="59">
      <find>S.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="60">
      <find>S.1</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,1,0" id="61">
      <find>S.1</find>
      <schemavariable name="%b">$eq(setA as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1,0" id="62">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,0" id="63">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,setA as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var x as int)">x3</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,0" id="64">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x3 as int,setA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,1,0" id="65">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%v">xA as int</schemavariable>
      <schemavariable name="%a">[&lt;4;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="dprg_assume" path="0,0,1,0" id="66">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;5;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(xA as int,sA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0" id="67">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;6;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := $plus(sumA as int,xA as int) as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0" id="68">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0" id="69">
      <find>S.0.0.0.0.1.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,0" id="70">
      <find>S.0.0.0.0.1.0.0.0</find>
      <schemavariable name="%a">[&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="71">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x as int;{ xA := \var x as int }($and($mem(xA as int,sA as set(int)) as bool,{ sumA := $plus(sumA as int,xA as int) as int }({ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }({ $markA := 1 as int }($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool)))) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0" id="72">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,0" id="73">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,$plus(0 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0" id="74">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,0" id="75">
      <find>S.0.0.1.0</find>
      <schemavariable name="%b">$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,$plus(0 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="0,0,1,0" id="76">
      <find>S.0.0.1.0.1.0.1</find>
      <schemavariable name="%a">\var x as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="resolve_int_literals" path="0,0,1,0" id="77">
      <find>S.0.0.1.0.1.1.1</find>
      <schemavariable name="%t">$gte(1 as int,0 as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0" id="78">
      <find>S.0.0.1.0.1.1</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0" id="79">
      <find>S.0.0.1.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0" id="80">
      <find>S.0.0.1.1</find>
      <schemavariable name="%b">$eq($plus(0 as int,\var x as int) as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0" id="81">
      <find>S.0.0.1</find>
      <schemavariable name="%a">$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,\var x as int) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right" path="0,0,1,0" id="82">
      <find>S.0</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$and($mem(\var x as int,setA as set(int)) as bool,$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,\var x as int) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="interact(%inst)">int</property>
      <property name="ivil.instantiation">seqGet(seqC,0) INTO (\exists x;$and($mem(\var x,setA),$and($eq($diff(setA,singleton(\var x)),seqAsSet(seqSub(seqC,1,seqLen(seqC)))),$and($eq(seqGet(seqC,0),\var x),(\forall a;$impl($and($lte(0,\var a),$lt(\var a,seqLen(seqC))),(\forall b;$impl($and($lte(0,\var b),$lt(\var b,seqLen(seqC))),$impl($eq(seqGet(seqC,\var a),seqGet(seqC,\var b)),$eq(\var a,\var b))))))))))</property>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0" id="83">
      <find>S.1.1.1.0</find>
      <schemavariable name="%t">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,0" id="84">
      <find>S.1.1.1</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0" id="85">
      <find>S.1</find>
      <schemavariable name="%a">$mem(seqGet(seqC as seq(int),0 as int) as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0" id="86">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1" id="87">
      <find>S.1</find>
      <schemavariable name="%a">$eq($diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="0,0,1,0,1,0" id="88">
      <find>S.1</find>
      <schemavariable name="%e">\var e as int</schemavariable>
      <schemavariable name="%a">$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)</schemavariable>
      <schemavariable name="%b">seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <typevariable name="e">int</typevariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equiv_to_eq" path="0,0,1,0,1,0" id="89">
      <find>S.1.0</find>
      <schemavariable name="%a">$mem(\var e as int,$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,0,1,0" id="90">
      <find>S.1</find>
      <schemavariable name="%x">\var e as int</schemavariable>
      <schemavariable name="%b">$eq($mem(\var e as int,$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)) as bool,$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var e as int)">e3</property>
    </ruleApplication>
    <ruleApplication rule="in_diff" path="0,0,1,0,1,0" id="91">
      <find>S.1.0</find>
      <schemavariable name="%x">e3 as int</schemavariable>
      <schemavariable name="%a">setA as set(int)</schemavariable>
      <schemavariable name="%b">singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)</schemavariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,1,0,1,0" id="92">
      <find>S.1.0.1.0</find>
      <schemavariable name="%y">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%x">e3 as int</schemavariable>
      <typevariable name="y">int</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="0,0,1,0,1,0" id="93">
      <find>S.1.1</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e3 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="0,0,1,0,1,0" id="94">
      <find>S.1.1.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="0,0,1,0,1,0" id="95">
      <find>S.1.1.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,1,0,1,0" id="96">
      <find>S.1.1.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="eq_to_imp" path="0,0,1,0,1,0,0" id="97">
      <find>S.1</find>
      <schemavariable name="%a">$and($mem(e3 as int,setA as set(int)) as bool,$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1,0,0" id="98">
      <find>S.1</find>
      <schemavariable name="%a">$impl($and($mem(e3 as int,setA as set(int)) as bool,$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool,(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$impl((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool) as bool,$and($mem(e3 as int,setA as set(int)) as bool,$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,0,1,0,0,0" id="99">
      <find>S.1</find>
      <schemavariable name="%a">$and($mem(e3 as int,setA as set(int)) as bool,$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,0" id="100">
      <find>A.5</find>
      <schemavariable name="%a">$mem(e3 as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,1,0,0,0" id="101">
      <find>A.6</find>
      <schemavariable name="%b">$eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_comm" path="0,0,1,0,1,0,0,0" id="102">
      <find>A.0</find>
      <schemavariable name="%u">setA as set(int)</schemavariable>
      <schemavariable name="%t">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,1,0,0,0" id="103">
      <find>A.3.1</find>
      <assume>A.0</assume>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,0,1,0,0,0" id="104">
      <find>A.0</find>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="0,0,1,0,1,0,0,0" id="105">
      <find>A.3</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">x3 as int</schemavariable>
      <schemavariable name="%s">seqC as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,0,1,0,0,0" id="106">
      <find>A.3</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$eq(seqGet(seqC as seq(int),\var i as int) as int,x3 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i11</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,0" id="107">
      <find>A.3</find>
      <schemavariable name="%a">$and($lte(0 as int,i11 as int) as bool,$lt(i11 as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqC as seq(int),i11 as int) as int,x3 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,0" id="108">
      <find>A.3</find>
      <schemavariable name="%a">$lte(0 as int,i11 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i11 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_comm" path="0,0,1,0,1,0,0,0" id="109">
      <find>A.0</find>
      <schemavariable name="%u">setA as set(int)</schemavariable>
      <schemavariable name="%t">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,1,0,0,0" id="110">
      <find>A.5.1</find>
      <assume>A.0</assume>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="0,0,1,0,1,0,0,0" id="111">
      <find>A.5</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e3 as int</schemavariable>
      <schemavariable name="%s">seqC as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,0,1,0,0,0" id="112">
      <find>A.0</find>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,0,1,0,0,0" id="113">
      <find>A.5</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$eq(seqGet(seqC as seq(int),\var i as int) as int,e3 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i12</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,0" id="114">
      <find>A.5</find>
      <schemavariable name="%a">$and($lte(0 as int,i12 as int) as bool,$lt(i12 as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqC as seq(int),i12 as int) as int,e3 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,0" id="115">
      <find>A.5</find>
      <schemavariable name="%a">$lte(0 as int,i12 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i12 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right" path="0,0,1,0,1,0,0,0" id="116">
      <find>S.1</find>
      <schemavariable name="%inst">$minus(i12 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,0,0,0" id="117">
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,0,1,0,0,1" id="118">
      <find>S.1</find>
      <schemavariable name="%a">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($mem(e3 as int,setA as set(int)) as bool,$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,0,1,0,0,1" id="119">
      <find>A.5</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i9</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,1" id="120">
      <find>A.5</find>
      <schemavariable name="%a">$and($lte(0 as int,i9 as int) as bool,$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($and($lte(0 as int,i9 as int) as bool,$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(i9 as int,1 as int) as int) as int,seqError as int) as int,e3 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,1" id="121">
      <find>A.5</find>
      <schemavariable name="%a">$lte(0 as int,i9 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,1,0,1,0,0,1" id="122">
      <find>A.6.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i9 as int,1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i9 as int) as bool,$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,1,0,0,1,0" id="123">
      <find>A.8</find>
      <schemavariable name="%a">$lte(0 as int,i9 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1,0,0,1,0" id="124">
      <find>S.1</find>
      <schemavariable name="%a">$mem(e3 as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,0,0,1,0,0" id="125">
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,0,1,0,0,1,0,1" id="126">
      <find>S.1</find>
      <schemavariable name="%b">$eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,0,1,0,0,1,0,1" id="127">
      <find>A.10</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%t">e3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,0,0,1,0,1" id="128">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,0,1,0,0,1,1" id="129">
      <find>A.6</find>
      <schemavariable name="%u">e3 as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1,0,0,1,1" id="130">
      <find>S.1</find>
      <schemavariable name="%a">$mem(e3 as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1,0,0,1,1,0" id="131">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i9 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,1,0,0,1,1,0,0" id="132">
      <find>S.2</find>
      <assume>A.5</assume>
      <schemavariable name="%b">$lte(0 as int,i9 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,1,0,0,1,1,0,1" id="133">
      <find>S.2</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,0,1,0,0,1,1,1" id="134">
      <find>S.1</find>
      <schemavariable name="%b">$eq(e3 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,0,1,0,0,1,1,1" id="135">
      <find>A.8</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%t">e3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,1,0,0,1,1,1" id="136">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i9 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,1,0,0,1,1,1,0" id="137">
      <find>S.1</find>
      <assume>A.5</assume>
      <schemavariable name="%b">$lte(0 as int,i9 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,1,0,0,1,1,1,1" id="138">
      <find>S.1</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lt(i9 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,0,1" id="139">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,1,1" id="140">
      <find>S.1</find>
      <assume>A.1</assume>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,1" id="141">
      <find>S.1.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1" id="142">
      <find>S.1</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1" id="143">
      <find>S.1.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,1" id="144">
      <find>S.1.1</find>
      <schemavariable name="%b">$eq(0 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1" id="145">
      <find>S.1.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,1" id="146">
      <find>S.1.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,0 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,1" id="147">
      <find>S.1</find>
      <schemavariable name="%a">$eq(0 as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,1,1" id="148">
      <find>S.1</find>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,1,1" id="149">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%v">xA as int</schemavariable>
      <schemavariable name="%a">[&lt;4;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="dprg_assume" path="0,0,1,1" id="150">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;5;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(xA as int,sA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,1" id="151">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;6;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := $plus(sumA as int,xA as int) as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,1" id="152">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,1" id="153">
      <find>S.0.0.0.0.1.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,1" id="154">
      <find>S.0.0.0.0.1.0.0.0</find>
      <schemavariable name="%a">[&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1" id="155">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x as int;{ xA := \var x as int }($and($mem(xA as int,sA as set(int)) as bool,{ sumA := $plus(sumA as int,xA as int) as int }({ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }({ $markA := 1 as int }($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool)))) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || sumC := seqGet(seqC as seq(int),0 as int) as int || i := 1 as int || $markC := 1 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1" id="156">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1" id="157">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,$plus(0 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1" id="158">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,1" id="159">
      <find>S.0.0.1.0</find>
      <schemavariable name="%b">$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,$plus(0 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="0,0,1,1" id="160">
      <find>S.0.0.1.0.1.0.1</find>
      <schemavariable name="%a">\var x as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="resolve_int_literals" path="0,0,1,1" id="161">
      <find>S.0.0.1.0.1.1.1</find>
      <schemavariable name="%t">$gte(1 as int,0 as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,1" id="162">
      <find>S.0.0.1.0.1.1</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1" id="163">
      <find>S.0.0.1.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1" id="164">
      <find>S.0.0.1.1</find>
      <schemavariable name="%b">$eq($plus(0 as int,\var x as int) as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,1" id="165">
      <find>S.0.0.1</find>
      <schemavariable name="%a">$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,\var x as int) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right" path="0,0,1,1" id="166">
      <find>S.0</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$and($mem(\var x as int,setA as set(int)) as bool,$and($eq($diff(setA as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(seqGet(seqC as seq(int),0 as int) as int,\var x as int) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="interact(%inst)">int</property>
      <property name="ivil.instantiation">seqGet(seqC,0) INTO (\exists x;$and($mem(\var x,setA),$and($eq($diff(setA,singleton(\var x)),seqAsSet(seqSub(seqC,1,seqLen(seqC)))),$and($eq(seqGet(seqC,0),\var x),(\forall a;$impl($and($lte(0,\var a),$lt(\var a,seqLen(seqC))),(\forall b;$impl($and($lte(0,\var b),$lt(\var b,seqLen(seqC))),$impl($eq(seqGet(seqC,\var a),seqGet(seqC,\var b)),$eq(\var a,\var b))))))))))</property>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1" id="167">
      <find>S.1.1.1.0</find>
      <schemavariable name="%t">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1" id="168">
      <find>S.1.1.1</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1" id="169">
      <find>S.1</find>
      <schemavariable name="%a">$mem(seqGet(seqC as seq(int),0 as int) as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,0" id="170">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1" id="171">
      <find>S.1</find>
      <schemavariable name="%a">$eq($diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="0,0,1,1,1,0" id="172">
      <find>S.1</find>
      <schemavariable name="%e">\var e as int</schemavariable>
      <schemavariable name="%a">$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)</schemavariable>
      <schemavariable name="%b">seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <typevariable name="e">int</typevariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equiv_to_eq" path="0,0,1,1,1,0" id="173">
      <find>S.1.0</find>
      <schemavariable name="%a">$mem(\var e as int,$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,1,1,0" id="174">
      <find>S.1</find>
      <schemavariable name="%x">\var e as int</schemavariable>
      <schemavariable name="%b">$eq($mem(\var e as int,$diff(setA as set(int),singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)) as set(int)) as bool,$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var e as int)">e</property>
    </ruleApplication>
    <ruleApplication rule="in_diff" path="0,0,1,1,1,0" id="175">
      <find>S.1.0</find>
      <schemavariable name="%x">e as int</schemavariable>
      <schemavariable name="%a">setA as set(int)</schemavariable>
      <schemavariable name="%b">singleton(seqGet(seqC as seq(int),0 as int) as int) as set(int)</schemavariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,1,1,1,0" id="176">
      <find>S.1.0.1.0</find>
      <schemavariable name="%y">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%x">e as int</schemavariable>
      <typevariable name="y">int</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="0,0,1,1,1,0" id="177">
      <find>S.1.1</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="0,0,1,1,1,0" id="178">
      <find>S.1.1.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="0,0,1,1,1,0" id="179">
      <find>S.1.1.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,1,1,1,0" id="180">
      <find>S.1.1.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="eq_to_imp" path="0,0,1,1,1,0,0" id="181">
      <find>S.1</find>
      <schemavariable name="%a">$and($mem(e as int,setA as set(int)) as bool,$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_comm" path="0,0,1,1,1,0,0" id="182">
      <find>A.0</find>
      <schemavariable name="%u">setA as set(int)</schemavariable>
      <schemavariable name="%t">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,1,1,0,0" id="183">
      <find>S.1.0.0.0.1</find>
      <assume>A.0</assume>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,0" id="184">
      <find>S.1</find>
      <schemavariable name="%a">$impl($and($mem(e as int,seqAsSet(seqC as seq(int)) as set(int)) as bool,$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool,(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$impl((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool) as bool,$and($mem(e as int,setA as set(int)) as bool,$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,1,1,0,0,0" id="185">
      <find>S.1</find>
      <schemavariable name="%a">$and($mem(e as int,seqAsSet(seqC as seq(int)) as set(int)) as bool,$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,0" id="186">
      <find>A.4</find>
      <schemavariable name="%a">$mem(e as int,seqAsSet(seqC as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,1,1,0,0,0" id="187">
      <find>A.5</find>
      <schemavariable name="%b">$eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,1,1,0,0,0" id="188">
      <find>A.0</find>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="0,0,1,1,1,0,0,0" id="189">
      <find>A.4</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e as int</schemavariable>
      <schemavariable name="%s">seqC as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,1,1,0,0,0" id="190">
      <find>A.4</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$eq(seqGet(seqC as seq(int),\var i as int) as int,e as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i7</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,0" id="191">
      <find>A.4</find>
      <schemavariable name="%a">$and($lte(0 as int,i7 as int) as bool,$lt(i7 as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqC as seq(int),i7 as int) as int,e as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,0" id="192">
      <find>A.4</find>
      <schemavariable name="%a">$lte(0 as int,i7 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i7 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right" path="0,0,1,1,1,0,0,0" id="193">
      <find>S.1</find>
      <schemavariable name="%inst">$minus(i7 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,0,0,0" id="194">
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,1,1,0,0,1" id="195">
      <find>S.1</find>
      <schemavariable name="%a">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($mem(e as int,setA as set(int)) as bool,$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,1,1,0,0,1" id="196">
      <find>A.0</find>
      <schemavariable name="%u">seqAsSet(seqC as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,1,1,0,0,1" id="197">
      <find>A.4</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i8</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,1" id="198">
      <find>A.4</find>
      <schemavariable name="%a">$and($lte(0 as int,i8 as int) as bool,$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($and($lte(0 as int,i8 as int) as bool,$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(i8 as int,1 as int) as int) as int,seqError as int) as int,e as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,1" id="199">
      <find>A.4</find>
      <schemavariable name="%a">$lte(0 as int,i8 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,1,1,1,0,0,1" id="200">
      <find>A.5.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i8 as int,1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i8 as int) as bool,$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,1,1,0,0,1,0" id="201">
      <find>A.7</find>
      <schemavariable name="%a">$lte(0 as int,i8 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,0,1,0" id="202">
      <find>S.1</find>
      <schemavariable name="%a">$mem(e as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,0,0,1,0,0" id="203">
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,1,1,0,0,1,0,1" id="204">
      <find>S.1</find>
      <schemavariable name="%b">$eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,1,1,0,0,1,0,1" id="205">
      <find>A.9</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%t">e as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,0,0,1,0,1" id="206">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,1,1,0,0,1,1" id="207">
      <find>A.5</find>
      <schemavariable name="%u">e as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,0,1,1" id="208">
      <find>S.1</find>
      <schemavariable name="%a">$mem(e as int,setA as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,0,1,1,0" id="209">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i8 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,0,1,1,0,0" id="210">
      <find>S.2</find>
      <assume>A.4</assume>
      <schemavariable name="%b">$lte(0 as int,i8 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,0,1,1,0,1" id="211">
      <find>S.2</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,1,1,0,0,1,1,1" id="212">
      <find>S.1</find>
      <schemavariable name="%b">$eq(e as int,seqGet(seqC as seq(int),0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1,1,1,0,0,1,1,1" id="213">
      <find>A.7</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),0 as int) as int</schemavariable>
      <schemavariable name="%t">e as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,0,1,1,1" id="214">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i8 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,0,1,1,1,0" id="215">
      <find>S.1</find>
      <assume>A.4</assume>
      <schemavariable name="%b">$lte(0 as int,i8 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,0,1,1,1,1" id="216">
      <find>S.1</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$lt(i8 as int,$minus(seqLen(seqC as seq(int)) as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,0,1" id="217">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,1" id="218">
      <find>S.1</find>
      <assume>A.1</assume>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,1" id="219">
      <find>S.0</find>
      <schemavariable name="%phi">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <schemavariable name="%a">[10;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%b">$not($lt(i as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="220">
      <find>A.2</find>
      <schemavariable name="%t">$not($lt(i as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,1" id="221">
      <find>A.2</find>
      <schemavariable name="%b">$lt(0 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1" id="222">
      <find>S.0.0</find>
      <schemavariable name="%a">[11;C']({ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <schemavariable name="%b">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="223">
      <find>S.0</find>
      <schemavariable name="%t">{ sumA := 0 as int || sA := setA as set(int) }([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="224">
      <find>S.0.5</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="225">
      <find>S.0.6</find>
      <schemavariable name="%t">setA as set(int)</schemavariable>
      <typevariable name="t">set(int)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_goto2" path="0,1" id="226">
      <find>S.0</find>
      <schemavariable name="%k">11 as int</schemavariable>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">3 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,1" id="227">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="228">
      <find>S.0</find>
      <schemavariable name="%t">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,0" id="229">
      <find>S.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,1,0" id="230">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,setA as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,1,0" id="231">
      <find>S.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="232">
      <find>S.1</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,1,0,0" id="233">
      <find>S.1</find>
      <schemavariable name="%b">$eq(setA as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,0,0" id="234">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,0" id="235">
      <find>S.1</find>
      <assume>A.2</assume>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,setA as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,0,1" id="236">
      <find>S.1.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,1" id="237">
      <find>S.1</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,1" id="238">
      <find>S.1.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="239">
      <find>S.1.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqSub(seqC as seq(int),0 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(0 as int,0 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqSubSelf" path="0,1,0,1" id="240">
      <find>S.1.0.1.0.1.0</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <typevariable name="1">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,1" id="241">
      <find>S.1.0.1.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="242">
      <find>S.1.0.1.1</find>
      <schemavariable name="%a">$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_same" path="0,1,0,1" id="243">
      <find>S.1.1</find>
      <schemavariable name="%b">$eq(0 as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,0,1" id="244">
      <find>S.1</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqC as seq(int)) as set(int)) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,1,0,1" id="245">
      <find>S.1</find>
      <schemavariable name="%a">$eq(0 as int,1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(setA as set(int),seqAsSet(seqC as seq(int)) as set(int)) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="246">
      <find>A.3</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_false_left" path="0,1,0,1" id="247">
      <find>A.3</find>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,1,1" id="248">
      <find>S.2</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="249">
      <find>S.2</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,1,1,0" id="250">
      <find>S.2</find>
      <schemavariable name="%b">$eq(setA as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,1,0" id="251">
      <find>S.2</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">setA as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,1,1,0" id="252">
      <find>S.2</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,setA as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var x as int)">x2</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,1,1,0" id="253">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x2 as int,setA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,0" id="254">
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,1,1" id="255">
      <find>S.2.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,1" id="256">
      <find>S.2</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || i := 0 as int || sumC := 0 as int || sumA := 0 as int || sA := setA as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,1" id="257">
      <find>S.2.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="258">
      <find>S.2.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqSub(seqC as seq(int),0 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(0 as int,0 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqSubSelf" path="0,1,1,1" id="259">
      <find>S.2.0.1.0.1.0</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <typevariable name="1">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,1" id="260">
      <find>S.2.0.1.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="261">
      <find>S.2.0.1.1</find>
      <schemavariable name="%a">$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_same" path="0,1,1,1" id="262">
      <find>S.2.1</find>
      <schemavariable name="%b">$eq(0 as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,1,1" id="263">
      <find>S.2</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(setA as set(int),seqAsSet(seqC as seq(int)) as set(int)) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,1,1,1" id="264">
      <find>S.2</find>
      <schemavariable name="%a">$eq(0 as int,1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(setA as set(int),seqAsSet(seqC as seq(int)) as set(int)) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(0 as int,0 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="265">
      <find>A.2</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_false_left" path="0,1,1,1" id="266">
      <find>A.2</find>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1" id="267">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }([3;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="268">
      <find>A.1</find>
      <schemavariable name="%a">$eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="269">
      <find>A.2</find>
      <schemavariable name="%a">$eq(sumC1 as int,sumA1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="270">
      <find>A.3</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$gte(i1 as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1" id="271">
      <find>A.2</find>
      <schemavariable name="%u">sumA1 as int</schemavariable>
      <schemavariable name="%t">sumC1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="1" id="272">
      <find>S.0</find>
      <schemavariable name="%k">10 as int</schemavariable>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[3;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">4 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="1,0" id="273">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[4;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="274">
      <find>A.5</find>
      <schemavariable name="%t">$lt(i as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0" id="275">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[5;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumC := $plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="276">
      <find>S.0</find>
      <schemavariable name="%t">{ sumC := $plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int }([6;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="277">
      <find>S.0.8</find>
      <schemavariable name="%t">$plus(sumC as int,seqGet(seqC as seq(int),i as int) as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0" id="278">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[6;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ i := $plus(i as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="279">
      <find>S.0</find>
      <schemavariable name="%t">{ i := $plus(i as int,1 as int) as int }([7;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="280">
      <find>S.0.8</find>
      <schemavariable name="%t">$plus(i as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0" id="281">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[7;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="282">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 1 as int }([8;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="283">
      <find>S.0.8</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0" id="284">
      <find>S.0.0</find>
      <schemavariable name="%a">[8;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_goto2" path="1,0" id="285">
      <find>S.0</find>
      <schemavariable name="%k">11 as int</schemavariable>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">3 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,0" id="286">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0" id="287">
      <find>S.0</find>
      <schemavariable name="%t">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,0,0" id="288">
      <find>S.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,0" id="289">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,sA1 as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,0,0" id="290">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0,0" id="291">
      <find>S.0</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,0,0,0" id="292">
      <find>S.0</find>
      <schemavariable name="%b">$eq(sA1 as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,0,0,0" id="293">
      <find>S.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0" id="294">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,sA1 as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,0,1" id="295">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0,1" id="296">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0,1" id="297">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,0,1" id="298">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(sumA1 as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0,1" id="299">
      <find>S.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,0,1" id="300">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,0,1" id="301">
      <find>S.0</find>
      <schemavariable name="%a">$eq(sumA1 as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="1,0,0,1" id="302">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="forall_left_hide" path="1,0,0,1" id="303">
      <find>A.6</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,sA1 as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,0,0,1" id="304">
      <find>A.6</find>
      <schemavariable name="%b">$mem(seqGet(seqC as seq(int),i1 as int) as int,sA1 as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,0,1" id="305">
      <find>S.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,0,1" id="306">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,0,1" id="307">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,0,1" id="308">
      <find>S.0.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,0,1" id="309">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,0,1,0" id="310">
      <find>S.0</find>
      <schemavariable name="%inst">0 as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,i1 as int) as int) as int,seqError as int) as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="resolve_int_literals" path="1,0,0,1,0" id="311">
      <find>S.0.0.0</find>
      <schemavariable name="%t">$lte(0 as int,0 as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,0,1,0" id="312">
      <find>S.0.0</find>
      <schemavariable name="%a">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="resolve_int_literals" path="1,0,0,1,0" id="313">
      <find>S.0.1.0.0.0</find>
      <schemavariable name="%t">$lte(0 as int,0 as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,0,1,0" id="314">
      <find>S.0.1.0.0</find>
      <schemavariable name="%a">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="1,0,0,1,0" id="315">
      <find>S.0.1.0.1.1</find>
      <schemavariable name="%a">i1 as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,1,0" id="316">
      <find>S.0</find>
      <schemavariable name="%a">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool,seqGet(seqC as seq(int),i1 as int) as int,seqError as int) as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0,1,0,0" id="317">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,0,1,0,1" id="318">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0,1,0,1,0" id="319">
      <find>S.0</find>
      <schemavariable name="%t">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,0,0,1,0,1,0" id="320">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0,1,0,1,1" id="321">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0,1,1" id="322">
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,0,1" id="323">
      <find>S.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1,0" id="324">
      <find>S.1</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,0,1,0" id="325">
      <find>S.1</find>
      <schemavariable name="%b">$eq(sA1 as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,0,1,0" id="326">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,0,1,0" id="327">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,sA1 as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var x as int)">x1</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,1,0" id="328">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x1 as int,sA1 as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="1,0,1,0" id="329">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%v">xA as int</schemavariable>
      <schemavariable name="%a">[&lt;4;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="dprg_assume" path="1,0,1,0" id="330">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;5;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(xA as int,sA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,0" id="331">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;6;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := $plus(sumA as int,xA as int) as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,0" id="332">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,0" id="333">
      <find>S.0.0.0.0.1.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,1,0" id="334">
      <find>S.0.0.0.0.1.0.0.0</find>
      <schemavariable name="%a">[&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1,0" id="335">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x as int;{ xA := \var x as int }($and($mem(xA as int,sA as set(int)) as bool,{ sumA := $plus(sumA as int,xA as int) as int }({ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }({ $markA := 1 as int }($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool)))) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,0" id="336">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,1,0" id="337">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,0" id="338">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,1,0" id="339">
      <find>S.0.0.1.0</find>
      <schemavariable name="%b">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,1,0" id="340">
      <find>S.0.0.1.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,1,0" id="341">
      <find>S.0.0.1.1</find>
      <schemavariable name="%b">$eq($plus(sumA1 as int,\var x as int) as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,1,0" id="342">
      <find>S.0.0.1</find>
      <schemavariable name="%a">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,0" id="343">
      <find>S.0</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$and($mem(\var x as int,sA1 as set(int)) as bool,$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0" id="344">
      <find>S.0</find>
      <schemavariable name="%a">$mem(seqGet(seqC as seq(int),i1 as int) as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,0,0" id="345">
      <find>S.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,0,0" id="346">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,0,0" id="347">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,0,0" id="348">
      <find>S.0.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,0" id="349">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,0,0,0" id="350">
      <find>S.0</find>
      <schemavariable name="%inst">0 as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,i1 as int) as int) as int,seqError as int) as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,0,0" id="351">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,0,1" id="352">
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1" id="353">
      <find>S.0</find>
      <schemavariable name="%a">$eq($diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="1,0,1,0,1,0" id="354">
      <find>S.0</find>
      <schemavariable name="%e">\var e as int</schemavariable>
      <schemavariable name="%a">$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)</schemavariable>
      <schemavariable name="%b">seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <typevariable name="e">int</typevariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equiv_to_eq" path="1,0,1,0,1,0" id="355">
      <find>S.0.0</find>
      <schemavariable name="%a">$mem(\var e as int,$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,0,1,0,1,0" id="356">
      <find>S.0</find>
      <schemavariable name="%x">\var e as int</schemavariable>
      <schemavariable name="%b">$eq($mem(\var e as int,$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)) as bool,$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var e as int)">e2</property>
    </ruleApplication>
    <ruleApplication rule="in_diff" path="1,0,1,0,1,0" id="357">
      <find>S.0.0</find>
      <schemavariable name="%x">e2 as int</schemavariable>
      <schemavariable name="%a">sA1 as set(int)</schemavariable>
      <schemavariable name="%b">singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)</schemavariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="1,0,1,0,1,0" id="358">
      <find>S.0.0.1.0</find>
      <schemavariable name="%y">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%x">e2 as int</schemavariable>
      <typevariable name="y">int</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,0,1,0" id="359">
      <find>S.0.1</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e2 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,0,1,0" id="360">
      <find>S.0.1.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">$plus(i1 as int,1 as int) as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,0,1,0" id="361">
      <find>S.0.1.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">$plus(i1 as int,1 as int) as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0" id="362">
      <find>S.0.1.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte($plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="eq_to_imp" path="1,0,1,0,1,0,0" id="363">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e2 as int,sA1 as set(int)) as bool,$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0" id="364">
      <find>S.0</find>
      <schemavariable name="%a">$impl($and($mem(e2 as int,sA1 as set(int)) as bool,$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool,(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$impl((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool) as bool,$and($mem(e2 as int,sA1 as set(int)) as bool,$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,0,1,0,1,0,0,0" id="365">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e2 as int,sA1 as set(int)) as bool,$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,0,1,0,0,0" id="366">
      <find>A.8.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,0" id="367">
      <find>A.8</find>
      <schemavariable name="%a">$mem(e2 as int,seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,0,1,0,1,0,0,0" id="368">
      <find>A.9</find>
      <schemavariable name="%b">$eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,0,1,0,0,0" id="369">
      <find>A.8</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e2 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,0,1,0,1,0,0,0" id="370">
      <find>A.8</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool,$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),\var i as int) as int,e2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i6</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,0" id="371">
      <find>A.8</find>
      <schemavariable name="%a">$and($lte(0 as int,i6 as int) as bool,$lt(i6 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),i6 as int) as int,e2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,0" id="372">
      <find>A.8</find>
      <schemavariable name="%a">$lte(0 as int,i6 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i6 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,0,1,0,0,0" id="373">
      <find>A.9.0</find>
      <schemavariable name="%i">i6 as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,0,1,0,0,0" id="374">
      <find>A.10.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,0" id="375">
      <find>A.9.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i6 as int,i1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i6 as int) as bool,$lt(i6 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,0,0" id="376">
      <find>A.11</find>
      <schemavariable name="%a">$lte(0 as int,i6 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i6 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,0,0" id="377">
      <find>A.10.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,0,1,0,0,0,0,0" id="378">
      <find>S.0</find>
      <schemavariable name="%inst">$minus(i6 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,0,0,0" id="379">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,0,0,1" id="380">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,0,1,0,0,0,1" id="381">
      <find>A.9</find>
      <schemavariable name="%u">e2 as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,0,1" id="382">
      <find>A.10.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,0,1,0" id="383">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i6 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i6 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0,1,0,0,0,1,0,0" id="384">
      <find>S.2</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$lte(0 as int,i6 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0,1,0,0,0,1,0,1" id="385">
      <find>S.2</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$lt(i6 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,0,1,1" id="386">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i6 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i6 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0,1,0,0,0,1,1,0" id="387">
      <find>S.2</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$lte(0 as int,i6 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,0,1,1,1" id="388">
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,0,1,0,1,0,0,1" id="389">
      <find>S.0</find>
      <schemavariable name="%a">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($mem(e2 as int,sA1 as set(int)) as bool,$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,0,1,0,1,0,0,1" id="390">
      <find>A.8</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i5</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,1" id="391">
      <find>A.8</find>
      <schemavariable name="%a">$and($lte(0 as int,i5 as int) as bool,$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($and($lte(0 as int,i5 as int) as bool,$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(i5 as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,1" id="392">
      <find>A.8</find>
      <schemavariable name="%a">$lte(0 as int,i5 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,1" id="393">
      <find>A.9.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i5 as int,$plus(i1 as int,1 as int) as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i5 as int) as bool,$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,1,0" id="394">
      <find>A.11</find>
      <schemavariable name="%a">$lte(0 as int,i5 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,1,0" id="395">
      <find>S.0</find>
      <schemavariable name="%a">$mem(e2 as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,0,1,0,0,1,0,0" id="396">
      <find>S.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,0,1,0,0,1,0,0" id="397">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e2 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,0,1,0,0,1,0,0" id="398">
      <find>S.0</find>
      <schemavariable name="%inst">$plus(i5 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool,$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),\var i as int) as int,e2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,0,1,0,0,1,0,0" id="399">
      <find>S.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,0,1,0,0,1,0,0" id="400">
      <find>S.0.1.0</find>
      <schemavariable name="%i">$plus(i5 as int,1 as int) as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,1,0,0" id="401">
      <find>S.0</find>
      <schemavariable name="%a">$and($lte(0 as int,$plus(i5 as int,1 as int) as int) as bool,$lt($plus(i5 as int,1 as int) as int,cond($lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int,0 as int) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($and($lte(0 as int,$plus(i5 as int,1 as int) as int) as bool,$lt($plus(i5 as int,1 as int) as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus($plus(i5 as int,1 as int) as int,i1 as int) as int) as int,seqError as int) as int,e2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,1,0,0,0" id="402">
      <find>S.0</find>
      <schemavariable name="%a">$lte(0 as int,$plus(i5 as int,1 as int) as int) as bool</schemavariable>
      <schemavariable name="%b">$lt($plus(i5 as int,1 as int) as int,cond($lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int,0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,0,0" id="403">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,1,0,0,0,1" id="404">
      <find>S.0.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,0,1,0" id="405">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,0,1,1" id="406">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,0,1,0,0,1,0,0,1" id="407">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus($plus(i5 as int,1 as int) as int,i1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,$plus(i5 as int,1 as int) as int) as bool,$lt($plus(i5 as int,1 as int) as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,0,1,0,0,1,0,0,1,0" id="408">
      <find>A.13</find>
      <schemavariable name="%a">$lte(0 as int,$plus(i5 as int,1 as int) as int) as bool</schemavariable>
      <schemavariable name="%b">$lt($plus(i5 as int,1 as int) as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,1,0" id="409">
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,1,0,0,1,1" id="410">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,$plus(i5 as int,1 as int) as int) as bool</schemavariable>
      <schemavariable name="%b">$lt($plus(i5 as int,1 as int) as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,1,1,0" id="411">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,0,1,1,1" id="412">
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,1,0,1,0,0,1,0,1" id="413">
      <find>S.0</find>
      <schemavariable name="%b">$eq(e2 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,0,1,0,0,1,0,1" id="414">
      <find>A.13</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%t">e2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,0,1,0,1" id="415">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,0,1,0,0,1,1" id="416">
      <find>A.9</find>
      <schemavariable name="%u">e2 as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,0,1,0,0,1,1" id="417">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i5 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0,1,0,0,1,1,0" id="418">
      <find>S.1</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$lte(0 as int,i5 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0,1,0,0,1,1,1" id="419">
      <find>S.1</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$lt(i5 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,0,1" id="420">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,0,1,1" id="421">
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,1,1" id="422">
      <find>S.1.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1,1" id="423">
      <find>S.1</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,1" id="424">
      <find>S.1.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,1,1" id="425">
      <find>S.1.1</find>
      <schemavariable name="%b">$eq(sumA1 as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,1,1" id="426">
      <find>S.1.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1,1" id="427">
      <find>S.1.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1,1" id="428">
      <find>S.1</find>
      <schemavariable name="%a">$eq(sumA1 as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="1,0,1,1" id="429">
      <find>S.1</find>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="1,0,1,1" id="430">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%v">xA as int</schemavariable>
      <schemavariable name="%a">[&lt;4;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="dprg_assume" path="1,0,1,1" id="431">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;5;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(xA as int,sA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,1" id="432">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;6;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := $plus(sumA as int,xA as int) as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,1" id="433">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1,1" id="434">
      <find>S.0.0.0.0.1.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,1,1" id="435">
      <find>S.0.0.0.0.1.0.0.0</find>
      <schemavariable name="%a">[&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1,1" id="436">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x as int;{ xA := \var x as int }($and($mem(xA as int,sA as set(int)) as bool,{ sumA := $plus(sumA as int,xA as int) as int }({ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }({ $markA := 1 as int }($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool)))) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || $markA := 0 as int || var := 42 as int || sumC := $plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int || i := $plus(i1 as int,1 as int) as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,1" id="437">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,1,1" id="438">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,1" id="439">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,1,1" id="440">
      <find>S.0.0.1.0</find>
      <schemavariable name="%b">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,1,1" id="441">
      <find>S.0.0.1.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,1,1" id="442">
      <find>S.0.0.1.1</find>
      <schemavariable name="%b">$eq($plus(sumA1 as int,\var x as int) as int,$plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,1,1" id="443">
      <find>S.0.0.1</find>
      <schemavariable name="%a">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,1" id="444">
      <find>S.0</find>
      <schemavariable name="%inst">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$and($mem(\var x as int,sA1 as set(int)) as bool,$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1" id="445">
      <find>S.0</find>
      <schemavariable name="%a">$mem(seqGet(seqC as seq(int),i1 as int) as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,1,0" id="446">
      <find>S.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,1,0" id="447">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,1,0" id="448">
      <find>S.0</find>
      <schemavariable name="%inst">0 as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool,$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),\var i as int) as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,0" id="449">
      <find>S.0</find>
      <schemavariable name="%a">$and($lte(0 as int,0 as int) as bool,$lt(0 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),0 as int) as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,1,0,0" id="450">
      <find>S.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,0,0" id="451">
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,1,0,1" id="452">
      <find>S.0.0</find>
      <schemavariable name="%i">0 as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="resolve_int_literals" path="1,0,1,1,0,1" id="453">
      <find>S.0.0.0.0</find>
      <schemavariable name="%t">$lte(0 as int,0 as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,1,1,0,1" id="454">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="zero_plus" path="1,0,1,1,0,1" id="455">
      <find>S.0.0.1.1</find>
      <schemavariable name="%a">i1 as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,0,1" id="456">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$lt(0 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1,1,0,1,0" id="457">
      <find>S.0</find>
      <schemavariable name="%t">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,0,1,1,0,1,0" id="458">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,0,1,1" id="459">
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1" id="460">
      <find>S.0</find>
      <schemavariable name="%a">$eq($diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="1,0,1,1,1,0" id="461">
      <find>S.0</find>
      <schemavariable name="%e">\var e as int</schemavariable>
      <schemavariable name="%a">$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)</schemavariable>
      <schemavariable name="%b">seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <typevariable name="e">int</typevariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equiv_to_eq" path="1,0,1,1,1,0" id="462">
      <find>S.0.0</find>
      <schemavariable name="%a">$mem(\var e as int,$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,0,1,1,1,0" id="463">
      <find>S.0</find>
      <schemavariable name="%x">\var e as int</schemavariable>
      <schemavariable name="%b">$eq($mem(\var e as int,$diff(sA1 as set(int),singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)) as set(int)) as bool,$mem(\var e as int,seqAsSet(seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var e as int)">e1</property>
    </ruleApplication>
    <ruleApplication rule="in_diff" path="1,0,1,1,1,0" id="464">
      <find>S.0.0</find>
      <schemavariable name="%x">e1 as int</schemavariable>
      <schemavariable name="%a">sA1 as set(int)</schemavariable>
      <schemavariable name="%b">singleton(seqGet(seqC as seq(int),i1 as int) as int) as set(int)</schemavariable>
      <typevariable name="b">set(int)</typevariable>
      <typevariable name="a">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="1,0,1,1,1,0" id="465">
      <find>S.0.0.1.0</find>
      <schemavariable name="%y">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%x">e1 as int</schemavariable>
      <typevariable name="y">int</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,1,1,0" id="466">
      <find>S.0.1</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e1 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),$plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,1,1,0" id="467">
      <find>S.0.1.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">$plus(i1 as int,1 as int) as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,1,1,0" id="468">
      <find>S.0.1.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">$plus(i1 as int,1 as int) as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0" id="469">
      <find>S.0.1.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte($plus(i1 as int,1 as int) as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="eq_to_imp" path="1,0,1,1,1,0,0" id="470">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e1 as int,sA1 as set(int)) as bool,$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0" id="471">
      <find>S.0</find>
      <schemavariable name="%a">$impl($and($mem(e1 as int,sA1 as set(int)) as bool,$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool,(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$impl((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool) as bool,$and($mem(e1 as int,sA1 as set(int)) as bool,$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,0,1,1,1,0,0,0" id="472">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e1 as int,sA1 as set(int)) as bool,$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,0" id="473">
      <find>A.7</find>
      <schemavariable name="%a">$mem(e1 as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,0,1,1,1,0,0,0" id="474">
      <find>A.8</find>
      <schemavariable name="%b">$eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,1,1,0,0,0" id="475">
      <find>A.7.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,1,1,0,0,0" id="476">
      <find>A.7</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e1 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,0,1,1,1,0,0,0" id="477">
      <find>A.7</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool,$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),\var i as int) as int,e1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i4</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,0" id="478">
      <find>A.7</find>
      <schemavariable name="%a">$and($lte(0 as int,i4 as int) as bool,$lt(i4 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),i4 as int) as int,e1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,0" id="479">
      <find>A.7</find>
      <schemavariable name="%a">$lte(0 as int,i4 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i4 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,1,1,0,0,0" id="480">
      <find>A.8.0</find>
      <schemavariable name="%i">i4 as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,1,1,0,0,0" id="481">
      <find>A.9.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0,0,0" id="482">
      <find>A.8.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i4 as int,i1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i4 as int) as bool,$lt(i4 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,0,0" id="483">
      <find>A.10</find>
      <schemavariable name="%a">$lte(0 as int,i4 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i4 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0,0,0,0" id="484">
      <find>A.9.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,1,1,0,0,0,0,0" id="485">
      <find>S.0</find>
      <schemavariable name="%inst">$minus(i4 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,0,0,0" id="486">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,0,0,1" id="487">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,1,1,0,0,0,1" id="488">
      <find>A.8</find>
      <schemavariable name="%u">e1 as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0,0,0,1" id="489">
      <find>A.9.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,0,1,0" id="490">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i4 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i4 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,0,1,0,0" id="491">
      <find>S.2</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lte(0 as int,i4 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,0,1,0,1" id="492">
      <find>S.2</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$lt(i4 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,0,1,1" id="493">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i4 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i4 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,0,1,1,0" id="494">
      <find>S.2</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lte(0 as int,i4 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,0,1,1,1" id="495">
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,0,1,1,1,0,0,1" id="496">
      <find>S.0</find>
      <schemavariable name="%a">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($mem(e1 as int,sA1 as set(int)) as bool,$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,0,1,1,1,0,0,1" id="497">
      <find>A.7</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i3</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,1" id="498">
      <find>A.7</find>
      <schemavariable name="%a">$and($lte(0 as int,i3 as int) as bool,$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($and($lte(0 as int,i3 as int) as bool,$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(i3 as int,$plus(i1 as int,1 as int) as int) as int) as int,seqError as int) as int,e1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,1" id="499">
      <find>A.7</find>
      <schemavariable name="%a">$lte(0 as int,i3 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0,0,1" id="500">
      <find>A.8.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i3 as int,$plus(i1 as int,1 as int) as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i3 as int) as bool,$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0,1,1,1,0,0,1,0" id="501">
      <find>A.10</find>
      <schemavariable name="%a">$lte(0 as int,i3 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,1,0" id="502">
      <find>S.0</find>
      <schemavariable name="%a">$mem(e1 as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0,1,1,1,0,0,1,0,0" id="503">
      <find>S.0.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,0,1,1,1,0,0,1,0,0" id="504">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">e1 as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,0,1,1,1,0,0,1,0,0" id="505">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,0,1,1,1,0,0,1,0,0" id="506">
      <find>S.0.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0,1,1,1,0,0,1,0,0" id="507">
      <find>S.0.0.0.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="1,0,1,1,1,0,0,1,0,0,0" id="508">
      <find>S.0</find>
      <schemavariable name="%inst">$plus(i3 as int,1 as int) as int</schemavariable>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,$eq(cond($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool,seqGet(seqC as seq(int),$plus(\var i as int,i1 as int) as int) as int,seqError as int) as int,e1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,1,0,0,0" id="509">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,1,0,0,1" id="510">
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,1,1,1,0,0,1,0,1" id="511">
      <find>S.0</find>
      <schemavariable name="%b">$eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,1,1,0,0,1,0,1" id="512">
      <find>A.12</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%t">e1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,0,1,0,1" id="513">
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,1,1,0,0,1,1" id="514">
      <find>A.8</find>
      <schemavariable name="%u">e1 as int</schemavariable>
      <schemavariable name="%t">seqError as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,1,1" id="515">
      <find>S.0</find>
      <schemavariable name="%a">$mem(e1 as int,sA1 as set(int)) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,1,1,0" id="516">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i3 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,1,1,0,0" id="517">
      <find>S.1</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lte(0 as int,i3 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,1,1,0,1" id="518">
      <find>S.1</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,1,1,1,0,0,1,1,1" id="519">
      <find>S.0</find>
      <schemavariable name="%b">$eq(e1 as int,seqGet(seqC as seq(int),i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1,0,1,1,1,0,0,1,1,1" id="520">
      <find>A.10</find>
      <schemavariable name="%u">seqGet(seqC as seq(int),i1 as int) as int</schemavariable>
      <schemavariable name="%t">e1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,0,0,1,1,1" id="521">
      <find>S.0</find>
      <schemavariable name="%a">$lte(0 as int,i3 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,1,1,1,0" id="522">
      <find>S.0</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lte(0 as int,i3 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,0,0,1,1,1,1" id="523">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$lt(i3 as int,$minus(seqLen(seqC as seq(int)) as int,$plus(i1 as int,1 as int) as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,0,1" id="524">
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,1" id="525">
      <find>S.0</find>
      <schemavariable name="%a">$eq($plus(sumC1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int,$plus(sumA1 as int,seqGet(seqC as seq(int),i1 as int) as int) as int) as bool</schemavariable>
      <schemavariable name="%b">$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte($plus(i1 as int,1 as int) as int,0 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,1,0" id="526">
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1,1,1,1,1" id="527">
      <find>S.0</find>
      <schemavariable name="%a">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$gte($plus(i1 as int,1 as int) as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,1,1,1,1,0" id="528">
      <find>S.0</find>
      <assume>A.3</assume>
      <schemavariable name="%b">(\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1,1,1,1,1" id="529">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="1,1" id="530">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[10;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($lt(i as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1" id="531">
      <find>A.5</find>
      <schemavariable name="%t">$not($lt(i as int,seqLen(seqC as seq(int)) as int) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,1" id="532">
      <find>A.5</find>
      <schemavariable name="%b">$lt(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1" id="533">
      <find>S.0.0</find>
      <schemavariable name="%a">[11;C']([&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_goto2" path="1,1" id="534">
      <find>S.0</find>
      <schemavariable name="%k">11 as int</schemavariable>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">3 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,1" id="535">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0" id="536">
      <find>S.0</find>
      <schemavariable name="%t">$not($eq(sA as set(int),emptyset as set(int)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,1,0" id="537">
      <find>S.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,1,0" id="538">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,sA1 as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,1,0" id="539">
      <find>S.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0,0" id="540">
      <find>S.1</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,1,0,0" id="541">
      <find>S.1</find>
      <schemavariable name="%b">$eq(sA1 as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,1,0,0" id="542">
      <find>S.1</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,0,0" id="543">
      <find>S.1</find>
      <assume>A.5</assume>
      <schemavariable name="%b">(\forall x as int;$not($mem(\var x as int,sA1 as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1,0,1" id="544">
      <find>S.1.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0,1" id="545">
      <find>S.1</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,0,1" id="546">
      <find>S.1.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,0,1" id="547">
      <find>S.1.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,0,1" id="548">
      <find>S.1.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,1,0,1" id="549">
      <find>S.1.1</find>
      <schemavariable name="%b">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,0,1" id="550">
      <find>S.1.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,0,1" id="551">
      <find>S.1.0</find>
      <schemavariable name="%b">$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,0,1" id="552">
      <find>S.1</find>
      <schemavariable name="%a">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,0,1" id="553">
      <find>S.1</find>
      <assume>A.2</assume>
      <schemavariable name="%b">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="1,1,1" id="554">
      <find>S.2</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="555">
      <find>S.2</find>
      <schemavariable name="%t">$not($not($eq(sA as set(int),emptyset as set(int)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,1,1,0" id="556">
      <find>S.2</find>
      <schemavariable name="%b">$eq(sA1 as set(int),emptyset as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,1,1,0" id="557">
      <find>S.2</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%s">sA1 as set(int)</schemavariable>
      <typevariable name="s">set(int)</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,1,1,0" id="558">
      <find>S.2</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as int,sA1 as set(int)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var x as int)">x</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,1,1,0" id="559">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x as int,sA1 as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="1,1,1,0" id="560">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%v">xA as int</schemavariable>
      <schemavariable name="%a">[&lt;4;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="dprg_assume" path="1,1,1,0" id="561">
      <find>S.0.0.0.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;5;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(xA as int,sA as set(int)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1,1,0" id="562">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;6;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sumA := $plus(sumA as int,xA as int) as int }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1,1,0" id="563">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }</schemaupdate>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="564">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x as int;{ xA := \var x as int }($and($mem(xA as int,sA as set(int)) as bool,{ sumA := $plus(sumA as int,xA as int) as int }({ sA := $diff(sA as set(int),singleton(xA as int) as set(int)) as set(int) }([&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool))) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="565">
      <find>S.0.0.1.6</find>
      <schemavariable name="%t">\var x as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="566">
      <find>S.0.0.1.7</find>
      <schemavariable name="%t">$plus(sumA as int,xA as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || xA := { sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }(\var x as int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="567">
      <find>S.0.0.1.8</find>
      <schemavariable name="%t">$diff(sA as set(int),singleton(xA as int) as set(int)) as set(int)</schemavariable>
      <typevariable name="t">set(int)</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || xA := { sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }(\var x as int) || sumA := { sA := sA1 as set(int) || sumA := sumA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || xA := { sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }(\var x as int) }($plus(sumA as int,xA as int) as int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1,1,0" id="568">
      <find>S.0.0.1.0</find>
      <schemavariable name="%phi">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;8;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="569">
      <find>S.0.0.1</find>
      <schemavariable name="%t">{ $markA := 1 as int }([&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || xA := \var x as int || sumA := $plus(sumA1 as int,\var x as int) as int || sA := $diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="570">
      <find>S.0.0.1.8</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int || xA := \var x as int || sumA := $plus(sumA1 as int,\var x as int) as int || sA := $diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1,1,0" id="571">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">[&lt;9;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,0" id="572">
      <find>S.0.0.1</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sumC := sumC1 as int || i := i1 as int || $markC := 0 as int || var := 42 as int || xA := \var x as int || sumA := $plus(sumA1 as int,\var x as int) as int || sA := $diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int) || $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1,0" id="573">
      <find>S.0.0.1.0.1.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,1,1,0" id="574">
      <find>S.0.0.1.0.1</find>
      <schemavariable name="%b">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1,0" id="575">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,1,0" id="576">
      <find>S.0.0.1.0</find>
      <schemavariable name="%a">$and($eq($diff(sA1 as set(int),singleton(\var x as int) as set(int)) as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,$plus(sumA1 as int,\var x as int) as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,1,0" id="577">
      <find>S.0.0.1</find>
      <schemavariable name="%a">$impl($eq(1 as int,0 as int) as bool,$eq($plus(sumA1 as int,\var x as int) as int,sumC1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_r" path="1,1,1,0" id="578">
      <find>S.0.0</find>
      <schemavariable name="%a">$mem(\var x as int,sA1 as set(int)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_remove" path="1,1,1,0" id="579">
      <find>S.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%b">false as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="1,1,1,0" id="580">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,1,1,0" id="581">
      <find>A.5.1</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)</schemavariable>
      <schemavariable name="%t">sA1 as set(int)</schemavariable>
      <typevariable name="u">set(int)</typevariable>
      <typevariable name="t">set(int)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="inSeqAsSet" path="1,1,1,0" id="582">
      <find>A.5</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%x">x as int</schemavariable>
      <schemavariable name="%s">seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)</schemavariable>
      <typevariable name="s">seq(int)</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,1,1,0" id="583">
      <find>A.5</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool,$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),\var i as int) as int,x as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i2</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,1,1,0" id="584">
      <find>A.5</find>
      <schemavariable name="%a">$and($lte(0 as int,i2 as int) as bool,$lt(i2 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int),i2 as int) as int,x as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,1,1,0" id="585">
      <find>A.5</find>
      <schemavariable name="%a">$lte(0 as int,i2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i2 as int,seqLen(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1,1,1,0" id="586">
      <find>A.6.0</find>
      <schemavariable name="%i">i2 as int</schemavariable>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="5">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1,1,1,0" id="587">
      <find>A.7.1</find>
      <schemavariable name="%a">seqC as seq(int)</schemavariable>
      <schemavariable name="%from">i1 as int</schemavariable>
      <schemavariable name="%to">seqLen(seqC as seq(int)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="2">int</typevariable>
      <typevariable name="a">seq(int)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,1,1,0" id="588">
      <find>A.6.0</find>
      <schemavariable name="%a">seqGet(seqC as seq(int),$plus(i2 as int,i1 as int) as int) as int</schemavariable>
      <schemavariable name="%b">seqError as int</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i2 as int) as bool,$lt(i2 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,1,1,0,0" id="589">
      <find>A.8</find>
      <schemavariable name="%a">$lte(0 as int,i2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i2 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,1,1,0,0" id="590">
      <find>A.7.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,1,0,0,0" id="591">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,1,0,0,1" id="592">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,1,1,0,1" id="593">
      <find>A.7.1</find>
      <schemavariable name="%a">$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(i1 as int,seqLen(seqC as seq(int)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,1,1,0,1,0" id="594">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i2 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,1,0,1,0,0" id="595">
      <find>S.1</find>
      <assume>A.5</assume>
      <schemavariable name="%b">$lte(0 as int,i2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,1,0,1,0,1" id="596">
      <find>S.1</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$lt(i2 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,1,1,0,1,1" id="597">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i2 as int,$minus(seqLen(seqC as seq(int)) as int,i1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,1,0,1,1,0" id="598">
      <find>S.1</find>
      <assume>A.5</assume>
      <schemavariable name="%b">$lte(0 as int,i2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,1,0,1,1,1" id="599">
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1,1,1" id="600">
      <find>S.2.0</find>
      <schemavariable name="%a">[&lt;12;A'&gt;]($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1,1" id="601">
      <find>S.2</find>
      <schemavariable name="%t">$and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($eq(sA as set(int),seqAsSet(seqSub(seqC as seq(int),i as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC as int,sumA as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(sumA as int,sumC as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ sA := sA1 as set(int) || sumA := sumA1 as int || xA := xA1 as int || sumC := sumC1 as int || i := i1 as int || $markA := 0 as int || $markC := 0 as int || var := 42 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1,1" id="602">
      <find>S.2.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1,1" id="603">
      <find>S.2.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1,1" id="604">
      <find>S.2.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,1,1,1" id="605">
      <find>S.2.1</find>
      <schemavariable name="%b">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1,1" id="606">
      <find>S.2.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1,1" id="607">
      <find>S.2.0</find>
      <schemavariable name="%b">$and($eq(sA1 as set(int),seqAsSet(seqSub(seqC as seq(int),i1 as int,seqLen(seqC as seq(int)) as int) as seq(int)) as set(int)) as bool,$and($eq(sumC1 as int,sumA1 as int) as bool,$and((\forall a as int;$impl($and($lte(0 as int,\var a as int) as bool,$lt(\var a as int,seqLen(seqC as seq(int)) as int) as bool) as bool,(\forall b as int;$impl($and($lte(0 as int,\var b as int) as bool,$lt(\var b as int,seqLen(seqC as seq(int)) as int) as bool) as bool,$impl($eq(seqGet(seqC as seq(int),\var a as int) as int,seqGet(seqC as seq(int),\var b as int) as int) as bool,$eq(\var a as int,\var b as int) as bool) as bool) as bool) as bool) as bool) as bool,$gte(i1 as int,0 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1,1" id="608">
      <find>S.2</find>
      <schemavariable name="%a">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,1,1" id="609">
      <find>S.2</find>
      <assume>A.2</assume>
      <schemavariable name="%b">$eq(sumA1 as int,sumC1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
  </steps>
</proof>