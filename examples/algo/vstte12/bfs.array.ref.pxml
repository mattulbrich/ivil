<?xml version="1.0"?>
<proof format="1"><info>
    <date>Wed Mar 20 11:13:27 CET 2013</date>
    <version>0.0</version>
    <problem>$and(finite(fullset),$and($eq(card(fullset),size),$and($eq(a_size,size),$and($eq(a_src,vi(src)),$and($eq(a_dest,vi(dest)),(\forall v;$eq(succ(\var v),(\set x;seqGet(a_succ(vi(\var v)),vi(\var x)))))))))) |- $impl(INITIAL_VAR(0),[0;bfs_array][&lt;0;bfs&gt;]$eq(d,a_d))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="refinement" path="" id="0">
      <find>S.0</find>
      <schemavariable name="%phi">$eq(d as int,a_d as int) as bool</schemavariable>
      <schemavariable name="%V">0 as int</schemavariable>
      <schemavariable name="%C">[0;bfs_array]([&lt;0;bfs&gt;]($eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%A">[&lt;0;bfs&gt;]($eq(d as int,a_d as int) as bool) as bool</schemavariable>
      <typevariable name="V">int</typevariable>
      <typevariable name="A">bool</typevariable>
      <typevariable name="C">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="1">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and($and($and({ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)),{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[39;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[48;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0" id="2">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and($and({ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)),{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[39;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0" id="3">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and({ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)),{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0" id="4">
      <find>S.0</find>
      <schemavariable name="%a">$and($and({ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)),{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool,{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0" id="5">
      <find>S.0</find>
      <schemavariable name="%a">$and({ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)),{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0" id="6">
      <find>S.0</find>
      <schemavariable name="%a">{ $markA := 0 as int || $markC := 0 as int }({ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }({ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool))</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="7">
      <find>S.0</find>
      <schemavariable name="%t">{ var := 0 as int }([0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="8">
      <find>S.0.3</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="9">
      <find>S.0.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,0" id="10">
      <find>S.0.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="11">
      <find>S.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="12">
      <find>S.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="13">
      <find>S.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="14">
      <find>S.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0" id="15">
      <find>S.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0" id="16">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0" id="17">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0" id="18">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0" id="19">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0" id="20">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,0" id="21">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,0" id="22">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,0,0" id="23">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,0,0" id="24">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0" id="25">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[0;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="26">
      <find>S.0</find>
      <schemavariable name="%t">{ a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }([1;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="27">
      <find>S.0.4</find>
      <schemavariable name="%t">(\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0" id="28">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[1;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="29">
      <find>S.0</find>
      <schemavariable name="%t">{ a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }([2;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="30">
      <find>S.0.5</find>
      <schemavariable name="%t">(\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0" id="31">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[2;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="32">
      <find>S.0</find>
      <schemavariable name="%t">{ a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }([3;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="33">
      <find>S.0.6</find>
      <schemavariable name="%t">(\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0" id="34">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[3;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="35">
      <find>S.0</find>
      <schemavariable name="%t">{ a_d := 0 as int }([4;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0" id="36">
      <find>S.0.7</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,0,0,0,0,0" id="37">
      <find>S.0</find>
      <schemavariable name="%k">49 as int</schemavariable>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[4;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">5 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,0,0,0" id="38">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[5;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0" id="39">
      <find>A.6</find>
      <schemavariable name="%t">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,0,0,0,0,0" id="40">
      <find>A.6</find>
      <schemavariable name="%x">\var k as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),\var k as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var k as int)">k1</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0,0" id="41">
      <find>A.6</find>
      <schemavariable name="%a">$and($lte(0 as int,k1 as int) as bool,$lt(k1 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),k1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,0,0" id="42">
      <find>A.6</find>
      <schemavariable name="%a">$lte(0 as int,k1 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(k1 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,0,0,0,0,0,0" id="43">
      <find>A.7</find>
      <schemavariable name="%j">k1 as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0,0,0,0,0,0,0" id="44">
      <find>A.7.1.0</find>
      <schemavariable name="%a">k1 as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0" id="45">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[6;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0" id="46">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 1 as int }([7;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0" id="47">
      <find>S.0.7</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,0" id="48">
      <find>S.0.0</find>
      <schemavariable name="%a">[7;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0,0,0,0,0" id="49">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,0" id="50">
      <find>S.0</find>
      <schemavariable name="%t">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,0,0,0" id="51">
      <find>S.0</find>
      <assume>A.0</assume>
      <schemavariable name="%b">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="52">
      <find>A.9</find>
      <schemavariable name="%t">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="finite_fullset" path="0,0,0,0,0,0,0,1" id="53">
      <find>A.0</find>
      <assume>A.9</assume>
      <schemavariable name="%s">fullset as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="a">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="true_left" path="0,0,0,0,0,0,0,1" id="54">
      <find>A.0</find>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1" id="55">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;1;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="56">
      <find>S.0</find>
      <schemavariable name="%t">{ V := singleton(src as vertex) as set(vertex) }([&lt;2;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="57">
      <find>S.0.8</find>
      <schemavariable name="%t">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1" id="58">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="59">
      <find>S.0</find>
      <schemavariable name="%t">{ C := singleton(src as vertex) as set(vertex) }([&lt;3;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="60">
      <find>S.0.9</find>
      <schemavariable name="%t">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1" id="61">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="62">
      <find>S.0</find>
      <schemavariable name="%t">{ N := emptyset as set(vertex) }([&lt;4;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="63">
      <find>S.0.10</find>
      <schemavariable name="%t">emptyset as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1" id="64">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;4;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="65">
      <find>S.0</find>
      <schemavariable name="%t">{ d := 0 as int }([&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1" id="66">
      <find>S.0.11</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,0,0,0,1" id="67">
      <find>S.0</find>
      <schemavariable name="%n2">49 as int</schemavariable>
      <schemavariable name="%n1">6 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,0" id="68">
      <find>A.9</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,0,0,1,0" id="69">
      <find>A.9.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,0,0,1,0" id="70">
      <find>A.9</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,0,0,0,1,0" id="71">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x10</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,0,0,0,1,0" id="72">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x10 as vertex,singleton(src as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,0,0,0,0,0,1,0" id="73">
      <find>A.9</find>
      <schemavariable name="%y">src as vertex</schemavariable>
      <schemavariable name="%x">x10 as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,0,0,1,0" id="74">
      <find>A.9</find>
      <schemavariable name="%u">src as vertex</schemavariable>
      <schemavariable name="%t">x10 as vertex</schemavariable>
      <typevariable name="u">vertex</typevariable>
      <typevariable name="t">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1,0" id="75">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,0" id="76">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 1 as int }([&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,0" id="77">
      <find>S.0.11</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,0,1,0" id="78">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,0" id="79">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int || $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="80">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,0,1,0" id="81">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="82">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,0,0,1,0" id="83">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="84">
      <find>S.0.0.0.0.0.0.0.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="85">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="86">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="87">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="88">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="89">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="90">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="91">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="92">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="93">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="94">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="95">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="96">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="97">
      <find>S.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="98">
      <find>S.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,0" id="99">
      <find>S.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="100">
      <find>S.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="101">
      <find>S.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,0" id="102">
      <find>S.0.1.1</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_r" path="0,0,0,0,0,0,0,1,0" id="103">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(1 as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="104">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and($and($and($and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool,$impl($eq(1 as int,2 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq(1 as int,3 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(1 as int,4 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(1 as int,5 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq(1 as int,6 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,0,0,0,0,0,0,1,0" id="105">
      <find>S.0.0.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0,0,0,0,0,0,0,1,0" id="106">
      <find>S.0.0.0.0.0.0.0.0.1.0.1.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0,0,0,0,0,0,0,1,0" id="107">
      <find>S.0.0.0.0.0.0.0.1.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,0,0,0,0,0,0,1,0" id="108">
      <find>S.0.0.0.0.0.0.0.1.1.0.0.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0,0,0,0,0,0,0,1,0" id="109">
      <find>S.0.0.0.0.0.0.0.1.1.1.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,0,0,0,0,0,0,1,0" id="110">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0,0,0,0,0,0,0,1,0" id="111">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.0.1.0.1.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0,0,0,0,0,0,0,1,0" id="112">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,0,0,0,0,0,1,0" id="113">
      <find>S.0.0.0.0.0.0.1.0.0.0</find>
      <schemavariable name="%y">src as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,0" id="114">
      <find>S.0.0.0.0.0.1.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,0,1,0" id="115">
      <find>S.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="116">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,0" id="117">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,0,1,0" id="118">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="119">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,0" id="120">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,0,1,0" id="121">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="122">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,0" id="123">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,0,1,0" id="124">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="125">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,0" id="126">
      <find>S.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,0,1,0" id="127">
      <find>S.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,0,1,0" id="128">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0" id="129">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0,0" id="130">
      <find>S.0</find>
      <schemavariable name="%a">$eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,0" id="131">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0,0,1" id="132">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,0,0,0,0,0,1,0,0,1,0" id="133">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(a_size as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,0,0" id="134">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,0,1" id="135">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0,0,1,1" id="136">
      <find>S.0</find>
      <schemavariable name="%a">(\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,0,0,0,1,0,0,1,1,0" id="137">
      <find>S.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x1 as vertex)">x13</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,0,0,0,1,0,0,1,1,0" id="138">
      <find>S.0</find>
      <schemavariable name="%b">$mem(x13 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,0" id="139">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0,0,1,1,1" id="140">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool,$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,0,0,0,0,0,1,0,0,1,1,1,0" id="141">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(a_size as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,1,0,0" id="142">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,1,0,1" id="143">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,0,0,1,0,0,1,1,1,1" id="144">
      <find>S.0</find>
      <schemavariable name="%a">$eq(singleton(src as vertex) as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,$eq(vi(\var x as vertex) as int,a_src as int) as bool,seqError as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,1,1,0" id="145">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0,0,0,0,0,0,1,0,0,1,1,1,1,1" id="146">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(a_size as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0" id="147">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1" id="148">
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,0,0,0,1,0,1" id="149">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as vertex;$not($eq(\var x as vertex,src as vertex) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,0,1" id="150">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,1" id="151">
      <find>A.9</find>
      <schemavariable name="%t">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,0,0,0,0,1,1" id="152">
      <find>A.9</find>
      <schemavariable name="%b">$eq(singleton(src as vertex) as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,0,0,1,1" id="153">
      <find>A.9</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,0,0,0,0,0,1,1" id="154">
      <find>A.9.0.0</find>
      <schemavariable name="%y">src as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,0,1,1" id="155">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;50;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,1" id="156">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $neg(1 as int) as int }([&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,1" id="157">
      <find>S.0.11</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,0,1,1" id="158">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,0,1,1" id="159">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int || $markC := 1 as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="160">
      <find>S.0.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="161">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="162">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="163">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="164">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,0,1,1" id="165">
      <find>S.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,0,1,1" id="166">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,0,0,1,1" id="167">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($neg(1 as int) as int,0 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,0,1,1" id="168">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="169">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="170">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="171">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="172">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="173">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="174">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,0 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,0,1,1" id="175">
      <find>S.0</find>
      <schemavariable name="%a">$eq($neg(1 as int) as int,0 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,0,0,0,0,1,1" id="176">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,0,1,1" id="177">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,0,0,1" id="178">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[49;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1" id="179">
      <find>A.6</find>
      <schemavariable name="%t">$not((\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,0,1" id="180">
      <find>A.6</find>
      <schemavariable name="%b">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,0,0,0,0,0,1" id="181">
      <find>S.1.0.1</find>
      <schemavariable name="%j">\var k as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">$eq(\var i as int,a_src as int) as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0,0,0,0,0,0,1" id="182">
      <find>S.1.0.1.1.0</find>
      <schemavariable name="%a">\var k as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1" id="183">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[50;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1" id="184">
      <find>S.0</find>
      <schemavariable name="%t">{ a_d := $neg(1 as int) as int }([51;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1" id="185">
      <find>S.0.7</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,1" id="186">
      <find>S.0.0</find>
      <schemavariable name="%a">[51;bfs_array']([&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0,0,0,0,1" id="187">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;0;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,0" id="188">
      <find>S.0</find>
      <schemavariable name="%t">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,0,1,0" id="189">
      <find>S.0</find>
      <assume>A.0</assume>
      <schemavariable name="%b">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="190">
      <find>A.6</find>
      <schemavariable name="%t">finite(fullset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="finite_fullset" path="0,0,0,0,0,0,1,1" id="191">
      <find>A.0</find>
      <assume>A.6</assume>
      <schemavariable name="%s">fullset as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="a">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="true_left" path="0,0,0,0,0,0,1,1" id="192">
      <find>A.0</find>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1" id="193">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;1;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="194">
      <find>S.0</find>
      <schemavariable name="%t">{ V := singleton(src as vertex) as set(vertex) }([&lt;2;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="195">
      <find>S.0.8</find>
      <schemavariable name="%t">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1" id="196">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;2;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="197">
      <find>S.0</find>
      <schemavariable name="%t">{ C := singleton(src as vertex) as set(vertex) }([&lt;3;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="198">
      <find>S.0.9</find>
      <schemavariable name="%t">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1" id="199">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;3;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="200">
      <find>S.0</find>
      <schemavariable name="%t">{ N := emptyset as set(vertex) }([&lt;4;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="201">
      <find>S.0.10</find>
      <schemavariable name="%t">emptyset as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1" id="202">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;4;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="203">
      <find>S.0</find>
      <schemavariable name="%t">{ d := 0 as int }([&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1" id="204">
      <find>S.0.11</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,0,0,1,1" id="205">
      <find>S.0</find>
      <schemavariable name="%n2">49 as int</schemavariable>
      <schemavariable name="%n1">6 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,0" id="206">
      <find>A.6</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,0,1,1,0" id="207">
      <find>A.6.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,0,1,1,0" id="208">
      <find>A.6</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,0,0,1,1,0" id="209">
      <find>S.2</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x9</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,0,0,1,1,0" id="210">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x9 as vertex,singleton(src as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,0,0,0,0,1,1,0" id="211">
      <find>A.6</find>
      <schemavariable name="%y">src as vertex</schemavariable>
      <schemavariable name="%x">x9 as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,0,1,1,0" id="212">
      <find>A.6</find>
      <schemavariable name="%u">src as vertex</schemavariable>
      <schemavariable name="%t">x9 as vertex</schemavariable>
      <typevariable name="u">vertex</typevariable>
      <typevariable name="t">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1,0" id="213">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,0" id="214">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 1 as int }([&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,0" id="215">
      <find>S.0.11</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,1,1,0" id="216">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,0" id="217">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int || $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,0" id="218">
      <find>S.0.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,0,1,1,0" id="219">
      <find>S.0.0.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="220">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="221">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="222">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="223">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="224">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,0" id="225">
      <find>S.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,0" id="226">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="227">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="228">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,2 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="229">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,3 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="230">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,4 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="231">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,5 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="232">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,6 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,0,1,1,0" id="233">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,0 as int) as bool,$eq(0 as int,$neg(1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,0,0,0,1,1,0" id="234">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,0,1,1,0" id="235">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,1" id="236">
      <find>A.6</find>
      <schemavariable name="%t">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,0,0,0,1,1,1" id="237">
      <find>A.6</find>
      <schemavariable name="%b">$eq(singleton(src as vertex) as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,0,1,1,1" id="238">
      <find>A.6</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">singleton(src as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,0,0,0,0,1,1,1" id="239">
      <find>A.6.0.0</find>
      <schemavariable name="%y">src as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,0,1,1,1" id="240">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;50;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,1" id="241">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $neg(1 as int) as int }([&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,1" id="242">
      <find>S.0.11</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,0,1,1,1" id="243">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,0,1,1,1" id="244">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ $markA := 0 as int || $markC := 0 as int || var := 0 as int || a_V := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_C := (\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $neg(1 as int) as int || V := singleton(src as vertex) as set(vertex) || C := singleton(src as vertex) as set(vertex) || N := emptyset as set(vertex) || d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="245">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="246">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="247">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="248">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="249">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="250">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="251">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="252">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="253">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="254">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="255">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="256">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="257">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="258">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="259">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="260">
      <find>S.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="261">
      <find>S.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,0,0,0,0,0,1,1,1" id="262">
      <find>S.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="263">
      <find>S.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="264">
      <find>S.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="265">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,0,1,1,1" id="266">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($neg(1 as int) as int,$neg(1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,0,1,1,1" id="267">
      <find>S.0.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,0,1,1,1" id="268">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and($and($and($impl($eq(0 as int,1 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,2 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq(0 as int,3 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,4 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,5 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq(0 as int,6 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="269">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,1,1,1" id="270">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,singleton(src as vertex) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="271">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="272">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,1,1,1" id="273">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="274">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="275">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,1,1,1" id="276">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="277">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="278">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,1,1,1" id="279">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="280">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="281">
      <find>S.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,0,1,1,1" id="282">
      <find>S.0.0</find>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,0,1,1,1" id="283">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,0,0,0,0,1,1,1" id="284">
      <find>S.0</find>
      <schemavariable name="%a">$eq(0 as int,6 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(singleton(src as vertex) as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen((\seqDef i as int;0 as int;a_size as int;$eq(\var i as int,a_src as int) as bool) as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,0,1,1,1" id="285">
      <find>A.7</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_false_left" path="0,0,0,0,0,0,1,1,1" id="286">
      <find>A.7</find>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="287">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="288">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="289">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,1" id="290">
      <find>S.0.0.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="291">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,0,1" id="292">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="293">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="294">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="295">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="296">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1" id="297">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="298">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="299">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="300">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="301">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="302">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,0,0,0,1" id="303">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="304">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="305">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,1" id="306">
      <find>A.7</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="307">
      <find>A.7</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="308">
      <find>A.8</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="309">
      <find>A.9</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="310">
      <find>A.10</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="311">
      <find>A.11</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,1" id="312">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,1" id="313">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,1" id="314">
      <find>A.12</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,0,1" id="315">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,0,1" id="316">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,0,1" id="317">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x2</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,0,1" id="318">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x2 as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_havoc" path="0,0,0,0,0,1" id="319">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%v">a_v as int</schemavariable>
      <schemavariable name="%a">[8;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
      <property name="skolemName(a_v as int)">a_v2</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="320">
      <find>S.0</find>
      <schemavariable name="%t">{ a_v := a_v2 as int }([9;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="321">
      <find>S.0.16</find>
      <schemavariable name="%t">a_v2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,0,1" id="322">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[9;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,a_v as int) as bool,$lt(a_v as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),a_v as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="323">
      <find>A.14</find>
      <schemavariable name="%t">$and($and($lte(0 as int,a_v as int) as bool,$lt(a_v as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),a_v as int) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="324">
      <find>A.14</find>
      <schemavariable name="%a">$and($lte(0 as int,a_v2 as int) as bool,$lt(a_v2 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet(a_C1 as seq(bool),a_v2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,0,1" id="325">
      <find>A.14</find>
      <schemavariable name="%a">$lte(0 as int,a_v2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(a_v2 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1" id="326">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[10;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_C := seqUpdate(a_C as seq(bool),a_v as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="327">
      <find>S.0</find>
      <schemavariable name="%t">{ a_C := seqUpdate(a_C as seq(bool),a_v as int,false as bool) as seq(bool) }([11;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1" id="328">
      <find>S.0.16</find>
      <schemavariable name="%t">seqUpdate(a_C as seq(bool),a_v as int,false as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,0,0,0,0,1" id="329">
      <find>S.0</find>
      <schemavariable name="%k">15 as int</schemavariable>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[11;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">12 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,0,1,0" id="330">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[12;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(a_v as int,a_dest as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0" id="331">
      <find>A.17</find>
      <schemavariable name="%t">$eq(a_v as int,a_dest as int) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,0,1,0" id="332">
      <find>A.17</find>
      <schemavariable name="%u">a_dest as int</schemavariable>
      <schemavariable name="%t">a_v2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,0,0,1,0" id="333">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[13;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">51 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,0" id="334">
      <find>S.0.0</find>
      <schemavariable name="%a">[51;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,0,0,0,1,0" id="335">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">v as vertex</schemavariable>
      <schemavariable name="%a">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0" id="336">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ v := \var x1 as vertex }([&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0" id="337">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="0,0,0,0,0,1,0" id="338">
      <find>S.0</find>
      <schemavariable name="%inst">iv(a_v2 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := \var x1 as vertex }([&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0,0,0,1,0" id="339">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,0" id="340">
      <find>S.0</find>
      <schemavariable name="%t">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,0,0" id="341">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1" id="342">
      <find>A.18</find>
      <schemavariable name="%t">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1,0,1" id="343">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := $diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1" id="344">
      <find>S.0</find>
      <schemavariable name="%t">{ C := $diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex) }([&lt;12;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1" id="345">
      <find>S.0.16</find>
      <schemavariable name="%t">$diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,0,1,0,1" id="346">
      <find>S.0</find>
      <schemavariable name="%n2">16 as int</schemavariable>
      <schemavariable name="%n1">13 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;12;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$eq(v as vertex,dest as vertex) as bool</schemavariable>
      <schemavariable name="%phi2">$not($eq(v as vertex,dest as vertex) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,0" id="347">
      <find>A.19</find>
      <schemavariable name="%t">$eq(v as vertex,dest as vertex) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,0,0,1,0,1,0" id="348">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;14;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">51 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,0,1,0" id="349">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,0" id="350">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,0,1,0" id="351">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="352">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,0,1,0" id="353">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,1,0,1,0" id="354">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="355">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="356">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="357">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="358">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="359">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="360">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="361">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="362">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="363">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="364">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="365">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="366">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="367">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="368">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="369">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,0" id="370">
      <find>S.0.0.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,0,1,0" id="371">
      <find>S.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,0,1,0" id="372">
      <find>S.0</find>
      <schemavariable name="%a">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,0,1,0" id="373">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,1" id="374">
      <find>A.19</find>
      <schemavariable name="%t">$not($eq(v as vertex,dest as vertex) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,1,0,1,1" id="375">
      <find>A.19</find>
      <schemavariable name="%b">$eq(iv(a_v2 as int) as vertex,dest as vertex) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1,0,1,1" id="376">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;17;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,1" id="377">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 2 as int }([&lt;18;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,1" id="378">
      <find>S.0.16</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,0,1,1" id="379">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;18;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,0,1,1" id="380">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) || $markA := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,0,1,1" id="381">
      <find>S.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,1,0,1,1" id="382">
      <find>S.0.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,0,1,1" id="383">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="384">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,1 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="385">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="386">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,3 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="387">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,4 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="388">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,5 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="389">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,6 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,0,1,1" id="390">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,0 as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,0,0,1,0,1,1" id="391">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,0,1,1" id="392">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,0,1,1" id="393">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[15;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($eq(a_v as int,a_dest as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1" id="394">
      <find>A.17</find>
      <schemavariable name="%t">$not($eq(a_v as int,a_dest as int) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,1,1" id="395">
      <find>A.17</find>
      <schemavariable name="%b">$eq(a_v2 as int,a_dest as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1,1" id="396">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[16;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1" id="397">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 2 as int }([17;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1" id="398">
      <find>S.0.16</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || $markC := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,1" id="399">
      <find>S.0.0</find>
      <schemavariable name="%a">[17;bfs_array']([&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,0,0,0,1,1" id="400">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">v as vertex</schemavariable>
      <schemavariable name="%a">[&lt;9;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1" id="401">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ v := \var x1 as vertex }([&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1" id="402">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="0,0,0,0,0,1,1" id="403">
      <find>S.0</find>
      <schemavariable name="%inst">iv(a_v2 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := \var x1 as vertex }([&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0,0,0,1,1" id="404">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;10;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,0" id="405">
      <find>S.0</find>
      <schemavariable name="%t">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,1,0" id="406">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1" id="407">
      <find>A.17</find>
      <schemavariable name="%t">$mem(v as vertex,C as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1,1,1" id="408">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;11;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := $diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1" id="409">
      <find>S.0</find>
      <schemavariable name="%t">{ C := $diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex) }([&lt;12;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1" id="410">
      <find>S.0.16</find>
      <schemavariable name="%t">$diff(C as set(vertex),singleton(v as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,0,1,1,1" id="411">
      <find>S.0</find>
      <schemavariable name="%n2">16 as int</schemavariable>
      <schemavariable name="%n1">13 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;12;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$eq(v as vertex,dest as vertex) as bool</schemavariable>
      <schemavariable name="%phi2">$not($eq(v as vertex,dest as vertex) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,0" id="412">
      <find>A.18</find>
      <schemavariable name="%t">$eq(v as vertex,dest as vertex) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,0,0,1,1,1,0" id="413">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;14;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">51 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,1,1,0" id="414">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,0" id="415">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,1,1,0" id="416">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,1,1,1,0" id="417">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,0" id="418">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="419">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="420">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="421">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="422">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="423">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="424">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,0,1,1,1,0" id="425">
      <find>S.0</find>
      <schemavariable name="%a">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,0,0,1,1,1,0" id="426">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,1,1,0" id="427">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,1" id="428">
      <find>A.18</find>
      <schemavariable name="%t">$not($eq(v as vertex,dest as vertex) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,0,1,1,1,1" id="429">
      <find>A.18</find>
      <schemavariable name="%b">$eq(iv(a_v2 as int) as vertex,dest as vertex) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,0,1,1,1,1" id="430">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;17;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,1" id="431">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 2 as int }([&lt;18;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,1" id="432">
      <find>S.0.16</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || $markA := 0 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,0,1,1,1,1" id="433">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;18;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,0,1,1,1,1" id="434">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v2 as int || a_C := seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool) || $markC := 2 as int || v := iv(a_v2 as int) as vertex || C := $diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex) || $markA := 2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,1,1,1" id="435">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,1,1,1" id="436">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(2 as int,1 as int) as bool,$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,0,1,1,1,1" id="437">
      <find>S.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,0,1,1,1,1" id="438">
      <find>S.0.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="439">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="440">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,0,1,1,1,1" id="441">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqUpdate" path="0,0,0,0,0,1,1,1,1" id="442">
      <find>S.0.0.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">a_v2 as int</schemavariable>
      <schemavariable name="%v">false as bool</schemavariable>
      <schemavariable name="%seq">a_C1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqUpdate" path="0,0,0,0,0,1,1,1,1" id="443">
      <find>S.0.0.0.0.0.0.0.1.0.0</find>
      <schemavariable name="%i">a_v2 as int</schemavariable>
      <schemavariable name="%v">false as bool</schemavariable>
      <schemavariable name="%seq">a_C1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="444">
      <find>S.0.0.0.0.0.1.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="445">
      <find>S.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1,1,1,1" id="446">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="447">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="448">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1,1,1,1" id="449">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="450">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="451">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1,1,1,1" id="452">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="453">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="454">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_C1 as seq(bool),a_v2 as int,false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1,1,1,1" id="455">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,0,1,1,1,1" id="456">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,0,1,1,1,1" id="457">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,0,1,1,1,1" id="458">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1" id="459">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(iv(a_v2 as int) as vertex) as int,a_v2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0" id="460">
      <find>S.0</find>
      <schemavariable name="%a">$eq($diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="0,0,0,0,0,1,1,1,1,0,0" id="461">
      <find>S.0</find>
      <schemavariable name="%e">\var e as vertex</schemavariable>
      <schemavariable name="%a">$diff(C1 as set(vertex),singleton(iv(a_v2 as int) as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%b">(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_C1 as seq(bool)) as int) as bool) as bool,$eq(a_v2 as int,vi(\var x as vertex) as int) as bool) as bool,false as bool,seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)</schemavariable>
      <typevariable name="e">vertex</typevariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,1,1,1,0,0" id="462">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0,1" id="463">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,1,1,1,1,0,1,0" id="464">
      <find>S.0</find>
      <assume>A.7</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0,1,1" id="465">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,1,1,1,1,0,1,1,0" id="466">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0,1,1,1" id="467">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,1,1,1,1,0,1,1,1,0" id="468">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0,1,1,1,1" id="469">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,1,1,1,1,0,1,1,1,1,0" id="470">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,0,1,1,1,1,0,1,1,1,1,1" id="471">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0" id="472">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1" id="473">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,0,1,1,1,1,1" id="474">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1" id="475">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1" id="476">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1" id="477">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="478">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,1" id="479">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="480">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="481">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="482">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="483">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1" id="484">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="485">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="486">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="487">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="488">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="489">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,0,0,1" id="490">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="491">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="492">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="493">
      <find>A.8</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="494">
      <find>A.9</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="495">
      <find>A.10</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="496">
      <find>A.11</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1" id="497">
      <find>A.12</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,1" id="498">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,1" id="499">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,1" id="500">
      <find>A.7</find>
      <schemavariable name="%u">a_v1 as int</schemavariable>
      <schemavariable name="%t">vi(v1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,0,1" id="501">
      <find>A.13</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,1" id="502">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,0,1" id="503">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1" id="504">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[18;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1" id="505">
      <find>S.0</find>
      <schemavariable name="%t">{ a_w := 0 as int }([19;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1" id="506">
      <find>S.0.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,0,0,0,1" id="507">
      <find>S.0</find>
      <schemavariable name="%k">36 as int</schemavariable>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[19;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">20 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,1,0" id="508">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[20;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="509">
      <find>A.14</find>
      <schemavariable name="%t">(\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,0,0,1,0" id="510">
      <find>A.14</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v1 as int) as seq(bool),\var i as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i2</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1,0" id="511">
      <find>A.14</find>
      <schemavariable name="%a">$and($lte(0 as int,i2 as int) as bool,$lt(i2 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet(a_succ(a_v1 as int) as seq(bool),i2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1,0" id="512">
      <find>A.14</find>
      <schemavariable name="%a">$lte(0 as int,i2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i2 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0" id="513">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[21;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_t := a_w as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="514">
      <find>S.0</find>
      <schemavariable name="%t">{ a_t := a_w as int }([22;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="515">
      <find>S.0.16</find>
      <schemavariable name="%t">a_w as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_havoc" path="0,0,0,0,1,0" id="516">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%v">a_w as int</schemavariable>
      <schemavariable name="%a">[22;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int || a_t := 0 as int }</schemaupdate>
      <property name="skolemName(a_w as int)">a_w3</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="517">
      <find>S.0</find>
      <schemavariable name="%t">{ a_w := a_w3 as int }([23;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int || a_t := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="518">
      <find>S.0.16</find>
      <schemavariable name="%t">a_w3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int || a_t := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,1,0" id="519">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[23;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($lte(a_t as int,a_w as int) as bool,$lt(a_w as int,a_size as int) as bool) as bool,$and(seqGet(a_succ(a_v as int) as seq(bool),a_w as int) as bool,(\forall j as int;$impl($and($lte(a_t as int,\var j as int) as bool,$lt(\var j as int,a_w as int) as bool) as bool,$not(seqGet(a_succ(a_v as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := 0 as int || a_w := a_w3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="520">
      <find>A.17</find>
      <schemavariable name="%t">$and($and($lte(a_t as int,a_w as int) as bool,$lt(a_w as int,a_size as int) as bool) as bool,$and(seqGet(a_succ(a_v as int) as seq(bool),a_w as int) as bool,(\forall j as int;$impl($and($lte(a_t as int,\var j as int) as bool,$lt(\var j as int,a_w as int) as bool) as bool,$not(seqGet(a_succ(a_v as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := 0 as int || a_w := a_w3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1,0" id="521">
      <find>A.17</find>
      <schemavariable name="%a">$and($lte(0 as int,a_w3 as int) as bool,$lt(a_w3 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and(seqGet(a_succ(a_v1 as int) as seq(bool),a_w3 as int) as bool,(\forall j as int;$impl($and($lte(0 as int,\var j as int) as bool,$lt(\var j as int,a_w3 as int) as bool) as bool,$not(seqGet(a_succ(a_v1 as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1,0" id="522">
      <find>A.17</find>
      <schemavariable name="%a">$lte(0 as int,a_w3 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(a_w3 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,0,1,0" id="523">
      <find>A.18</find>
      <schemavariable name="%a">seqGet(a_succ(a_v1 as int) as seq(bool),a_w3 as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall j as int;$impl($and($lte(0 as int,\var j as int) as bool,$lt(\var j as int,a_w3 as int) as bool) as bool,$not(seqGet(a_succ(a_v1 as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0" id="524">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[24;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="525">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 3 as int }([25;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := 0 as int || a_w := a_w3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="526">
      <find>S.0.16</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := 0 as int || a_w := a_w3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,1,0" id="527">
      <find>S.0.0</find>
      <schemavariable name="%a">[25;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0" id="528">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ tovisit := succ(v as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="529">
      <find>S.0</find>
      <schemavariable name="%t">{ tovisit := succ(v as vertex) as set(vertex) }([&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0" id="530">
      <find>S.0.16</find>
      <schemavariable name="%t">succ(v as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,1,0" id="531">
      <find>S.0</find>
      <schemavariable name="%n2">36 as int</schemavariable>
      <schemavariable name="%n1">21 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0" id="532">
      <find>A.21</find>
      <schemavariable name="%t">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,1,0,0" id="533">
      <find>A.21.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,1,0,0" id="534">
      <find>A.21</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,1,0,0" id="535">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x8</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,1,0,0" id="536">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x8 as vertex,succ(v1 as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,0,0,1,0,0" id="537">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">w as vertex</schemavariable>
      <schemavariable name="%a">[&lt;22;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0" id="538">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0" id="539">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="0,0,0,0,1,0,0" id="540">
      <find>S.0</find>
      <schemavariable name="%inst">iv(a_w3 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,0,0,1,0,0" id="541">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := iv(a_w3 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,0" id="542">
      <find>S.0</find>
      <schemavariable name="%t">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := iv(a_w3 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,0,0" id="543">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="544">
      <find>A.22</find>
      <schemavariable name="%t">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := iv(a_w3 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0,0,1" id="545">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;24;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ tovisit := $diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="546">
      <find>S.0</find>
      <schemavariable name="%t">{ tovisit := $diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;25;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := iv(a_w3 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="547">
      <find>S.0.16</find>
      <schemavariable name="%t">$diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || w := iv(a_w3 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0,0,1" id="548">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;25;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="549">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 3 as int }([&lt;26;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || w := iv(a_w3 as int) as vertex || tovisit := $diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="550">
      <find>S.0.16</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || w := iv(a_w3 as int) as vertex || tovisit := $diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,1,0,0,1" id="551">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;26;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,0,1" id="552">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || w := iv(a_w3 as int) as vertex || tovisit := $diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex) || $markA := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,1,0,0,1" id="553">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,0,0,1" id="554">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(3 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,1,0,0,1" id="555">
      <find>S.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,1,0,0,1" id="556">
      <find>S.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="557">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="558">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,0,0,1" id="559">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(3 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="560">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="561">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,0,0,1" id="562">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="563">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="564">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,0,0,1" id="565">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="566">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="567">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,0,0,1" id="568">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="569">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="570">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,0,0,1" id="571">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,0,1" id="572">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,0,0,1" id="573">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,0,0,1" id="574">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1" id="575">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0" id="576">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,0" id="577">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0,1" id="578">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,1,0" id="579">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0,1,1" id="580">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,1,1,0" id="581">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0,1,1,1" id="582">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,1,1,1,0" id="583">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0,1,1,1,1" id="584">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,1,1,1,1,0" id="585">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,0,1,1,1,1,1" id="586">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,0,0,1,0,1,1,1,1,1,0" id="587">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,0,1,0,1,1,1,1,1,1" id="588">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,1" id="589">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool,$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,0,1,1,0" id="590">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,0,0,1,1,1" id="591">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(iv(a_w3 as int) as vertex) as int,a_w3 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq($diff(succ(v1 as vertex) as set(vertex),singleton(iv(a_w3 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,0,1,1,1,0" id="592">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,0,1,1,1,1" id="593">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,1" id="594">
      <find>A.21</find>
      <schemavariable name="%t">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,1,0,1" id="595">
      <find>A.21</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,0,1" id="596">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;37;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,1" id="597">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 5 as int }([&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,1" id="598">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,1,0,1" id="599">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,0,1" id="600">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_t := 0 as int || a_w := a_w3 as int || $markC := 3 as int || tovisit := succ(v1 as vertex) as set(vertex) || $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,1,0,1" id="601">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,1,0,1" id="602">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,0,1" id="603">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="604">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="605">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="606">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w3 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="607">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w3 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(a_w3 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="608">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="609">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,0,0,1,0,1" id="610">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,0 as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,0,0,1,0,1" id="611">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="forall_left_hide" path="0,0,0,0,1,0,1" id="612">
      <find>A.21</find>
      <schemavariable name="%inst">iv(a_w3 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,0,1" id="613">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,0,1,1" id="614">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[36;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1" id="615">
      <find>A.14</find>
      <schemavariable name="%t">$not((\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,1,1" id="616">
      <find>A.14</find>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v1 as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,1" id="617">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[37;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1" id="618">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 5 as int }([38;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1" id="619">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,1,1" id="620">
      <find>S.0.0</find>
      <schemavariable name="%a">[38;bfs_array']([&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,1" id="621">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;19;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ tovisit := succ(v as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1" id="622">
      <find>S.0</find>
      <schemavariable name="%t">{ tovisit := succ(v as vertex) as set(vertex) }([&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1" id="623">
      <find>S.0.16</find>
      <schemavariable name="%t">succ(v as vertex) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,0,1,1" id="624">
      <find>S.0</find>
      <schemavariable name="%n2">36 as int</schemavariable>
      <schemavariable name="%n1">21 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,0" id="625">
      <find>A.14</find>
      <schemavariable name="%t">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,1,1,0" id="626">
      <find>A.14.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,0,1,1,0" id="627">
      <find>A.14</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,0,0,1,1,0" id="628">
      <find>S.2</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x6</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,0,0,1,1,0" id="629">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x6 as vertex,succ(v1 as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,0,0,1,1,0" id="630">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">w as vertex</schemavariable>
      <schemavariable name="%a">[&lt;22;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,0" id="631">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,0" id="632">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,1,0" id="633">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,1" id="634">
      <find>A.14</find>
      <schemavariable name="%t">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,0,1,1,1" id="635">
      <find>A.14</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,0,1,1,1" id="636">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;37;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,1" id="637">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 5 as int }([&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,1" id="638">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,0,1,1,1" id="639">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,0,1,1,1" id="640">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_w := 0 as int || $markC := 5 as int || tovisit := succ(v1 as vertex) as set(vertex) || $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,1,1,1" id="641">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,1,1" id="642">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,0,1,1,1" id="643">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,0,1,1,1" id="644">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="645">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="646">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,1,1" id="647">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="648">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="649">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,1,1" id="650">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,0 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(0 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="651">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="652">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,0 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(0 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,1,1" id="653">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,0 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(0 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="654">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="655">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,0 as int) as bool,$eq(succ(v1 as vertex) as set(vertex),$intersect((\set x as vertex;$lt(0 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,0,1,1,1" id="656">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="657">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="658">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,1,1" id="659">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,0,1,1,1" id="660">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,0,1,1,1" id="661">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,0,1,1,1" id="662">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1" id="663">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0" id="664">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,0" id="665">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0,1" id="666">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,1,0" id="667">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0,1,1" id="668">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,1,1,0" id="669">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0,1,1,1" id="670">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,1,1,1,0" id="671">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0,1,1,1,1" id="672">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,1,1,1,1,0" id="673">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,0,1,1,1,0,1,1,1,1,1" id="674">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,0,1,1,1,0,1,1,1,1,1,0" id="675">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,1,1,0,1,1,1,1,1,1" id="676">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,0,1,1,1,1" id="677">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1" id="678">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1" id="679">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1" id="680">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="681">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,0,1" id="682">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="683">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="684">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="685">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="686">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1" id="687">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="688">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="689">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="690">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="691">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="692">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,0,1" id="693">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="694">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="695">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="696">
      <find>A.7</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="697">
      <find>A.8</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="698">
      <find>A.9</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="699">
      <find>A.10</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="700">
      <find>A.12</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="701">
      <find>A.13</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,0,1" id="702">
      <find>A.14</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,1" id="703">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,1" id="704">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,1" id="705">
      <find>A.7</find>
      <schemavariable name="%u">a_v1 as int</schemavariable>
      <schemavariable name="%t">vi(v1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,1" id="706">
      <find>A.9</find>
      <schemavariable name="%u">a_w1 as int</schemavariable>
      <schemavariable name="%t">vi(w1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,1" id="707">
      <find>A.11.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w1 as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,0,1" id="708">
      <find>A.15</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,1" id="709">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,0,1" id="710">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,0,0,1" id="711">
      <find>S.0</find>
      <schemavariable name="%k">31 as int</schemavariable>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[26;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">27 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,1,0" id="712">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[27;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not(seqGet(a_V as seq(bool),a_w as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="713">
      <find>A.16</find>
      <schemavariable name="%t">$not(seqGet(a_V as seq(bool),a_w as int) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,1,0" id="714">
      <find>A.16</find>
      <schemavariable name="%b">seqGet(a_V1 as seq(bool),a_w1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0" id="715">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[28;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_V := seqUpdate(a_V as seq(bool),a_w as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="716">
      <find>S.0</find>
      <schemavariable name="%t">{ a_V := seqUpdate(a_V as seq(bool),a_w as int,true as bool) as seq(bool) }([29;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="717">
      <find>S.0.16</find>
      <schemavariable name="%t">seqUpdate(a_V as seq(bool),a_w as int,true as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0" id="718">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[29;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_N := seqUpdate(a_N as seq(bool),a_w as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="719">
      <find>S.0</find>
      <schemavariable name="%t">{ a_N := seqUpdate(a_N as seq(bool),a_w as int,true as bool) as seq(bool) }([30;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="720">
      <find>S.0.16</find>
      <schemavariable name="%t">seqUpdate(a_N as seq(bool),a_w as int,true as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,1,0" id="721">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[30;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">32 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0" id="722">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[32;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="723">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 4 as int }([33;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0" id="724">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,0" id="725">
      <find>S.0.0</find>
      <schemavariable name="%a">[33;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,1,0" id="726">
      <find>S.0</find>
      <schemavariable name="%n2">32 as int</schemavariable>
      <schemavariable name="%n1">28 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($mem(w as vertex,V as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($mem(w as vertex,V as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="727">
      <find>A.16</find>
      <schemavariable name="%t">$not($mem(w as vertex,V as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,1,0,0" id="728">
      <find>A.16</find>
      <schemavariable name="%b">$mem(w1 as vertex,V1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0,0" id="729">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;29;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ V := $union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="730">
      <find>S.0</find>
      <schemavariable name="%t">{ V := $union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;30;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="731">
      <find>S.0.16</find>
      <schemavariable name="%t">$union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0,0" id="732">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;30;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := $union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="733">
      <find>S.0</find>
      <schemavariable name="%t">{ N := $union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;31;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="734">
      <find>S.0.16</find>
      <schemavariable name="%t">$union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,1,0,0" id="735">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;31;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">33 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0,0" id="736">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;33;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="737">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 4 as int }([&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="738">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,0,0" id="739">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,0" id="740">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_w := a_w1 as int || a_v := a_v1 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,0,0" id="741">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,0" id="742">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,0,0" id="743">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,1,0,0" id="744">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="745">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="746">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,0" id="747">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="748">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="749">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,0" id="750">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="751">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="752">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,0" id="753">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqUpdate" path="0,0,0,1,0,0" id="754">
      <find>S.0.0.0.0.0.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_N1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqUpdate" path="0,0,0,1,0,0" id="755">
      <find>S.0.0.0.0.0.1.1.1.0.0</find>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_N1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqUpdate" path="0,0,0,1,0,0" id="756">
      <find>S.0.0.0.0.0.1.1.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_V1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqUpdate" path="0,0,0,1,0,0" id="757">
      <find>S.0.0.0.0.0.1.1.1.1.1.0.0</find>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_V1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="758">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="759">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,0" id="760">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="761">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="762">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,0" id="763">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,0" id="764">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,0" id="765">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,0" id="766">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0" id="767">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0" id="768">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,0,0,0" id="769">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0,1" id="770">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,0,0,1,0" id="771">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0,1,1" id="772">
      <find>S.0</find>
      <schemavariable name="%a">$eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,0,0,1,1,0" id="773">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0,1,1,1" id="774">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,0,0,1,1,1,0" id="775">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0,1,1,1,1" id="776">
      <find>S.0</find>
      <schemavariable name="%a">$eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,0,0,1,1,1,1,0" id="777">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,0,1,1,1,1,1" id="778">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,0,0,1,1,1,1,1,0" id="779">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,0,0,1,1,1,1,1,1" id="780">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,1" id="781">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,0,1,0" id="782">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,0,1,1" id="783">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,0,1,1,0" id="784">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,0,1,1,1" id="785">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,1" id="786">
      <find>A.16</find>
      <schemavariable name="%t">$not($not($mem(w as vertex,V as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,1,0,1" id="787">
      <find>A.16</find>
      <schemavariable name="%b">$mem(w1 as vertex,V1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,0,1" id="788">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;33;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,1" id="789">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 4 as int }([&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,1" id="790">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,0,1" id="791">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,0,1" id="792">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_w := a_w1 as int || a_v := a_v1 as int || a_V := seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || a_N := seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool) || $markC := 4 as int || $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,0,1" id="793">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,1" id="794">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,0,1" id="795">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,1,0,1" id="796">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="797">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="798">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,1" id="799">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="800">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="801">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,1" id="802">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="803">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="804">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,0,1" id="805">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqUpdate" path="0,0,0,1,0,1" id="806">
      <find>S.0.0.0.0.0.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_N1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqUpdate" path="0,0,0,1,0,1" id="807">
      <find>S.0.0.0.0.0.1.1.1.0.0</find>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_N1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqUpdate" path="0,0,0,1,0,1" id="808">
      <find>S.0.0.0.0.0.1.1.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_V1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="j">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqUpdate" path="0,0,0,1,0,1" id="809">
      <find>S.0.0.0.0.0.1.1.1.1.1.0.0</find>
      <schemavariable name="%i">a_w1 as int</schemavariable>
      <schemavariable name="%v">true as bool</schemavariable>
      <schemavariable name="%seq">a_V1 as seq(bool)</schemavariable>
      <typevariable name="v">bool</typevariable>
      <typevariable name="seq">seq(bool)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="810">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="811">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,1" id="812">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="813">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="814">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_N1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(seqUpdate(a_V1 as seq(bool),a_w1 as int,true as bool) as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,1" id="815">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,0,1" id="816">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,0,1" id="817">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,0,1" id="818">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1" id="819">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0" id="820">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,1,0,0" id="821">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0,1" id="822">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,1,0,1,0" id="823">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0,1,1" id="824">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_N1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,1,0,1,1,0" id="825">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0,1,1,1" id="826">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,1,0,1,1,1,0" id="827">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0,1,1,1,1" id="828">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;cond($and($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,seqLen(a_V1 as seq(bool)) as int) as bool) as bool,$eq(a_w1 as int,vi(\var x as vertex) as int) as bool) as bool,true as bool,seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,1,0,1,1,1,1,0" id="829">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,0,1,1,1,1,1" id="830">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,1,0,1,1,1,1,1,0" id="831">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,1,0,1,1,1,1,1,1" id="832">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,1" id="833">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,1,1,0" id="834">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,0,1,1,1" id="835">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,0,1,1,1,0" id="836">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,0,1,1,1,1" id="837">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,0,1,1" id="838">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[31;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not(seqGet(a_V as seq(bool),a_w as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1" id="839">
      <find>A.16</find>
      <schemavariable name="%t">$not($not(seqGet(a_V as seq(bool),a_w as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,1,1" id="840">
      <find>A.16</find>
      <schemavariable name="%b">seqGet(a_V1 as seq(bool),a_w1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,1" id="841">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[32;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1" id="842">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 4 as int }([33;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1" id="843">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,1" id="844">
      <find>S.0.0</find>
      <schemavariable name="%a">[33;bfs_array']([&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,0,1,1" id="845">
      <find>S.0</find>
      <schemavariable name="%n2">32 as int</schemavariable>
      <schemavariable name="%n1">28 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;27;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($mem(w as vertex,V as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($mem(w as vertex,V as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="846">
      <find>A.17</find>
      <schemavariable name="%t">$not($mem(w as vertex,V as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,0,1,1,0" id="847">
      <find>A.17</find>
      <schemavariable name="%b">$mem(w1 as vertex,V1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,1,0" id="848">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;29;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ V := $union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="849">
      <find>S.0</find>
      <schemavariable name="%t">{ V := $union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;30;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="850">
      <find>S.0.16</find>
      <schemavariable name="%t">$union(V as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,1,0" id="851">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;30;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := $union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="852">
      <find>S.0</find>
      <schemavariable name="%t">{ N := $union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;31;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="853">
      <find>S.0.16</find>
      <schemavariable name="%t">$union(N as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,0,1,1,0" id="854">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;31;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">33 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,1,0" id="855">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;33;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="856">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 4 as int }([&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="857">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,1,0" id="858">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,0" id="859">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 4 as int || V := $union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || N := $union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex) || $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,1,0" id="860">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,0" id="861">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,1,0" id="862">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,1,1,0" id="863">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="864">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="865">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,0" id="866">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="867">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="868">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,0" id="869">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="870">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="871">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,0" id="872">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="873">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="874">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,0" id="875">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="876">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="877">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,0" id="878">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,0" id="879">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,0" id="880">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,0" id="881">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0" id="882">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0" id="883">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,0,0,0" id="884">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0,1" id="885">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,0,0,1,0" id="886">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0,1,1" id="887">
      <find>S.0</find>
      <schemavariable name="%a">$eq($union(N1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,0,0,1,1,0" id="888">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0,1,1,1" id="889">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,0,0,1,1,1,0" id="890">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0,1,1,1,1" id="891">
      <find>S.0</find>
      <schemavariable name="%a">$eq($union(V1 as set(vertex),singleton(w1 as vertex) as set(vertex)) as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,0,0,1,1,1,1,0" id="892">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,0,1,1,1,1,1" id="893">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,0,0,1,1,1,1,1,0" id="894">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,0,0,1,1,1,1,1,1" id="895">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,1" id="896">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,0,1,0" id="897">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,0,1,1" id="898">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,0,1,1,0" id="899">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,0,1,1,1" id="900">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,1" id="901">
      <find>A.17</find>
      <schemavariable name="%t">$not($not($mem(w as vertex,V as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,0,0,1,1,1" id="902">
      <find>A.17</find>
      <schemavariable name="%b">$mem(w1 as vertex,V1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,0,1,1,1" id="903">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;33;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,1" id="904">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 4 as int }([&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,1" id="905">
      <find>S.0.16</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,0,1,1,1" id="906">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;34;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,0,1,1,1" id="907">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 4 as int || $markA := 4 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,1,1" id="908">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,1" id="909">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,0,1,1,1" id="910">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,0,1,1,1" id="911">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="912">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="913">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,1" id="914">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="915">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="916">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,1" id="917">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(4 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="918">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="919">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,0,1,1,1" id="920">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="921">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="922">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,1" id="923">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="924">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="925">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,1" id="926">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,0,1,1,1" id="927">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">4 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,0,1,1,1" id="928">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,0,1,1,1" id="929">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1" id="930">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0" id="931">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,0" id="932">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0,1" id="933">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,1,0" id="934">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0,1,1" id="935">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,1,1,0" id="936">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0,1,1,1" id="937">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,1,1,1,0" id="938">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0,1,1,1,1" id="939">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,1,1,1,1,0" id="940">
      <find>S.0</find>
      <assume>A.13</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,0,1,1,1,1,1" id="941">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,0,1,1,1,1,1,0" id="942">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,1,0,1,1,1,1,1,1" id="943">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,1" id="944">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,1,1,0" id="945">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,0,1,1,1,1,1" id="946">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0,1,1,1,1,1,0" id="947">
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,0,1,1,1,1,1,1" id="948">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1" id="949">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,[34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1" id="950">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1" id="951">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="952">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1" id="953">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="954">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="955">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="956">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="957">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1" id="958">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="959">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="960">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="961">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="962">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="963">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1" id="964">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="965">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="966">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="967">
      <find>A.7</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="968">
      <find>A.8</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="969">
      <find>A.9</find>
      <schemavariable name="%a">$eq(vi(w1 as vertex) as int,a_w1 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w1 as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="970">
      <find>A.10</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="971">
      <find>A.12</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="972">
      <find>A.13</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1" id="973">
      <find>A.14</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1" id="974">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1" id="975">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1" id="976">
      <find>A.7</find>
      <schemavariable name="%u">a_v1 as int</schemavariable>
      <schemavariable name="%t">vi(v1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1" id="977">
      <find>A.9</find>
      <schemavariable name="%u">a_w1 as int</schemavariable>
      <schemavariable name="%t">vi(w1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,1" id="978">
      <find>A.11.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w1 as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,0,1" id="979">
      <find>A.15</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,1" id="980">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,0,1" id="981">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1" id="982">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[34;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_w := $plus(a_w as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1" id="983">
      <find>S.0</find>
      <schemavariable name="%t">{ a_w := $plus(a_w as int,1 as int) as int }([35;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1" id="984">
      <find>S.0.16</find>
      <schemavariable name="%t">$plus(a_w as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,1" id="985">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[35;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">19 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,0,1" id="986">
      <find>S.0</find>
      <schemavariable name="%k">36 as int</schemavariable>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[19;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">20 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,1,0" id="987">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[20;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="988">
      <find>A.16</find>
      <schemavariable name="%t">(\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,0,1,0" id="989">
      <find>A.16</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte($plus(a_w1 as int,1 as int) as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v1 as int) as seq(bool),\var i as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0" id="990">
      <find>A.16</find>
      <schemavariable name="%a">$and($lte($plus(a_w1 as int,1 as int) as int,i as int) as bool,$lt(i as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet(a_succ(a_v1 as int) as seq(bool),i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0" id="991">
      <find>A.16</find>
      <schemavariable name="%a">$lte($plus(a_w1 as int,1 as int) as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0" id="992">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[21;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_t := a_w as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="993">
      <find>S.0</find>
      <schemavariable name="%t">{ a_t := a_w as int }([22;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="994">
      <find>S.0.16</find>
      <schemavariable name="%t">a_w as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_havoc" path="0,0,1,0" id="995">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%v">a_w as int</schemavariable>
      <schemavariable name="%a">[22;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">int</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || a_t := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
      <property name="skolemName(a_w as int)">a_w2</property>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="996">
      <find>S.0</find>
      <schemavariable name="%t">{ a_w := a_w2 as int }([23;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || a_t := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="997">
      <find>S.0.16</find>
      <schemavariable name="%t">a_w2 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || a_t := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,1,0" id="998">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[23;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($lte(a_t as int,a_w as int) as bool,$lt(a_w as int,a_size as int) as bool) as bool,$and(seqGet(a_succ(a_v as int) as seq(bool),a_w as int) as bool,(\forall j as int;$impl($and($lte(a_t as int,\var j as int) as bool,$lt(\var j as int,a_w as int) as bool) as bool,$not(seqGet(a_succ(a_v as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="999">
      <find>A.19</find>
      <schemavariable name="%t">$and($and($lte(a_t as int,a_w as int) as bool,$lt(a_w as int,a_size as int) as bool) as bool,$and(seqGet(a_succ(a_v as int) as seq(bool),a_w as int) as bool,(\forall j as int;$impl($and($lte(a_t as int,\var j as int) as bool,$lt(\var j as int,a_w as int) as bool) as bool,$not(seqGet(a_succ(a_v as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0" id="1000">
      <find>A.19</find>
      <schemavariable name="%a">$and($lte($plus(a_w1 as int,1 as int) as int,a_w2 as int) as bool,$lt(a_w2 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and(seqGet(a_succ(a_v1 as int) as seq(bool),a_w2 as int) as bool,(\forall j as int;$impl($and($lte($plus(a_w1 as int,1 as int) as int,\var j as int) as bool,$lt(\var j as int,a_w2 as int) as bool) as bool,$not(seqGet(a_succ(a_v1 as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0" id="1001">
      <find>A.19</find>
      <schemavariable name="%a">$lte($plus(a_w1 as int,1 as int) as int,a_w2 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(a_w2 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0" id="1002">
      <find>A.20</find>
      <schemavariable name="%a">seqGet(a_succ(a_v1 as int) as seq(bool),a_w2 as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall j as int;$impl($and($lte($plus(a_w1 as int,1 as int) as int,\var j as int) as bool,$lt(\var j as int,a_w2 as int) as bool) as bool,$not(seqGet(a_succ(a_v1 as int) as seq(bool),\var j as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0" id="1003">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[24;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="1004">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 3 as int }([25;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0" id="1005">
      <find>S.0.16</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,0" id="1006">
      <find>S.0.0</find>
      <schemavariable name="%a">[25;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,1,0" id="1007">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">20 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,1,0" id="1008">
      <find>S.0</find>
      <schemavariable name="%n2">36 as int</schemavariable>
      <schemavariable name="%n1">21 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0" id="1009">
      <find>A.23</find>
      <schemavariable name="%t">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1,0,0" id="1010">
      <find>A.23.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,0" id="1011">
      <find>A.23</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,tovisit1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,0,0" id="1012">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,tovisit1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x1</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,0,0" id="1013">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x1 as vertex,tovisit1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,1,0,0" id="1014">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">w as vertex</schemavariable>
      <schemavariable name="%a">[&lt;22;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0" id="1015">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0" id="1016">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_right_hide" path="0,0,1,0,0" id="1017">
      <find>S.0</find>
      <schemavariable name="%inst">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_dia_assume" path="0,0,1,0,0" id="1018">
      <find>S.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,0" id="1019">
      <find>S.0</find>
      <schemavariable name="%t">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,0,0" id="1020">
      <find>S.0.1</find>
      <assume>A.11</assume>
      <schemavariable name="%u">$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%t">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_intersect" path="0,0,1,0,0,0" id="1021">
      <find>S.0</find>
      <schemavariable name="%x">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%a">(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%b">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,0" id="1022">
      <find>S.0</find>
      <schemavariable name="%a">$mem(iv(a_w2 as int) as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$mem(iv(a_w2 as int) as vertex,succ(v1 as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_setext" path="0,0,1,0,0,0,0" id="1023">
      <find>S.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%b">$lt(a_w1 as int,vi(\var x as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut_dragdrop" path="0,0,1,0,0,0,0" id="1024">
      <find>S.0.1</find>
      <schemavariable name="%a">vi(iv(a_w2 as int) as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w2 as int</schemavariable>
      <typevariable name="a">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%b)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,0,0,0" id="1025">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,0,0,1" id="1026">
    </ruleApplication>
    <ruleApplication rule="forall_left" path="0,0,1,0,0,0,1" id="1027">
      <find>A.5</find>
      <schemavariable name="%inst">v1 as vertex</schemavariable>
      <schemavariable name="%x">\var v as vertex</schemavariable>
      <schemavariable name="%b">$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,0,0,1" id="1028">
      <find>S.0.1</find>
      <assume>A.24</assume>
      <schemavariable name="%u">(\set x as vertex;seqGet(a_succ(vi(v1 as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%t">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_setext" path="0,0,1,0,0,0,1" id="1029">
      <find>S.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%b">seqGet(a_succ(vi(v1 as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut_dragdrop" path="0,0,1,0,0,0,1" id="1030">
      <find>S.0.1.0.0</find>
      <schemavariable name="%a">a_w2 as int</schemavariable>
      <schemavariable name="%b">vi(iv(a_w2 as int) as vertex) as int</schemavariable>
      <typevariable name="a">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%b)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,0,1,0" id="1031">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,0,1,1" id="1032">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1033">
      <find>A.24</find>
      <schemavariable name="%t">$mem(w as vertex,tovisit as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0,0,1" id="1034">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;24;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ tovisit := $diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1035">
      <find>S.0</find>
      <schemavariable name="%t">{ tovisit := $diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex) }([&lt;25;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1036">
      <find>S.0.16</find>
      <schemavariable name="%t">$diff(tovisit as set(vertex),singleton(w as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0,0,1" id="1037">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;25;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1038">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 3 as int }([&lt;26;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex || tovisit := $diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1039">
      <find>S.0.16</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex || tovisit := $diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,0,0,1" id="1040">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;26;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,0,1" id="1041">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || w := iv(a_w2 as int) as vertex || tovisit := $diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex) || $markA := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0,0,1" id="1042">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,0,0,1" id="1043">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(3 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0,0,1" id="1044">
      <find>S.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,0,0,1" id="1045">
      <find>S.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1046">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1047">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,0,0,1" id="1048">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(3 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1049">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1050">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,0,0,1" id="1051">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1052">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1053">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1" id="1054">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1055">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1056">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1" id="1057">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1058">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1059">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1" id="1060">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,0,1" id="1061">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">3 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,0,0,1" id="1062">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1" id="1063">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1" id="1064">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0" id="1065">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,0" id="1066">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0,1" id="1067">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,1,0" id="1068">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0,1,1" id="1069">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,1,1,0" id="1070">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0,1,1,1" id="1071">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,1,1,1,0" id="1072">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0,1,1,1,1" id="1073">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,1,1,1,1,0" id="1074">
      <find>S.0</find>
      <assume>A.13</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,0,1,1,1,1,1" id="1075">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,0,0,1,0,1,1,1,1,1,0" id="1076">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,0,1,1,1,1,1,1" id="1077">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,1" id="1078">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool,$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,0" id="1079">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,1,1" id="1080">
      <find>S.0</find>
      <schemavariable name="%a">$eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool</schemavariable>
      <schemavariable name="%b">$eq($diff(tovisit1 as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,0" id="1081">
    </ruleApplication>
    <ruleApplication rule="cut" path="0,0,1,0,0,1,1,1,1" id="1082">
      <schemavariable name="%inst">$eq(vi(iv(a_w2 as int) as vertex) as int,a_w2 as int) as bool</schemavariable>
      <property name="interact(%inst)">bool</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,0,1,1,1,1,0" id="1083">
      <find>S.0.0.0</find>
      <assume>A.11</assume>
      <schemavariable name="%u">$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%t">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="set_equality" path="0,0,1,0,0,1,1,1,1,0" id="1084">
      <find>S.0</find>
      <schemavariable name="%e">\var e as vertex</schemavariable>
      <schemavariable name="%a">$diff($intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%b">$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <typevariable name="e">vertex</typevariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,0,0,1,1,1,1,0" id="1085">
      <find>S.0</find>
      <schemavariable name="%x">\var e as vertex</schemavariable>
      <schemavariable name="%b">$equiv($mem(\var e as vertex,$diff($intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex),singleton(iv(a_w2 as int) as vertex) as set(vertex)) as set(vertex)) as bool,$mem(\var e as vertex,$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="skolemName(\var e as vertex)">e</property>
    </ruleApplication>
    <ruleApplication rule="in_diff" path="0,0,1,0,0,1,1,1,1,0" id="1086">
      <find>S.0.0</find>
      <schemavariable name="%x">e as vertex</schemavariable>
      <schemavariable name="%a">$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%b">singleton(iv(a_w2 as int) as vertex) as set(vertex)</schemavariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_intersect" path="0,0,1,0,0,1,1,1,1,0" id="1087">
      <find>S.0.0.0</find>
      <schemavariable name="%x">e as vertex</schemavariable>
      <schemavariable name="%a">(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%b">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cutOnThat" path="0,0,1,0,0,1,1,1,1,0" id="1088">
      <find>S.0.0.0.1</find>
      <schemavariable name="%c">$mem(e as vertex,succ(v1 as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="c">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1,1,1,1,0,0" id="1089">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_intersect" path="0,0,1,0,0,1,1,1,1,0,0" id="1090">
      <find>S.0.1</find>
      <schemavariable name="%x">e as vertex</schemavariable>
      <schemavariable name="%a">(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%b">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="replace_known_left" path="0,0,1,0,0,1,1,1,1,0,0" id="1091">
      <find>S.0.1.1</find>
      <assume>A.26</assume>
      <schemavariable name="%b">$mem(e as vertex,succ(v1 as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,0,0,1,1,1,1,0,0" id="1092">
      <find>S.0.1</find>
      <schemavariable name="%a">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="forall_left" path="0,0,1,0,0,1,1,1,1,0,0" id="1093">
      <find>A.5</find>
      <schemavariable name="%inst">v1 as vertex</schemavariable>
      <schemavariable name="%x">\var v as vertex</schemavariable>
      <schemavariable name="%b">$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,0,1,1,1,1,0,0" id="1094">
      <find>A.26.1</find>
      <assume>A.27</assume>
      <schemavariable name="%u">(\set x as vertex;seqGet(a_succ(vi(v1 as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%t">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_setext" path="0,0,1,0,0,1,1,1,1,0,0" id="1095">
      <find>A.26</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">e as vertex</schemavariable>
      <schemavariable name="%b">seqGet(a_succ(vi(v1 as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equiv_to_eq" path="0,0,1,0,0,1,1,1,1,0,0" id="1096">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="eq_to_imp" path="0,0,1,0,0,1,1,1,1,0,0" id="1097">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,1,1,1,0,0" id="1098">
      <find>S.0</find>
      <schemavariable name="%a">$impl($and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool,$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%b">$impl($mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut" path="0,0,1,0,0,1,1,1,1,0,0,0" id="1099">
      <schemavariable name="%inst">$not($eq(a_w1 as int,a_w2 as int) as bool) as bool</schemavariable>
      <property name="interact(%inst)">bool</property>
    </ruleApplication>
    <ruleApplication rule="forall_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0" id="1100">
      <find>A.22</find>
      <schemavariable name="%inst">vi(e as vertex) as int</schemavariable>
      <schemavariable name="%x">\var j as int</schemavariable>
      <schemavariable name="%b">$impl($and($lte($plus(a_w1 as int,1 as int) as int,\var j as int) as bool,$lt(\var j as int,a_w2 as int) as bool) as bool,$not(seqGet(a_succ(a_v1 as int) as seq(bool),\var j as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">int</property>
    </ruleApplication>
    <ruleApplication rule="cut" path="0,0,1,0,0,1,1,1,1,0,0,0,0" id="1101">
      <schemavariable name="%inst">$eq(vi(e as vertex) as int,a_w2 as int) as bool</schemavariable>
      <property name="interact(%inst)">bool</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0" id="1102">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0" id="1103">
      <find>A.31</find>
      <schemavariable name="%a">$mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0" id="1104">
      <find>A.32.0</find>
      <schemavariable name="%y">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%x">e as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply_reverse" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0" id="1105">
      <find>A.32.0.1.0</find>
      <assume>A.30</assume>
      <schemavariable name="%u">vi(e as vertex) as int</schemavariable>
      <schemavariable name="%t">a_w2 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut_dragdrop" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0" id="1106">
      <find>A.32.0.0</find>
      <schemavariable name="%a">e as vertex</schemavariable>
      <schemavariable name="%b">iv(vi(e as vertex) as int) as vertex</schemavariable>
      <typevariable name="a">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%b)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0,0" id="1107">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,0,0,1" id="1108">
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1109">
      <find>A.28</find>
      <schemavariable name="%b">$eq(a_w1 as int,a_w2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1110">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1111">
      <find>A.29</find>
      <schemavariable name="%a">$mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1112">
      <find>A.30</find>
      <schemavariable name="%b">$mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1113">
      <find>S.3</find>
      <schemavariable name="%y">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%x">e as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1" id="1114">
      <find>A.28</find>
      <schemavariable name="%a">$and($lte($plus(a_w1 as int,1 as int) as int,vi(e as vertex) as int) as bool,$lt(vi(e as vertex) as int,a_w2 as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not(seqGet(a_succ(a_v1 as int) as seq(bool),vi(e as vertex) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1,0" id="1115">
      <find>S.4</find>
      <schemavariable name="%a">$lte($plus(a_w1 as int,1 as int) as int,vi(e as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(vi(e as vertex) as int,a_w2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,0" id="1116">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1,0,1" id="1117">
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1,1" id="1118">
      <find>A.28</find>
      <schemavariable name="%b">seqGet(a_succ(a_v1 as int) as seq(bool),vi(e as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,0,1,1" id="1119">
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1120">
      <find>S.0</find>
      <schemavariable name="%a">$and($mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$mem(e as vertex,(\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1121">
      <find>A.28</find>
      <schemavariable name="%a">$mem(e as vertex,(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$not($mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1122">
      <find>A.29</find>
      <schemavariable name="%b">$mem(e as vertex,singleton(iv(a_w2 as int) as vertex) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1123">
      <find>S.1</find>
      <schemavariable name="%b">$eq(a_w1 as int,a_w2 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="in_singleton" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1124">
      <find>S.1</find>
      <schemavariable name="%y">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%x">e as vertex</schemavariable>
      <typevariable name="y">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,0,1" id="1125">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,0,1" id="1126">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,0,1" id="1127">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,0,1,1,1,1,1" id="1128">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,1" id="1129">
      <find>A.23</find>
      <schemavariable name="%t">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1,0,1" id="1130">
      <find>A.23</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,0,1" id="1131">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;37;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,1" id="1132">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 5 as int }([&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,1" id="1133">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,0,1" id="1134">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,0,1" id="1135">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_t := $plus(a_w1 as int,1 as int) as int || a_w := a_w2 as int || $markC := 3 as int || $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,0,1" id="1136">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,0,1" id="1137">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,0,1" id="1138">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1139">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1140">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1141">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w2 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1142">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w2 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w2 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1143">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1144">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="0,0,1,0,1" id="1145">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,0 as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="0,0,1,0,1" id="1146">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0,1,0,1" id="1147">
      <find>A.23.0.0.1</find>
      <assume>A.11</assume>
      <schemavariable name="%u">$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)</schemavariable>
      <schemavariable name="%t">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_intersect" path="0,0,1,0,1" id="1148">
      <find>A.23.0.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">(\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%b">succ(v1 as vertex) as set(vertex)</schemavariable>
      <typevariable name="b">set(vertex)</typevariable>
      <typevariable name="a">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_setext" path="0,0,1,0,1" id="1149">
      <find>A.23.0.0.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">\var x as vertex</schemavariable>
      <schemavariable name="%b">$lt(a_w1 as int,vi(\var x as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="forall_left_hide" path="0,0,1,0,1" id="1150">
      <find>A.23</find>
      <schemavariable name="%inst">iv(a_w2 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($and($lt(a_w1 as int,vi(\var x as vertex) as int) as bool,$mem(\var x as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,0,1" id="1151">
      <find>A.23</find>
      <schemavariable name="%b">$and($lt(a_w1 as int,vi(iv(a_w2 as int) as vertex) as int) as bool,$mem(iv(a_w2 as int) as vertex,succ(v1 as vertex) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut_dragdrop" path="0,0,1,0,1" id="1152">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%a">a_w2 as int</schemavariable>
      <schemavariable name="%b">vi(iv(a_w2 as int) as vertex) as int</schemavariable>
      <typevariable name="a">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%b)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,0" id="1153">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,0,1,1" id="1154">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,0,1,1" id="1155">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[36;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1" id="1156">
      <find>A.16</find>
      <schemavariable name="%t">$not((\exists i as int;$and($and($lte(a_w as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v as int) as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,1" id="1157">
      <find>A.16</find>
      <schemavariable name="%b">(\exists i as int;$and($and($lte($plus(a_w1 as int,1 as int) as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_succ(a_v1 as int) as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,1" id="1158">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[37;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1" id="1159">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 5 as int }([38;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1" id="1160">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,1" id="1161">
      <find>S.0.0</find>
      <schemavariable name="%a">[38;bfs_array']([&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,0,1,1" id="1162">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;35;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">20 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,0,1,1" id="1163">
      <find>S.0</find>
      <schemavariable name="%n2">36 as int</schemavariable>
      <schemavariable name="%n1">21 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;20;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,0" id="1164">
      <find>A.16</find>
      <schemavariable name="%t">$not($eq(tovisit as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1,1,0" id="1165">
      <find>A.16.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,0,1,1,0" id="1166">
      <find>A.16</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,tovisit1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,0,1,1,0" id="1167">
      <find>S.2</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,tovisit1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,0,1,1,0" id="1168">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x as vertex,tovisit1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dprg_havoc" path="0,0,1,1,0" id="1169">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%v">w as vertex</schemavariable>
      <schemavariable name="%a">[&lt;22;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="v">vertex</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,0" id="1170">
      <find>S.0</find>
      <schemavariable name="%t">(\exists x1 as vertex;{ w := \var x1 as vertex }([&lt;23;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,0" id="1171">
      <find>S.0.0.16</find>
      <schemavariable name="%t">\var x1 as vertex</schemavariable>
      <typevariable name="t">vertex</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,0" id="1172">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,1" id="1173">
      <find>A.16</find>
      <schemavariable name="%t">$eq(tovisit as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,0,1,1,1" id="1174">
      <find>A.16</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">tovisit1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,0,1,1,1" id="1175">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;37;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,1" id="1176">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 5 as int }([&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,1" id="1177">
      <find>S.0.16</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || $markA := 0 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,0,1,1,1" id="1178">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;38;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,0,1,1,1" id="1179">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_v := a_v1 as int || a_w := $plus(a_w1 as int,1 as int) as int || $markC := 5 as int || $markA := 5 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1,1" id="1180">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1,1" id="1181">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1,1,1" id="1182">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,0,1,1,1" id="1183">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1184">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1185">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1,1" id="1186">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1187">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1188">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1,1" id="1189">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,$plus(a_w1 as int,1 as int) as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt($plus(a_w1 as int,1 as int) as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1190">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1191">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,$plus(a_w1 as int,1 as int) as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt($plus(a_w1 as int,1 as int) as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1,1" id="1192">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(5 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,$plus(a_w1 as int,1 as int) as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt($plus(a_w1 as int,1 as int) as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1193">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1194">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,$plus(a_w1 as int,1 as int) as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt($plus(a_w1 as int,1 as int) as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,0,1,1,1" id="1195">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1196">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1197">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,1,1" id="1198">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,0,1,1,1" id="1199">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">5 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,0,1,1,1" id="1200">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,0,1,1,1" id="1201">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1" id="1202">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0" id="1203">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,0" id="1204">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,1" id="1205">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,1,0" id="1206">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,1,1" id="1207">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,1,1,0" id="1208">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,1,1,1" id="1209">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,1,1,1,0" id="1210">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,1,1,1,1" id="1211">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,1,1,1,1,0" id="1212">
      <find>S.0</find>
      <assume>A.13</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,0,1,1,1,0,1,1,1,1,1" id="1213">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,0,1,1,1,0,1,1,1,1,1,0" id="1214">
      <find>S.0</find>
      <assume>A.14</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,0,1,1,1,1,1,1" id="1215">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,1,1,1,1" id="1216">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="1217">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[39;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="1218">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1" id="1219">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1220">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1" id="1221">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1222">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1223">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1224">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1225">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1" id="1226">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1227">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1228">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1229">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1230">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1231">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="0,1" id="1232">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([39;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1233">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1234">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1235">
      <find>A.8</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1236">
      <find>A.9</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1237">
      <find>A.10</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1238">
      <find>A.11</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1" id="1239">
      <find>A.12</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,1" id="1240">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,1" id="1241">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,1" id="1242">
      <find>A.7</find>
      <schemavariable name="%u">a_v1 as int</schemavariable>
      <schemavariable name="%t">vi(v1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0,1" id="1243">
      <find>A.13</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,1" id="1244">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="0,1" id="1245">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="0,1" id="1246">
      <find>S.0</find>
      <schemavariable name="%k">45 as int</schemavariable>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[39;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">40 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,1,0" id="1247">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[40;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1248">
      <find>A.14</find>
      <schemavariable name="%t">$not((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var i as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,1,0" id="1249">
      <find>A.14</find>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C1 as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0" id="1250">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[41;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_N as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1251">
      <find>S.0</find>
      <schemavariable name="%t">{ a_C := a_N as seq(bool) }([42;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1252">
      <find>S.0.16</find>
      <schemavariable name="%t">a_N as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0" id="1253">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[42;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1254">
      <find>S.0</find>
      <schemavariable name="%t">{ a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }([43;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1255">
      <find>S.0.16</find>
      <schemavariable name="%t">(\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)</schemavariable>
      <typevariable name="t">seq(bool)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0" id="1256">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[43;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := $plus(a_d as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1257">
      <find>S.0</find>
      <schemavariable name="%t">{ a_d := $plus(a_d as int,1 as int) as int }([44;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1258">
      <find>S.0.16</find>
      <schemavariable name="%t">$plus(a_d as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,1,0" id="1259">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[44;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">46 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0" id="1260">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[46;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1261">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 6 as int }([47;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0" id="1262">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,0" id="1263">
      <find>S.0.0</find>
      <schemavariable name="%a">[47;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,1,0" id="1264">
      <find>S.0</find>
      <schemavariable name="%n2">45 as int</schemavariable>
      <schemavariable name="%n1">40 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$eq(C as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%phi2">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1265">
      <find>A.14</find>
      <schemavariable name="%t">$eq(C as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,0,0" id="1266">
      <find>A.14</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0,0" id="1267">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;41;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := N as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1268">
      <find>S.0</find>
      <schemavariable name="%t">{ C := N as set(vertex) }([&lt;42;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1269">
      <find>S.0.16</find>
      <schemavariable name="%t">N as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0,0" id="1270">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;42;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1271">
      <find>S.0</find>
      <schemavariable name="%t">{ N := emptyset as set(vertex) }([&lt;43;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1272">
      <find>S.0.16</find>
      <schemavariable name="%t">emptyset as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0,0" id="1273">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;43;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $plus(d as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1274">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $plus(d as int,1 as int) as int }([&lt;44;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1275">
      <find>S.0.16</find>
      <schemavariable name="%t">$plus(d as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ d := d1 as int || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,1,0,0" id="1276">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;44;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">46 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0,0" id="1277">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;46;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1278">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 6 as int }([&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1279">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,0,0" id="1280">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,0" id="1281">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int || $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,0" id="1282">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1283">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,1 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,N1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1284">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1285">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1286">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1287">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1288">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,0" id="1289">
      <find>S.0.0.1.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,1,0,0" id="1290">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,0,0" id="1291">
      <find>S.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1292">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1293">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,N1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1294">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,2 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1295">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1296">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1297">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,3 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1298">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1299">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1300">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,4 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1301">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1302">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1303">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,5 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1304">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1305">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,0" id="1306">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,1,0,0" id="1307">
      <find>S.0.0.0.1.1.0.0.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0,1,0,0" id="1308">
      <find>S.0.0.0.1.1.1.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,0" id="1309">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,0" id="1310">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,0,0" id="1311">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0" id="1312">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0" id="1313">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,0,0,0" id="1314">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0,1" id="1315">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,0,0,1,0" id="1316">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0,1,1" id="1317">
      <find>S.0</find>
      <schemavariable name="%a">(\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,1,0,0,0,1,1,0" id="1318">
      <find>S.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x1 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x1 as vertex)">x12</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,1,0,0,0,1,1,0" id="1319">
      <find>S.0</find>
      <schemavariable name="%b">$mem(x12 as vertex,(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,0,0,1,1,0" id="1320">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0,1,1,1" id="1321">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,1,0,0,0,1,1,1,0" id="1322">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(a_size as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,0,0,1,1,1,0,0" id="1323">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,0,0,1,1,1,0,1" id="1324">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0,1,1,1,1" id="1325">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,0,0,1,1,1,1,0" id="1326">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,0,0,1,1,1,1,1" id="1327">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq($plus(d1 as int,1 as int) as int,$plus(a_d1 as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,0,0,1,1,1,1,1,0" id="1328">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,0,0,1,1,1,1,1,1" id="1329">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,0,1" id="1330">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,1" id="1331">
      <find>A.14</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,0,1" id="1332">
      <find>A.14.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,1,0,1" id="1333">
      <find>A.14</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,1,0,1" id="1334">
      <find>S.2</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x7</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,1,0,1" id="1335">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x7 as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,0,1" id="1336">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;46;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,1" id="1337">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 6 as int }([&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,1" id="1338">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,0,1" id="1339">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,0,1" id="1340">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || a_C := a_N1 as seq(bool) || a_N := (\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool) || a_d := $plus(a_d1 as int,1 as int) as int || $markC := 6 as int || $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,1" id="1341">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1342">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,0,1" id="1343">
      <find>S.0.0.1.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,1,0,1" id="1344">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1345">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1346">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1347">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1348">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1349">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1350">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1351">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1352">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1353">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1354">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1355">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1356">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1357">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1358">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,0,1" id="1359">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen((\seqDef i as int;0 as int;a_size as int;false as bool) as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0,1,0,1" id="1360">
      <find>S.0.0.0.1.1.0.1.0</find>
      <schemavariable name="%j">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0,1,0,1" id="1361">
      <find>S.0.0.0.1.1.1.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%t">false as bool</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">a_size as int</schemavariable>
      <typevariable name="t">bool</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,0,1" id="1362">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,0,1" id="1363">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,0,1" id="1364">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1" id="1365">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0" id="1366">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,0,0" id="1367">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0,1" id="1368">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool,$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,1,0,1,0" id="1369">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0,1,1" id="1370">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;cond($and($lte(0 as int,vi(\var x as vertex) as int) as bool,$lt(vi(\var x as vertex) as int,$minus(a_size as int,0 as int) as int) as bool) as bool,false as bool,seqError as bool) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,0,1,1,0" id="1371">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0,1,1,1" id="1372">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,a_size as int) as bool,$minus(a_size as int,0 as int) as int,0 as int) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,1,0,1,0,1,1,1,0" id="1373">
      <find>S.0.0</find>
      <schemavariable name="%a">$minus(a_size as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,0,1,1,1,0,0" id="1374">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,0,1,1,1,0,1" id="1375">
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0,1,1,1,1" id="1376">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,1,0,1,1,1,1,0" id="1377">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,0,1,0,1,1,1,1,1" id="1378">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,$plus(a_d1 as int,1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,0,1,0,1,1,1,1,1,0" id="1379">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,0,1,1,1,1,1,1" id="1380">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0,1,1" id="1381">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="0,1,1" id="1382">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[45;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not($not((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var i as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1" id="1383">
      <find>A.14</find>
      <schemavariable name="%t">$not($not((\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var i as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="0,1,1" id="1384">
      <find>A.14</find>
      <schemavariable name="%b">(\exists i as int;$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C1 as seq(bool),\var i as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="0,1,1" id="1385">
      <find>A.14</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,a_size as int) as bool) as bool,seqGet(a_C1 as seq(bool),\var i as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i1</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1,1" id="1386">
      <find>A.14</find>
      <schemavariable name="%a">$and($lte(0 as int,i1 as int) as bool,$lt(i1 as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet(a_C1 as seq(bool),i1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,1,1" id="1387">
      <find>A.14</find>
      <schemavariable name="%a">$lte(0 as int,i1 as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i1 as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1" id="1388">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[46;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1" id="1389">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 6 as int }([47;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1" id="1390">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,1" id="1391">
      <find>S.0.0</find>
      <schemavariable name="%a">[47;bfs_array']([&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="0,1,1" id="1392">
      <find>S.0</find>
      <schemavariable name="%n2">45 as int</schemavariable>
      <schemavariable name="%n1">40 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;39;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$eq(C as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%phi2">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1393">
      <find>A.17</find>
      <schemavariable name="%t">$eq(C as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,1,0" id="1394">
      <find>A.17</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1,0" id="1395">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;41;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ C := N as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1396">
      <find>S.0</find>
      <schemavariable name="%t">{ C := N as set(vertex) }([&lt;42;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1397">
      <find>S.0.16</find>
      <schemavariable name="%t">N as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1,0" id="1398">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;42;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1399">
      <find>S.0</find>
      <schemavariable name="%t">{ N := emptyset as set(vertex) }([&lt;43;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1400">
      <find>S.0.16</find>
      <schemavariable name="%t">emptyset as set(vertex)</schemavariable>
      <typevariable name="t">set(vertex)</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1,0" id="1401">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;43;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $plus(d as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1402">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $plus(d as int,1 as int) as int }([&lt;44;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1403">
      <find>S.0.16</find>
      <schemavariable name="%t">$plus(d as int,1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="0,1,1,0" id="1404">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;44;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">46 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1,0" id="1405">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;46;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1406">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 6 as int }([&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1407">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,1,0" id="1408">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,0" id="1409">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 6 as int || C := N1 as set(vertex) || N := emptyset as set(vertex) || d := $plus(d1 as int,1 as int) as int || $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,0" id="1410">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1411">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,1 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,N1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1412">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1413">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1414">
      <find>S.0.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1415">
      <find>S.0.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1416">
      <find>S.0.0.0.1.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,0" id="1417">
      <find>S.0.0.1.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,1,1,0" id="1418">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(emptyset as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals" path="0,1,1,0" id="1419">
      <find>S.0.0.1.0.1.1.0</find>
      <schemavariable name="%x">\var x1 as vertex</schemavariable>
      <schemavariable name="%s">(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1420">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1421">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,N1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1422">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,2 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1423">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1424">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1425">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,3 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1426">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1427">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1428">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,4 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1429">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1430">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1431">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,5 as int) as bool,$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1432">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1433">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,0" id="1434">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,0" id="1435">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,0" id="1436">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,1,0" id="1437">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,0" id="1438">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="hide_right" path="0,1,1,0,0" id="1439">
      <find>S.0</find>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and((\forall x1 as vertex;$not($mem(\var x1 as vertex,(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($plus(d1 as int,1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="forall_left" path="0,1,1,0,0" id="1440">
      <find>A.17</find>
      <schemavariable name="%inst">iv(i1 as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,1,1,0,0" id="1441">
      <find>A.18</find>
      <schemavariable name="%b">$mem(iv(i1 as int) as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,1,1,0,0" id="1442">
      <find>S.0.1</find>
      <assume>A.6</assume>
      <schemavariable name="%u">(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)</schemavariable>
      <schemavariable name="%t">C1 as set(vertex)</schemavariable>
      <typevariable name="u">set(vertex)</typevariable>
      <typevariable name="t">set(vertex)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="in_setext" path="0,1,1,0,0" id="1443">
      <find>S.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%a">iv(i1 as int) as vertex</schemavariable>
      <schemavariable name="%b">seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">vertex</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="cut_dragdrop" path="0,1,1,0,0" id="1444">
      <find>S.0.1.0.0</find>
      <schemavariable name="%a">i1 as int</schemavariable>
      <schemavariable name="%b">vi(iv(i1 as int) as vertex) as int</schemavariable>
      <typevariable name="a">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%b)">int</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,0,0,0" id="1445">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,0,0,1" id="1446">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,0,1" id="1447">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,1" id="1448">
      <find>A.17</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="0,1,1,1" id="1449">
      <find>A.17.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="0,1,1,1" id="1450">
      <find>A.17</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="0,1,1,1" id="1451">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x3</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="0,1,1,1" id="1452">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x3 as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="0,1,1,1" id="1453">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;46;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,1" id="1454">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 6 as int }([&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,1" id="1455">
      <find>S.0.16</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="0,1,1,1" id="1456">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;47;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="0,1,1,1" id="1457">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 6 as int || $markA := 6 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,1" id="1458">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1459">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1,1,1" id="1460">
      <find>S.0.0.1.0</find>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="0,1,1,1" id="1461">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1462">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1463">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1464">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1465">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1466">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1467">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1468">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1469">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1470">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1471">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1472">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1473">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(6 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1474">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1475">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="0,1,1,1" id="1476">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="0,1,1,1" id="1477">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">6 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="0,1,1,1" id="1478">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="0,1,1,1" id="1479">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1" id="1480">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0" id="1481">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,0" id="1482">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0,1" id="1483">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,1,0" id="1484">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0,1,1" id="1485">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,1,1,0" id="1486">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0,1,1,1" id="1487">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,1,1,1,0" id="1488">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0,1,1,1,1" id="1489">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,1,1,1,1,0" id="1490">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1,1,1,0,1,1,1,1,1" id="1491">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="0,1,1,1,0,1,1,1,1,1,0" id="1492">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,1,0,1,1,1,1,1,1" id="1493">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1,1,1" id="1494">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1" id="1495">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 0 as int || $markC := 0 as int }($impl($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,[48;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool,true as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1" id="1496">
      <find>S.0.1.15</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1" id="1497">
      <find>S.0.1.16</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1498">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1" id="1499">
      <find>S.0.1.0.0.0.0.0.0.0.0.0.1.1.1.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1500">
      <find>S.0.1.0.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1501">
      <find>S.0.1.0.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1502">
      <find>S.0.1.0.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1503">
      <find>S.0.1.0.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1" id="1504">
      <find>S.0.1.0.0.0.0.1.1</find>
      <schemavariable name="%a">$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1505">
      <find>A.0</find>
      <schemavariable name="%a">finite(fullset as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(card(fullset as set(vertex)) as int,size as int) as bool,$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1506">
      <find>A.1</find>
      <schemavariable name="%a">$eq(card(fullset as set(vertex)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_size as int,size as int) as bool,$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1507">
      <find>A.2</find>
      <schemavariable name="%a">$eq(a_size as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_src as int,vi(src as vertex) as int) as bool,$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1508">
      <find>A.3</find>
      <schemavariable name="%a">$eq(a_src as int,vi(src as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(a_dest as int,vi(dest as vertex) as int) as bool,(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1509">
      <find>A.4</find>
      <schemavariable name="%a">$eq(a_dest as int,vi(dest as vertex) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall v as vertex;$eq(succ(\var v as vertex) as set(vertex),(\set x as vertex;seqGet(a_succ(vi(\var v as vertex) as int) as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1" id="1510">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }([48;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$gt(vi(\var x as vertex) as int,a_w as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1511">
      <find>A.6</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(vi(v1 as vertex) as int,a_v1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1512">
      <find>A.6</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1513">
      <find>A.8</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1514">
      <find>A.9</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1515">
      <find>A.10</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1516">
      <find>A.11</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="1517">
      <find>A.12</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1" id="1518">
      <find>A.3</find>
      <schemavariable name="%u">vi(src as vertex) as int</schemavariable>
      <schemavariable name="%t">a_src as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1" id="1519">
      <find>A.4</find>
      <schemavariable name="%u">vi(dest as vertex) as int</schemavariable>
      <schemavariable name="%t">a_dest as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1" id="1520">
      <find>A.7</find>
      <schemavariable name="%u">a_v1 as int</schemavariable>
      <schemavariable name="%t">vi(v1 as vertex) as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="1" id="1521">
      <find>A.13</find>
      <schemavariable name="%u">a_d1 as int</schemavariable>
      <schemavariable name="%t">d1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="1" id="1522">
      <find>S.0.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="gt_to_lt" path="1" id="1523">
      <find>S.0.0.0.0.0.0.0.1.1.1.1.1.1.0.0</find>
      <schemavariable name="%a">vi(\var x as vertex) as int</schemavariable>
      <schemavariable name="%b">a_w as int</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="1" id="1524">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[48;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">4 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_box_goto2" path="1" id="1525">
      <find>S.0</find>
      <schemavariable name="%k">49 as int</schemavariable>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[4;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">5 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="k">int</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="1,0" id="1526">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[5;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="1527">
      <find>A.14</find>
      <schemavariable name="%t">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="exists_left" path="1,0" id="1528">
      <find>A.14</find>
      <schemavariable name="%x">\var k as int</schemavariable>
      <schemavariable name="%b">$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C1 as seq(bool),\var k as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var k as int)">k</property>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0" id="1529">
      <find>A.14</find>
      <schemavariable name="%a">$and($lte(0 as int,k as int) as bool,$lt(k as int,a_size as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">seqGet(a_C1 as seq(bool),k as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0" id="1530">
      <find>A.14</find>
      <schemavariable name="%a">$lte(0 as int,k as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(k as int,a_size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0" id="1531">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[6;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="1532">
      <find>S.0</find>
      <schemavariable name="%t">{ $markC := 1 as int }([7;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0" id="1533">
      <find>S.0.16</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0" id="1534">
      <find>S.0.0</find>
      <schemavariable name="%a">[7;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="1,0" id="1535">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">5 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="1,0" id="1536">
      <find>S.0</find>
      <schemavariable name="%n2">49 as int</schemavariable>
      <schemavariable name="%n1">6 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0" id="1537">
      <find>A.17</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,0,0" id="1538">
      <find>A.17.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,0,0" id="1539">
      <find>A.17</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,0,0" id="1540">
      <find>S.1</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x5</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,0" id="1541">
      <find>S.1</find>
      <schemavariable name="%b">$mem(x5 as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,0" id="1542">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0" id="1543">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 1 as int }([&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0" id="1544">
      <find>S.0.16</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,0" id="1545">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,0" id="1546">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 1 as int || $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0" id="1547">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,0,0" id="1548">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0" id="1549">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,0" id="1550">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1551">
      <find>S.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1552">
      <find>S.0.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1553">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1554">
      <find>S.0.0.0.0.0.1.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1555">
      <find>S.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1556">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1557">
      <find>S.0.0.0.0.1.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1558">
      <find>S.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1559">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1560">
      <find>S.0.0.0.1.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1561">
      <find>S.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1562">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1563">
      <find>S.0.0.1.0</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1564">
      <find>S.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1565">
      <find>S.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,0" id="1566">
      <find>S.0.1.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,0,0" id="1567">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,0,0" id="1568">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0" id="1569">
      <find>S.0</find>
      <schemavariable name="%a">$and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0" id="1570">
      <find>S.0</find>
      <schemavariable name="%a">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,0" id="1571">
      <find>S.0</find>
      <assume>A.6</assume>
      <schemavariable name="%b">$eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0,1" id="1572">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,1,0" id="1573">
      <find>S.0</find>
      <assume>A.8</assume>
      <schemavariable name="%b">$eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0,1,1" id="1574">
      <find>S.0</find>
      <schemavariable name="%a">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,1,1,0" id="1575">
      <find>S.0</find>
      <assume>A.9</assume>
      <schemavariable name="%b">$eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0,1,1,1" id="1576">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,1,1,1,0" id="1577">
      <find>S.0</find>
      <assume>A.10</assume>
      <schemavariable name="%b">$eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0,1,1,1,1" id="1578">
      <find>S.0</find>
      <schemavariable name="%a">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <schemavariable name="%b">$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,a_d1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,1,1,1,1,0" id="1579">
      <find>S.0</find>
      <assume>A.11</assume>
      <schemavariable name="%b">$eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,0,0,1,1,1,1,1" id="1580">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <schemavariable name="%b">$eq(d1 as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,0,0,1,1,1,1,1,0" id="1581">
      <find>S.0</find>
      <assume>A.12</assume>
      <schemavariable name="%b">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0,0,1,1,1,1,1,1" id="1582">
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,0,0,1" id="1583">
      <find>S.0</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,0,1" id="1584">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1" id="1585">
      <find>A.17</find>
      <schemavariable name="%t">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,0,1" id="1586">
      <find>A.17</find>
      <schemavariable name="%b">$eq(C1 as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,0,1" id="1587">
      <find>A.17</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,0,1" id="1588">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;50;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1" id="1589">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $neg(1 as int) as int }([&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1" id="1590">
      <find>S.0.16</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,0,1" id="1591">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,0,1" id="1592">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 1 as int || d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,1" id="1593">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,0,1" id="1594">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($neg(1 as int) as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,0,1" id="1595">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1596">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1597">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1598">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1599">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1600">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1601">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,a_d1 as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,0,1" id="1602">
      <find>S.0</find>
      <schemavariable name="%a">$eq($neg(1 as int) as int,a_d1 as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="1,0,1" id="1603">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="forall_left_hide" path="1,0,1" id="1604">
      <find>A.17</find>
      <schemavariable name="%inst">iv(k as int) as vertex</schemavariable>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="inst">vertex</typevariable>
      <property name="ivil.manualRuleapp">true</property>
      <property name="interact(%inst)">vertex</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1" id="1605">
    </ruleApplication>
    <ruleApplication rule="auto_box_assume" path="1,1" id="1606">
      <find>S.0</find>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[49;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$not((\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1" id="1607">
      <find>A.14</find>
      <schemavariable name="%t">$not((\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C as seq(bool),\var k as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,1" id="1608">
      <find>A.14</find>
      <schemavariable name="%b">(\exists k as int;$and($and($lte(0 as int,\var k as int) as bool,$lt(\var k as int,a_size as int) as bool) as bool,seqGet(a_C1 as seq(bool),\var k as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1" id="1609">
      <find>S.0.0</find>
      <schemavariable name="%phi">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[50;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1" id="1610">
      <find>S.0</find>
      <schemavariable name="%t">{ a_d := $neg(1 as int) as int }([51;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1" id="1611">
      <find>S.0.16</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_d := a_d1 as int || a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1" id="1612">
      <find>S.0.0</find>
      <schemavariable name="%a">[51;bfs_array']([&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_goto1" path="1,1" id="1613">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;48;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%n">5 as int</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="n">int</typevariable>
      <typevariable name="phi">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="dia_dia_goto2_complementary" path="1,1" id="1614">
      <find>S.0</find>
      <schemavariable name="%n2">49 as int</schemavariable>
      <schemavariable name="%n1">6 as int</schemavariable>
      <schemavariable name="%psi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%p">[&lt;5;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%phi1">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <schemavariable name="%phi2">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="phi2">bool</typevariable>
      <typevariable name="n1">int</typevariable>
      <typevariable name="phi1">bool</typevariable>
      <typevariable name="psi">bool</typevariable>
      <typevariable name="n2">int</typevariable>
      <typevariable name="p">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0" id="1615">
      <find>A.14</find>
      <schemavariable name="%t">$not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,1,0" id="1616">
      <find>A.14.0</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_left" path="1,1,0" id="1617">
      <find>A.14</find>
      <schemavariable name="%b">(\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1,1,0" id="1618">
      <find>S.2</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%b">$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">vertex</typevariable>
      <property name="skolemName(\var x as vertex)">x4</property>
    </ruleApplication>
    <ruleApplication rule="not_right" path="1,1,0" id="1619">
      <find>S.2</find>
      <schemavariable name="%b">$mem(x4 as vertex,C1 as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1,0" id="1620">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;7;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0" id="1621">
      <find>S.0</find>
      <schemavariable name="%t">{ $markA := 1 as int }([&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0" id="1622">
      <find>S.0.16</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1,0" id="1623">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;8;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,0" id="1624">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markC := 0 as int || a_d := $neg(1 as int) as int || $markA := 1 as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,0" id="1625">
      <find>S.0.0.0.0.0.0.0.1.0</find>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,1,0" id="1626">
      <find>S.0.0.0.0.0.0.0.1</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,0" id="1627">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">0 as int</schemavariable>
      <schemavariable name="%t">1 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1628">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1629">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1630">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1631">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1632">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1633">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_false_l" path="1,1,0" id="1634">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(1 as int,0 as int) as bool,$eq(d1 as int,$neg(1 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="false_right" path="1,1,0" id="1635">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,0" id="1636">
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1" id="1637">
      <find>A.14</find>
      <schemavariable name="%t">$not($not($eq(C as set(vertex),emptyset as set(vertex)) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="not_not" path="1,1,1" id="1638">
      <find>A.14</find>
      <schemavariable name="%b">$eq(C1 as set(vertex),emptyset as set(vertex)) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="emptyset_equals2" path="1,1,1" id="1639">
      <find>A.14</find>
      <schemavariable name="%x">\var x as vertex</schemavariable>
      <schemavariable name="%s">C1 as set(vertex)</schemavariable>
      <typevariable name="s">set(vertex)</typevariable>
      <typevariable name="x">vertex</typevariable>
    </ruleApplication>
    <ruleApplication rule="prg_assignment" path="1,1,1" id="1640">
      <find>S.0.0</find>
      <schemavariable name="%phi">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%a">[&lt;50;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
      <typevariable name="phi">bool</typevariable>
      <schemaupdate name="U">{ d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1" id="1641">
      <find>S.0</find>
      <schemavariable name="%t">{ d := $neg(1 as int) as int }([&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool)</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1" id="1642">
      <find>S.0.16</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || d := d1 as int || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="prg_end" path="1,1,1" id="1643">
      <find>S.0.0</find>
      <schemavariable name="%a">[&lt;51;bfs'&gt;]($and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool</schemavariable>
      <schemavariable name="%b">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="deep_update_simplification" path="1,1,1" id="1644">
      <find>S.0</find>
      <schemavariable name="%t">$and($and($and($and($and($and($and($eq($markA as int,$markC as int) as bool,$impl($eq($markA as int,1 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,2 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,3 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,4 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v as vertex) as int,a_v as int) as bool,$and($eq(vi(w as vertex) as int,a_w as int) as bool,$eq(tovisit as set(vertex),$intersect((\set x as vertex;$lt(a_w as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq($markA as int,5 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,6 as int) as bool,$and($and($eq(C as set(vertex),(\set x as vertex;seqGet(a_C as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C as seq(bool)) as int,size as int) as bool,$and($eq(N as set(vertex),(\set x as vertex;seqGet(a_N as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N as seq(bool)) as int,size as int) as bool,$and($eq(V as set(vertex),(\set x as vertex;seqGet(a_V as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V as seq(bool)) as int,size as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v as vertex) as int,a_v as int) as bool) as bool) as bool) as bool,$impl($eq($markA as int,0 as int) as bool,$eq(d as int,a_d as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="t">bool</typevariable>
      <schemaupdate name="U">{ a_C := a_C1 as seq(bool) || C := C1 as set(vertex) || N := N1 as set(vertex) || w := w1 as vertex || tovisit := tovisit1 as set(vertex) || a_t := a_t1 as int || v := v1 as vertex || V := V1 as set(vertex) || a_N := a_N1 as seq(bool) || a_V := a_V1 as seq(bool) || a_w := a_w1 as int || a_v := a_v1 as int || $markA := 0 as int || $markC := 0 as int || a_d := $neg(1 as int) as int || d := $neg(1 as int) as int }</schemaupdate>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1645">
      <find>S.0.0.0.0.0.0.0.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1646">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool,$eq($neg(1 as int) as int,$neg(1 as int) as int) as bool) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1647">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1648">
      <find>S.0.0.0.0.0.0.0.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1649">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1650">
      <find>S.0.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1651">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1652">
      <find>S.0.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1653">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1654">
      <find>S.0.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1655">
      <find>S.0.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1656">
      <find>S.0.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1657">
      <find>S.0.0.1.1.0.1.1.1.1.1.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1658">
      <find>S.0.0.1.1.0.1.1.1.1.1</find>
      <schemavariable name="%a">$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1659">
      <find>S.0.1.0</find>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_true_l" path="1,1,1" id="1660">
      <find>S.0.1</find>
      <schemavariable name="%b">$eq($neg(1 as int) as int,$neg(1 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,1" id="1661">
      <find>S.0.1</find>
      <schemavariable name="%t">$neg(1 as int) as int</schemavariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_r" path="1,1,1" id="1662">
      <find>S.0</find>
      <schemavariable name="%a">$and($and($and($and($and($impl($eq(0 as int,1 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool) as bool,$impl($eq(0 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool) as bool,$impl($eq(0 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool) as bool,$impl($eq(0 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1663">
      <find>S.0.0.0.0.0.0.0</find>
      <schemavariable name="%u">1 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1" id="1664">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$not((\forall x as vertex;$not($mem(\var x as vertex,C1 as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1665">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,2 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1666">
      <find>S.0.0.0.0.0.0</find>
      <schemavariable name="%u">2 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1" id="1667">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1668">
      <find>S.0.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,3 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1669">
      <find>S.0.0.0.0.0</find>
      <schemavariable name="%u">3 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1" id="1670">
      <find>S.0.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1671">
      <find>S.0.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,4 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1672">
      <find>S.0.0.0.0</find>
      <schemavariable name="%u">4 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1" id="1673">
      <find>S.0.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$and($eq(vi(v1 as vertex) as int,a_v1 as int) as bool,$and($eq(vi(w1 as vertex) as int,a_w1 as int) as bool,$eq(tovisit1 as set(vertex),$intersect((\set x as vertex;$lt(a_w1 as int,vi(\var x as vertex) as int) as bool) as set(vertex),succ(v1 as vertex) as set(vertex)) as set(vertex)) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1674">
      <find>S.0.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,5 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1675">
      <find>S.0.0.0</find>
      <schemavariable name="%u">5 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_false_l" path="1,1,1" id="1676">
      <find>S.0.0</find>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_true_l" path="1,1,1" id="1677">
      <find>S.0</find>
      <schemavariable name="%a">$impl($eq(0 as int,6 as int) as bool,$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool) as bool</schemavariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1,1,1" id="1678">
      <find>S.0</find>
      <schemavariable name="%a">$eq(0 as int,6 as int) as bool</schemavariable>
      <schemavariable name="%b">$and($and($eq(C1 as set(vertex),(\set x as vertex;seqGet(a_C1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_C1 as seq(bool)) as int,size as int) as bool,$and($eq(N1 as set(vertex),(\set x as vertex;seqGet(a_N1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$and($eq(seqLen(a_N1 as seq(bool)) as int,size as int) as bool,$and($eq(V1 as set(vertex),(\set x as vertex;seqGet(a_V1 as seq(bool),vi(\var x as vertex) as int) as bool) as set(vertex)) as bool,$eq(seqLen(a_V1 as seq(bool)) as int,size as int) as bool) as bool) as bool) as bool) as bool) as bool,$eq(vi(v1 as vertex) as int,a_v1 as int) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_unique" path="1,1,1" id="1679">
      <find>A.15</find>
      <schemavariable name="%u">6 as int</schemavariable>
      <schemavariable name="%t">0 as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_false_left" path="1,1,1" id="1680">
      <find>A.15</find>
    </ruleApplication>
  </steps>
</proof>