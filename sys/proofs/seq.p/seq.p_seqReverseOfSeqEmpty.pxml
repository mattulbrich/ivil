<?xml version="1.0"?>
<proof format="1"><info>
    <date>Thu Jun 28 14:02:46 CEST 2012</date>
    <version>0.0</version>
    <problem> |- $not($not($eq(seqReverse(seqEmpty),seqEmpty)))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="seqEmptyDef" path="" id="0">
      <find>S.0.0.0.0.0</find>
      <typevariable name="a">'v2</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqExtensionality" path="" id="1">
      <find>S.0.0.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%s1">seqReverse((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as seq('v2)</schemavariable>
      <schemavariable name="%s2">seqEmpty as seq('v2)</schemavariable>
      <typevariable name="s2">seq('v2)</typevariable>
      <typevariable name="s1">seq('v2)</typevariable>
      <typevariable name="v8">'v2</typevariable>
    </ruleApplication>
    <ruleApplication rule="not_not" path="" id="2">
      <find>S.0</find>
      <schemavariable name="%b">$and($eq(seqLen(seqReverse((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as seq('v2)) as int,seqLen(seqEmpty as seq('v2)) as int) as bool,(\forall i as int;$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqReverse((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as seq('v2)) as int) as bool) as bool,$eq(seqGet(seqReverse((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as seq('v2),\var i as int) as 'v2,seqGet(seqEmpty as seq('v2),\var i as int) as 'v2) as bool) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqEmpty" path="" id="3">
      <find>S.0.0.1</find>
      <typevariable name="v2">'v2</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqEmpty" path="" id="4">
      <find>S.0.1.0.1.1</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <typevariable name="v2">'v2</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqReverse" path="" id="5">
      <find>S.0.0.0</find>
      <schemavariable name="%seq">(\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)</schemavariable>
      <typevariable name="v2">'v2</typevariable>
      <typevariable name="seq">seq('v2)</typevariable>
    </ruleApplication>
    <ruleApplication rule="lenOfSeqReverse" path="" id="6">
      <find>S.0.1.0.0.1.1</find>
      <schemavariable name="%seq">(\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)</schemavariable>
      <typevariable name="v2">'v2</typevariable>
      <typevariable name="seq">seq('v2)</typevariable>
    </ruleApplication>
    <ruleApplication rule="getOfSeqReverse" path="" id="7">
      <find>S.0.1.0.1.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%seq">(\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)</schemavariable>
      <typevariable name="v2">'v2</typevariable>
      <typevariable name="seq">seq('v2)</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="8">
      <find>S.0</find>
      <schemavariable name="%a">$eq(seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int,0 as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall i as int;$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int) as bool) as bool,$eq(seqGet((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2),$minus($minus(seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int,1 as int) as int,\var i as int) as int) as 'v2,seqError as 'v2) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="0" id="9">
      <find>S.0.0</find>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqError as 'v2</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <typevariable name="t">'v2</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0" id="10">
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1" id="11">
      <find>S.0</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int) as bool) as bool,$eq(seqGet((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2),$minus($minus(seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int,1 as int) as int,\var i as int) as int) as 'v2,seqError as 'v2) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1" id="12">
      <find>S.0</find>
      <schemavariable name="%a">$and($lte(0 as int,i as int) as bool,$lt(i as int,seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2),$minus($minus(seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int,1 as int) as int,i as int) as int) as 'v2,seqError as 'v2) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="13">
      <find>A.0</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="1" id="14">
      <find>S.0.0</find>
      <schemavariable name="%j">$minus($minus(seqLen((\seqDef x as int;0 as int;0 as int;seqError as 'v2) as seq('v2)) as int,1 as int) as int,i as int) as int</schemavariable>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqError as 'v2</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <typevariable name="t">'v2</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="1" id="15">
      <find>S.0.0.0.0.1.0.0</find>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqError as 'v2</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <typevariable name="t">'v2</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenDef" path="1" id="16">
      <find>S.0.0.0.1.0.0.0</find>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqError as 'v2</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <typevariable name="t">'v2</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1" id="17">
    </ruleApplication>
  </steps>
</proof>