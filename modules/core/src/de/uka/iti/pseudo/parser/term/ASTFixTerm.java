/*
 * This file is part of
 *    ivil - Interactive Verification on Intermediate Language
 *
 * Copyright (C) 2009-2012 Karlsruhe Institute of Technology
 *
 * The system is protected by the GNU General Public License.
 * See LICENSE.TXT (distributed with this file) for details.
 */
package de.uka.iti.pseudo.parser.term;

import java.util.Arrays;
import java.util.Collections;

import com.sun.corba.se.impl.javax.rmi.CORBA.Util;

import de.uka.iti.pseudo.environment.FixOperator;
import de.uka.iti.pseudo.parser.ASTVisitException;
import de.uka.iti.pseudo.parser.ASTVisitor;
import de.uka.iti.pseudo.parser.Token;

/**
 * The AST class for infix/prefix terms generated by the
 * {@link de.uka.iti.pseudo.parser.Parser}.
 *
 */
public class ASTFixTerm extends ASTTerm {

    private final FixOperator fixOperator;
    private final Token operator;

    /**
     * Instantiates a new binary Fix operation.
     *
     * @param op the operator token
     * @param infixOp the corresponding fix operator
     * @param t1 the first operand
     * @param t2 the second operand
     */
    public ASTFixTerm(Token op, FixOperator infixOp,
            ASTTerm t1, ASTTerm t2) {

        super(Arrays.asList(t1, t2));
        this.operator = op;
        this.fixOperator = infixOp;

    }

    /**
     * Instantiates a new unary Fix operation.
     *
     * @param op the operator token
     * @param prefixOp the corresponding fix operator
     * @param t1 the operand
     */
    public ASTFixTerm(Token op, FixOperator prefixOp,
            ASTTerm t1) {

        super(Collections.singletonList(t1));
        this.operator = op;
        this.fixOperator = prefixOp;
    }

    @Override
    public Token getLocationToken() {
        return operator;
    }

    @Override
    public void visit(ASTVisitor v) throws ASTVisitException {
        v.visit(this);
    }

    public FixOperator getFixOperator() {
        return fixOperator;
    }

    @Override
    public String toString() {
        return super.toString() + "[" + operator + "]";
    }

}
