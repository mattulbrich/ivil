<?xml version="1.0"?>
<proof format="1"><info>
    <date>Wed Jun 27 20:34:14 CEST 2012</date>
    <version>0.0</version>
    <problem> |- $eq(seqSub(seq,0,seqLen(seq)),seq)</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="seqExtensionality" path="" id="0">
      <find>S.0</find>
      <schemavariable name="%i">\var i as int</schemavariable>
      <schemavariable name="%s1">seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1)</schemavariable>
      <schemavariable name="%s2">seq as seq('v1)</schemavariable>
      <typevariable name="s2">seq('v1)</typevariable>
      <typevariable name="s1">seq('v1)</typevariable>
      <typevariable name="v8">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="" id="1">
      <find>S.0.0.0</find>
      <schemavariable name="%a">seq as seq('v1)</schemavariable>
      <schemavariable name="%from">0 as int</schemavariable>
      <schemavariable name="%to">seqLen(seq as seq('v1)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="v2">'v1</typevariable>
      <typevariable name="a">seq('v1)</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="" id="2">
      <find>S.0</find>
      <schemavariable name="%a">$eq(cond($lte(0 as int,seqLen(seq as seq('v1)) as int) as bool,$minus(seqLen(seq as seq('v1)) as int,0 as int) as int,0 as int) as int,seqLen(seq as seq('v1)) as int) as bool</schemavariable>
      <schemavariable name="%b">(\forall i as int;$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1)) as int) as bool) as bool,$eq(seqGet(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1),\var i as int) as 'v1,seqGet(seq as seq('v1),\var i as int) as 'v1) as bool) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0" id="3">
    </ruleApplication>
    <ruleApplication rule="forall_right" path="1" id="4">
      <find>S.0</find>
      <schemavariable name="%x">\var i as int</schemavariable>
      <schemavariable name="%b">$impl($and($lte(0 as int,\var i as int) as bool,$lt(\var i as int,seqLen(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1)) as int) as bool) as bool,$eq(seqGet(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1),\var i as int) as 'v1,seqGet(seq as seq('v1),\var i as int) as 'v1) as bool) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="x">int</typevariable>
      <property name="skolemName(\var i as int)">i</property>
    </ruleApplication>
    <ruleApplication rule="impl_right" path="1" id="5">
      <find>S.0</find>
      <schemavariable name="%a">$and($lte(0 as int,i as int) as bool,$lt(i as int,seqLen(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1)) as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqGet(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1),i as int) as 'v1,seqGet(seq as seq('v1),i as int) as 'v1) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1" id="6">
      <find>A.0</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen(seqSub(seq as seq('v1),0 as int,seqLen(seq as seq('v1)) as int) as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqLenOfSub" path="1" id="7">
      <find>A.1.1</find>
      <schemavariable name="%a">seq as seq('v1)</schemavariable>
      <schemavariable name="%from">0 as int</schemavariable>
      <schemavariable name="%to">seqLen(seq as seq('v1)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="a">seq('v1)</typevariable>
      <typevariable name="v2">'v1</typevariable>
      <typevariable name="from">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqGetOfSub" path="1" id="8">
      <find>S.0.0</find>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%a">seq as seq('v1)</schemavariable>
      <schemavariable name="%from">0 as int</schemavariable>
      <schemavariable name="%to">seqLen(seq as seq('v1)) as int</schemavariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="v5">'v1</typevariable>
      <typevariable name="a">seq('v1)</typevariable>
      <typevariable name="from">int</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="1" id="9">
      <find>S.0.0.1.1</find>
      <schemavariable name="%a">i as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1" id="10">
      <find>A.1.1</find>
      <schemavariable name="%a">$minus(seqLen(seq as seq('v1)) as int,0 as int) as int</schemavariable>
      <schemavariable name="%b">0 as int</schemavariable>
      <schemavariable name="%c">$lte(0 as int,seqLen(seq as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0" id="11">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seq as seq('v1),i as int) as 'v1</schemavariable>
      <schemavariable name="%b">seqError as 'v1</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i as int) as bool,$lt(i as int,seqLen(seq as seq('v1)) as int) as bool) as bool</schemavariable>
      <typevariable name="b">'v1</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0" id="12">
      <find>S.0</find>
      <schemavariable name="%t">seqGet(seq as seq('v1),i as int) as 'v1</schemavariable>
      <typevariable name="t">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,0,0" id="13">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,0,1" id="14">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen(seq as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,0,1,0" id="15">
      <find>S.1</find>
      <assume>A.0</assume>
      <schemavariable name="%b">$lte(0 as int,i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1,1" id="16">
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,1" id="17">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seq as seq('v1),i as int) as 'v1</schemavariable>
      <schemavariable name="%b">seqError as 'v1</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i as int) as bool,$lt(i as int,seqLen(seq as seq('v1)) as int) as bool) as bool</schemavariable>
      <typevariable name="b">'v1</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1,0" id="18">
      <find>S.0</find>
      <schemavariable name="%t">seqGet(seq as seq('v1),i as int) as 'v1</schemavariable>
      <typevariable name="t">'v1</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,1,0" id="19">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,1,1" id="20">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,seqLen(seq as seq('v1)) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_antecedent" path="1,1,1,0" id="21">
      <find>S.2</find>
      <assume>A.0</assume>
      <schemavariable name="%b">$lte(0 as int,i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,1,1" id="22">
    </ruleApplication>
  </steps>
</proof>