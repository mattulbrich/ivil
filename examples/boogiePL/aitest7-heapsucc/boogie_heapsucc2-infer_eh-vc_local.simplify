; Spec# Program Verifier Version 0.80, Copyright (c) 2003-2006, Microsoft.
; Command Line Options: -nologo /prover:blank /print:boogie_tmp.@TIME@.bpl /proverLog:boogie_tmp.@TIME@.simplify -infer:eh -vc:local heapsucc2.bpl
; -------------------------------------------------------------------------
; Boogie universal background predicate
; Copyright (c) 2004-2005, Microsoft Corp.
(DEFPRED (<: t u))

(BG_PUSH (AND

  ; select/store axioms, 1 index argument

  (FORALL (A i v)
    (EQ (select1 (store1 A i v) i) v))

  (FORALL (A i j v)
    (IMPLIES (NEQ i j)
      (EQ
        (select1 (store1 A i v) j)
        (select1 A j))))

  ; select/store axioms, 2 index arguments

  (FORALL (A o f v)
    (EQ (select2 (store2 A o f v) o f) v))

  (FORALL (A o f p g v)
    (IMPLIES (NEQ o p)
      (EQ
        (select2 (store2 A o f v) p g)
        (select2 A p g))))

  (FORALL (A o f p g v)
    (IMPLIES (NEQ f g)
      (EQ
        (select2 (store2 A o f v) p g)
        (select2 A p g))))

  ; formula/term axioms

  (FORALL (x y)
    (IFF
      (EQ (boolIff x y) |@true|)
      (IFF (EQ x |@true|) (EQ y |@true|))))

  (FORALL (x y)
    (IFF
      (EQ (boolImplies x y) |@true|)
      (IMPLIES (EQ x |@true|) (EQ y |@true|))))

  (FORALL (x y)
    (IFF
      (EQ (boolAnd x y) |@true|)
      (AND (EQ x |@true|) (EQ y |@true|))))

  (FORALL (x y)
    (IFF
      (EQ (boolOr x y) |@true|)
      (OR (EQ x |@true|) (EQ y |@true|))))

  (FORALL (x)
    (PATS (boolNot x))
    (IFF
      (EQ (boolNot x) |@true|)
      (NEQ x |@true|)))

  (FORALL (x y)
    (IFF
      (EQ (anyEqual x y) |@true|)
      (EQ x y)))

  (FORALL (x y)
    (PATS (anyNeq x y))
    (IFF
      (EQ (anyNeq x y) |@true|)
      (NEQ x y)))

  (FORALL (x y)
    (IFF
      (EQ (intLess x y) |@true|)
      (< x y)))

  (FORALL (x y)
    (IFF
      (EQ (intAtMost x y) |@true|)
      (<= x y)))

  (FORALL (x y)
    (IFF
      (EQ (intAtLeast x y) |@true|)
      (>= x y)))

  (FORALL (x y)
    (IFF
      (EQ (intGreater x y) |@true|)
      (> x y)))

  ; false is not true

  (DISTINCT |@false| |@true|)

  ; <: is a partial order:  it is reflexive, transitive, and anti-symmetric

  (FORALL (t)
    (PATS (<: t t))
    (<: t t))

  (FORALL (t u v)
    (PATS (MPAT (<: t u) (<: u v)))
    (IMPLIES
      (AND (<: t u ) (<: u v))
      (<: t v)))

  (FORALL (t u)
    (PATS (MPAT (<: t u) (<: u t)))
    (IMPLIES
      (AND (<: t u) (<: u t))
      (EQ t u)))

  ;; The following axiom gives a way to typed produce verification conditions,
  ;; that is, verification conditions where the terms are typable.  To use these,
  ;; the VCExpressionGenerator.{CastTo,CastFrom} methods must be overridden.
  ;; Look for USE_SORTED_LOGIC in VCGeneration/VCExpr.ssc.
  ; (FORALL (val T U)
  ;   (PATS (TypeConvert (TypeConvert val T U) U T))
  ;   (EQ (TypeConvert (TypeConvert val T U) U T) val))

))  ;; AND, BG_PUSH
; End Boogie universal background predicate
; -------------------------------------------------------------------------

(BG_PUSH 
(AND (DISTINCT FIELD OTHERFIELD) TRUE)
)
; Initialized all axioms.
; M
(IMPLIES (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (IMPLIES (IMPLIES (LBLPOS |+58| TRUE) (IMPLIES TRUE (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) TRUE)))) (EQ |start_correct| |@true|)) (IMPLIES (IMPLIES (LBLPOS |+105| TRUE) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) (IMPLIES (EQ |y@0| (select2 Heap this FIELD)) (IMPLIES (AND (EQ |x@0| (select2 Heap this FIELD)) (EQ |x@0| |y@0|)) TRUE)))) (EQ |else_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+480| TRUE) (IMPLIES (EQ |Heap@1| Heap) (IMPLIES (EQ |y@1| |y@0|) TRUE))) (EQ |else-2-join_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+120| TRUE) (IMPLIES (AND (EQ |y@1| |x@0|) (EQ |y@1| (select2 |Heap@1| this FIELD))) (IMPLIES (AND (EQ |x@0| (select2 |Heap@1| this FIELD)) (EQ |x@0| |y@1|)) TRUE))) (EQ |join_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+133| TRUE) (IMPLIES (AND (EQ |x@0| (select2 |Heap@1| this FIELD)) (EQ |x@0| |y@1|)) (AND (LBLNEG |@766| (AND (EQ |y@1| |x@0|) (EQ |x@0| (select2 |Heap@1| this FIELD)))) (IMPLIES (AND (EQ |y@1| |x@0|) (EQ |x@0| (select2 |Heap@1| this FIELD))) (IMPLIES (AND (EQ |x@0| (select2 |Heap@1| this FIELD)) (EQ |x@0| |y@1|)) TRUE))))) (EQ |JoinCheck_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+484| TRUE) (IMPLIES (EQ |Heap@2| |Heap@1|) (IMPLIES (EQ |y@2| |y@1|) TRUE))) (EQ |JoinCheck-2-GeneratedUnifiedExit_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+470| TRUE) TRUE) (EQ |GeneratedUnifiedExit_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+477| TRUE) TRUE) (EQ |ReallyLastGeneratedExit_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+118| TRUE) (IMPLIES (AND (EQ |x@0| (select2 Heap this FIELD)) (EQ |x@0| |y@0|)) (AND (LBLNEG |@662| (AND (EQ |y@0| |x@0|) (EQ |x@0| (select2 Heap this FIELD)))) (IMPLIES (AND (EQ |y@0| |x@0|) (EQ |x@0| (select2 Heap this FIELD))) (IMPLIES (AND (EQ |x@0| (select2 Heap this FIELD)) (EQ |x@0| |y@0|)) TRUE))))) (EQ |ElseCheck_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+486| TRUE) (IMPLIES (EQ |Heap@2| Heap) (IMPLIES (EQ |y@2| |y@0|) TRUE))) (EQ |ElseCheck-2-GeneratedUnifiedExit_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+77| TRUE) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) (IMPLIES (EQ |Heap@0| (store2 Heap this OTHERFIELD 2)) (IMPLIES (AND (AND (EQ 2 (select2 |Heap@0| this OTHERFIELD)) (EQ |x@0| (select2 |Heap@0| this FIELD))) (EQ |x@0| |x@0|)) TRUE)))) (EQ |then_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+482| TRUE) (IMPLIES (EQ |Heap@1| |Heap@0|) (IMPLIES (EQ |y@1| |x@0|) TRUE))) (EQ |then-2-join_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+97| TRUE) (IMPLIES (AND (AND (EQ 2 (select2 |Heap@0| this OTHERFIELD)) (EQ |x@0| (select2 |Heap@0| this FIELD))) (EQ |x@0| |x@0|)) (AND (LBLNEG |@830| (AND (AND (EQ |x@0| |x@0|) (EQ |x@0| (select2 |Heap@0| this FIELD))) (EQ (select2 |Heap@0| this OTHERFIELD) 2))) (IMPLIES (AND (AND (EQ |x@0| |x@0|) (EQ |x@0| (select2 |Heap@0| this FIELD))) (EQ (select2 |Heap@0| this OTHERFIELD) 2)) (IMPLIES (AND (AND (EQ 2 (select2 |Heap@0| this OTHERFIELD)) (EQ |x@0| |x@0|)) (EQ |x@0| (select2 |Heap@0| this FIELD))) TRUE))))) (EQ |ThenCheck_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+488| TRUE) (IMPLIES (EQ |Heap@2| |Heap@0|) (IMPLIES (EQ |y@2| |x@0|) TRUE))) (EQ |ThenCheck-2-GeneratedUnifiedExit_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+67| TRUE) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) (AND (LBLNEG |@527| (EQ |x@0| (select2 Heap this FIELD))) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) (IMPLIES (EQ |x@0| (select2 Heap this FIELD)) TRUE))))) (EQ |StartCheck_correct| |@true|))) (IMPLIES (IMPLIES (LBLPOS |+490| TRUE) (IMPLIES (EQ |Heap@2| Heap) (IMPLIES (EQ |y@2| y) TRUE))) (EQ |StartCheck-2-GeneratedUnifiedExit_correct| |@true|))) (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (AND (EQ |start_correct| |@true|) (EQ |else_correct| |@true|)) (EQ |else-2-join_correct| |@true|)) (EQ |join_correct| |@true|)) (EQ |JoinCheck_correct| |@true|)) (EQ |JoinCheck-2-GeneratedUnifiedExit_correct| |@true|)) (EQ |GeneratedUnifiedExit_correct| |@true|)) (EQ |ReallyLastGeneratedExit_correct| |@true|)) (EQ |ElseCheck_correct| |@true|)) (EQ |ElseCheck-2-GeneratedUnifiedExit_correct| |@true|)) (EQ |then_correct| |@true|)) (EQ |then-2-join_correct| |@true|)) (EQ |ThenCheck_correct| |@true|)) (EQ |ThenCheck-2-GeneratedUnifiedExit_correct| |@true|)) (EQ |StartCheck_correct| |@true|)) (EQ |StartCheck-2-GeneratedUnifiedExit_correct| |@true|)))
; Undetermined
