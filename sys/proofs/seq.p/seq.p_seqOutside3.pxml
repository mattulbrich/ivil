<?xml version="1.0"?>
<proof format="1"><info>
    <date>Wed Mar 06 10:58:06 CET 2013</date>
    <version>0.0</version>
    <problem> |- $impl($or($lt(i,0),$lte(seqLen(s),i)),$eq(seqError,seqGet(s,i)))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="impl_right" path="" id="0">
      <find>S.0</find>
      <schemavariable name="%a">$or($lt(i as int,0 as int) as bool,$lte(seqLen(s as seq('v3)) as int,i as int) as bool) as bool</schemavariable>
      <schemavariable name="%b">$eq(seqError as 'v3,seqGet(s as seq('v3),i as int) as 'v3) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="or_left" path="" id="1">
      <find>A.0</find>
      <schemavariable name="%a">$lt(i as int,0 as int) as bool</schemavariable>
      <schemavariable name="%b">$lte(seqLen(s as seq('v3)) as int,i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut" path="0" id="2">
      <schemavariable name="%inst">$eq(s as seq('v3),seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)) as bool</schemavariable>
      <property name="interact(%inst)">bool</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="0,0" id="3">
      <find>S.0.1.0</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)</schemavariable>
      <schemavariable name="%t">s as seq('v3)</schemavariable>
      <typevariable name="u">seq('v3)</typevariable>
      <typevariable name="t">seq('v3)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqOutside1" path="0,0" id="4">
      <find>S.0.1</find>
      <assume>A.0</assume>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%a">seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)</schemavariable>
      <typevariable name="v1">'v3</typevariable>
      <typevariable name="a">seq('v3)</typevariable>
      <typevariable name="i">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0" id="5">
    </ruleApplication>
    <ruleApplication rule="seqSubSelf" path="0,1" id="6">
      <find>S.1.1</find>
      <schemavariable name="%a">s as seq('v3)</schemavariable>
      <typevariable name="v1">'v3</typevariable>
      <typevariable name="a">seq('v3)</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,1" id="7">
      <find>S.1</find>
      <schemavariable name="%t">s as seq('v3)</schemavariable>
      <typevariable name="t">seq('v3)</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="0,1" id="8">
      <find>S.1</find>
    </ruleApplication>
    <ruleApplication rule="cut" path="1" id="9">
      <schemavariable name="%inst">$eq(s as seq('v3),seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)) as bool</schemavariable>
      <property name="interact(%inst)">bool</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0" id="10">
      <find>S.0.1.0</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)</schemavariable>
      <schemavariable name="%t">s as seq('v3)</schemavariable>
      <typevariable name="u">seq('v3)</typevariable>
      <typevariable name="t">seq('v3)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="equality_apply" path="1,0" id="11">
      <find>A.0.0.0</find>
      <assume>A.1</assume>
      <schemavariable name="%u">seqSub(s as seq('v3),0 as int,seqLen(s as seq('v3)) as int) as seq('v3)</schemavariable>
      <schemavariable name="%t">s as seq('v3)</schemavariable>
      <typevariable name="u">seq('v3)</typevariable>
      <typevariable name="t">seq('v3)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqSubDef" path="1,0" id="12">
      <find>S.0.1.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%a">s as seq('v3)</schemavariable>
      <schemavariable name="%from">0 as int</schemavariable>
      <schemavariable name="%to">seqLen(s as seq('v3)) as int</schemavariable>
      <typevariable name="3">'v3</typevariable>
      <typevariable name="to">int</typevariable>
      <typevariable name="a">seq('v3)</typevariable>
      <typevariable name="from">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="1,0" id="13">
      <find>S.0.1</find>
      <schemavariable name="%j">i as int</schemavariable>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%t">seqGet(s as seq('v3),\var x as int) as 'v3</schemavariable>
      <schemavariable name="%b">seqLen(s as seq('v3)) as int</schemavariable>
      <typevariable name="t">'v3</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0" id="14">
    </ruleApplication>
    <ruleApplication rule="seqSubSelf" path="1,1" id="15">
      <find>S.1.1</find>
      <schemavariable name="%a">s as seq('v3)</schemavariable>
      <typevariable name="v1">'v3</typevariable>
      <typevariable name="a">seq('v3)</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,1" id="16">
      <find>S.1</find>
      <schemavariable name="%t">s as seq('v3)</schemavariable>
      <typevariable name="t">seq('v3)</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,1" id="17">
      <find>S.1</find>
    </ruleApplication>
  </steps>
</proof>