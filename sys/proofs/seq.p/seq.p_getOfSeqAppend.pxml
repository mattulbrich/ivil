<?xml version="1.0"?>
<proof format="1"><info>
    <date>Wed Mar 06 10:59:16 CET 2013</date>
    <version>0.0</version>
    <problem> |- $eq(seqGet(seqAppend(seq,app),i),cond($eq(i,seqLen(seq)),app,seqGet(seq,i)))</problem>
    <hash>to be done</hash>
  </info>
  <steps>
    <ruleApplication rule="cut_cond" path="" id="0">
      <find>S.0.1</find>
      <schemavariable name="%a">app as 'app</schemavariable>
      <schemavariable name="%b">seqGet(seq as seq('app),i as int) as 'app</schemavariable>
      <schemavariable name="%c">$eq(i as int,seqLen(seq as seq('app)) as int) as bool</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_order" path="0" id="1">
      <find>A.0</find>
      <schemavariable name="%u">seqLen(seq as seq('app)) as int</schemavariable>
      <schemavariable name="%t">i as int</schemavariable>
      <typevariable name="u">int</typevariable>
      <typevariable name="t">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="seqAppendDef" path="0" id="2">
      <find>S.0.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%a">seq as seq('app)</schemavariable>
      <schemavariable name="%b">app as 'app</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="a">seq('app)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="0" id="3">
      <find>S.0.0</find>
      <schemavariable name="%j">i as int</schemavariable>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%t">cond($lt(\var x as int,seqLen(seq as seq('app)) as int) as bool,seqGet(seq as seq('app),\var x as int) as 'app,app as 'app) as 'app</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">$plus(seqLen(seq as seq('app)) as int,1 as int) as int</schemavariable>
      <typevariable name="t">'app</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0" id="4">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%a">i as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="0" id="5">
      <find>S.0.0.1.1.1</find>
      <schemavariable name="%a">i as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0" id="6">
      <find>S.0.0</find>
      <schemavariable name="%a">cond($lt(i as int,seqLen(seq as seq('app)) as int) as bool,seqGet(seq as seq('app),i as int) as 'app,app as 'app) as 'app</schemavariable>
      <schemavariable name="%b">seqError as 'app</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i as int) as bool,$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="0,0" id="7">
      <find>A.1</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="0,0" id="8">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seq as seq('app),i as int) as 'app</schemavariable>
      <schemavariable name="%b">app as 'app</schemavariable>
      <schemavariable name="%c">$lt(i as int,seqLen(seq as seq('app)) as int) as bool</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,0,0" id="9">
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="0,0,1" id="10">
      <find>S.0</find>
      <schemavariable name="%t">app as 'app</schemavariable>
      <typevariable name="t">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="0,0,1" id="11">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="and_right" path="0,1" id="12">
      <find>S.1</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,0" id="13">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="0,1,1" id="14">
    </ruleApplication>
    <ruleApplication rule="seqAppendDef" path="1" id="15">
      <find>S.0.0.0</find>
      <schemavariable name="%x">\var x as int</schemavariable>
      <schemavariable name="%a">seq as seq('app)</schemavariable>
      <schemavariable name="%b">app as 'app</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="a">seq('app)</typevariable>
      <property name="ivil.manualRuleapp">true</property>
    </ruleApplication>
    <ruleApplication rule="seqGetDef" path="1" id="16">
      <find>S.0.0</find>
      <schemavariable name="%j">i as int</schemavariable>
      <schemavariable name="%i">\var x as int</schemavariable>
      <schemavariable name="%t">cond($lt(\var x as int,seqLen(seq as seq('app)) as int) as bool,seqGet(seq as seq('app),\var x as int) as 'app,app as 'app) as 'app</schemavariable>
      <schemavariable name="%a">0 as int</schemavariable>
      <schemavariable name="%b">$plus(seqLen(seq as seq('app)) as int,1 as int) as int</schemavariable>
      <typevariable name="t">'app</typevariable>
      <typevariable name="b">int</typevariable>
      <typevariable name="a">int</typevariable>
      <typevariable name="j">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="1" id="17">
      <find>S.0.0.1.0.0</find>
      <schemavariable name="%a">i as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="plus_zero" path="1" id="18">
      <find>S.0.0.1.1.1</find>
      <schemavariable name="%a">i as int</schemavariable>
      <typevariable name="a">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1" id="19">
      <find>S.0.0</find>
      <schemavariable name="%a">cond($lt(i as int,seqLen(seq as seq('app)) as int) as bool,seqGet(seq as seq('app),i as int) as 'app,app as 'app) as 'app</schemavariable>
      <schemavariable name="%b">seqError as 'app</schemavariable>
      <schemavariable name="%c">$and($lte(0 as int,i as int) as bool,$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool) as bool</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_left" path="1,0" id="20">
      <find>A.0</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="cut_cond" path="1,0" id="21">
      <find>S.0.0</find>
      <schemavariable name="%a">seqGet(seq as seq('app),i as int) as 'app</schemavariable>
      <schemavariable name="%b">app as 'app</schemavariable>
      <schemavariable name="%c">$lt(i as int,seqLen(seq as seq('app)) as int) as bool</schemavariable>
      <typevariable name="b">'app</typevariable>
      <typevariable name="c">bool</typevariable>
      <typevariable name="a">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="equality_refl" path="1,0,0" id="22">
      <find>S.0</find>
      <schemavariable name="%t">seqGet(seq as seq('app),i as int) as 'app</schemavariable>
      <typevariable name="t">'app</typevariable>
    </ruleApplication>
    <ruleApplication rule="close_true_right" path="1,0,0" id="23">
      <find>S.0</find>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,0,1" id="24">
    </ruleApplication>
    <ruleApplication rule="seqOutside3" path="1,1" id="25">
      <find>S.0</find>
      <schemavariable name="%i">i as int</schemavariable>
      <schemavariable name="%s">seq as seq('app)</schemavariable>
      <typevariable name="s">seq('app)</typevariable>
      <typevariable name="v3">'app</typevariable>
      <typevariable name="i">int</typevariable>
    </ruleApplication>
    <ruleApplication rule="or_right" path="1,1" id="26">
      <find>S.0</find>
      <schemavariable name="%a">$lt(i as int,0 as int) as bool</schemavariable>
      <schemavariable name="%b">$lte(seqLen(seq as seq('app)) as int,i as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="and_right" path="1,1" id="27">
      <find>S.2</find>
      <schemavariable name="%a">$lte(0 as int,i as int) as bool</schemavariable>
      <schemavariable name="%b">$lt(i as int,$minus($plus(seqLen(seq as seq('app)) as int,1 as int) as int,0 as int) as int) as bool</schemavariable>
      <typevariable name="b">bool</typevariable>
      <typevariable name="a">bool</typevariable>
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,0" id="28">
    </ruleApplication>
    <ruleApplication rule="auto_smt_close" path="1,1,1" id="29">
    </ruleApplication>
  </steps>
</proof>