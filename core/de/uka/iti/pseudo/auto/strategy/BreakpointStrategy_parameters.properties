parameters = obeySourceBreakpoints obeyProgramBreakpoints  stopAtSkip stopAtLoop stopAtJumpBack
description = Symbolic execution which stops at breakpoints set in source or program code

obeyProgramBreakpoints.shortDesc = use program breakpoints
obeyProgramBreakpoints.longDesc = Stop symbolic execution when a statement tagged \
with a breakpoint in the program view is reached.

obeySourceBreakpoints.shortDesc = use source breakpoints
obeySourceBreakpoints.longDesc = Stop symbolic execution when a statement tagged \
with a breakpoint in the source view is reached.

stopAtSkip.shortDesc = stop at 'skip' statements
stopAtSkip.longDesc = treat all 'skip' statements as break points.

stopAtLoop.shortDesc = stop when looping
stopAtLoop.longDesc = Stop automatic execution when a program term would be \
executed twice by the strategy.

stopAtJumpBack.shortDesc = stop at backwards jump
stopAtJumpBack.longDesc = Stop automatic execution when a program term would \
jump backward (to an index with lower number).