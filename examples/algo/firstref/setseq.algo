uses "$base.p"
uses "$refinement.p"
uses "$int.p"
uses "$symbex.p"
uses "$decproc.p"
uses "$set.p"
uses "$seq.p"

algo A
input n : int
var S: set(int)
do
  S := S \/ singleton(n)
end

algo C
input _n : int
var _S: seq(int)
do
  if !(\exists i; 0<=i<seqLen(_S) & seqGet(_S,i) = _n)
  then
    _S := seqAppend(_S, _n)
  end
end

refine A as C
  requires S = seqAsSet(_S) & _n = n
  var 0
  ensures S = seqAsSet(_S)

