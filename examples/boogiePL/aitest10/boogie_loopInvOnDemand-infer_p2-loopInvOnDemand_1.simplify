; Spec# Program Verifier Version 0.80, Copyright (c) 2003-2006, Microsoft.
; Command Line Options: -nologo /prover:blank /print:boogie_tmp.@TIME@.bpl /proverLog:boogie_tmp.@TIME@.simplify loopInvOnDemand.bpl /infer:p2 /loopInvOnDemand /prover:zap
; M
(&& (&& ( forall  (A i v ) (= v (select1 (store1 A i v) i))) ( forall  (A i j v ) (==> (!= i j) (= (select1 (store1 A i v) j) (select1 A j)))) ( forall  (A o f v ) (= v (select2 (store2 A o f v) o f))) ( forall  (A o f p g v ) (==> (!= o p) (= (select2 (store2 A o f v) p g) (select2 A p g)))) ( forall  (A o f p g v ) (==> (!= f g) (= (select2 (store2 A o f v) p g) (select2 A p g)))) ( forall  (t ) ( PATS  (<: t t)  ) (<: t t)) ( forall  (t u v ) ( PATS  (MPAT (= true (<: t u)) (= true (<: u v))) ) (==> (&& (<: t u) (<: u v)) (<: t v))) ( forall  (t u ) ( PATS  (MPAT (<: t u) (<: u t)) ) (==> (&& (<: t u) (<: u t)) (= t u)))) (&& true true) (! (==> (==> (==> (&& true :41) (==> true (==> (&& (&& (<= 0 0) (<= 0 0)) (&& (<= 0 0) (<= 0 0))) (==> (&& (&& (&& (==> (==> (&& true :81) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> (&& (==> (==> (&& true :95) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> (> N 0) (&& (|| (&& (<= 0 m@2) (< m@2 N)) :739) (==> (&& (<= 0 m@2) (< m@2 N)) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> true realEnd_correct))))))) checkIfNgz_correct) (==> (==> (&& true :97) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> (&& (<= 0 i@2) (<= 0 m@2)) (==> (==> (==> (&& true :424) (==> (= i@2 i@3) (==> (= m@2 m@3) (==> true GeneratedUnifiedExit_correct)))) realEnd-2-GeneratedUnifiedExit_correct) realEnd-2-GeneratedUnifiedExit_correct)))) realEnd_correct)) (&& checkIfNgz_correct realEnd_correct))))) end_correct) (==> (==> (&& true :403) (==> (==> (==> (&& true :409) (==> true true)) ReallyLastGeneratedExit_correct) ReallyLastGeneratedExit_correct)) GeneratedUnifiedExit_correct)) (==> (==> (&& true :394) (==> J_body (==> (&& (<= 0 0) (<= 0 0)) (==> (< 0 N) (==> (&& (<= 0 0) (<= 0 0)) (==> (==> (==> (&& true :47) (==> J_body (==> (&& (<= 0 i@0) (<= 0 m@0)) (==> (< i@0 N) (==> (&& (<= 0 i@0) (<= 0 m@0)) (==> (&& (&& (==> (==> (&& true :54) (==> (&& (<= 0 i@0) (<= 0 m@0)) (==> (&& (<= 0 i@0) (<= 0 m@0)) (==> (==> (==> (&& true :420) (==> (= m@1 m@0) (==> true join_correct))) else-2-join_correct) else-2-join_correct)))) else_correct) (==> (==> (&& true :61) (==> (&& (<= 0 i@0) (<= 0 m@1)) (==> (= i@1 (+ i@0 1)) (==> (&& (<= 1 i@1) (<= 0 m@1)) (==> (&& (&& (==> (==> (&& true :396) (==> J_body (==> (&& (<= 0 i@1) (<= 0 m@1)) (==> (< i@1 N) (==> (&& (<= 0 i@1) (<= 0 m@1)) (==> false (==> true true))))))) join-2-body_correct) (==> (==> (&& true :414) (==> (= i@2 i@1) (==> (= m@2 m@1) (==> true end_correct)))) join-2-end_correct)) (==> (==> (&& true :79) (==> (&& (<= 1 i@1) (<= 0 m@1)) (&& (|| (&& (&& (&& (<= i@1 N) (<= 0 m@1)) (<= 1 i@1)) (< m@1 N)) :633) (==> (&& (&& (&& (<= i@1 N) (<= 0 m@1)) (<= 1 i@1)) (< m@1 N)) (==> (&& (<= 1 i@1) (<= 0 m@1)) (==> (==> (==> (&& true :426) (==> (= i@3 i@1) (==> (= m@3 m@1) (==> true GeneratedUnifiedExit_correct)))) JoinCheck-2-GeneratedUnifiedExit_correct) JoinCheck-2-GeneratedUnifiedExit_correct)))))) JoinCheck_correct)) (&& (&& join-2-body_correct join-2-end_correct) JoinCheck_correct)))))) join_correct)) (==> (==> (&& true :52) (==> (&& (<= 0 i@0) (<= 0 m@0)) (==> (&& (<= 0 i@0) (<= 0 i@0)) (==> (==> (==> (&& true :422) (==> (= m@1 i@0) (==> true join_correct))) then-2-join_correct) then-2-join_correct)))) then_correct)) (&& then_correct else_correct))))))) body_correct) body_correct)))))) start-2-body_correct)) (==> (==> (&& true :412) (==> (= 0 i@2) (==> (= 0 m@2) (==> true end_correct)))) start-2-end_correct)) (&& start-2-body_correct start-2-end_correct))))) start_correct) start_correct)))
; Valid
